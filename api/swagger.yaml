---
swagger: "2.0"
info:
  description: "Swagger Spec file that describes PI Web API"
  version: "1.11.0.640"
  title: "PI Web API 2018 Swagger Spec"
  termsOfService: "https://pisquare.osisoft.com/docs/DOC-1105"
  contact:
    name: "OSIsoft, LLC."
    url: "https://techsupport.osisoft.com/"
    email: "techsupport@osisoft.com"
  license:
    name: "Apache 2.0 License"
    url: "http://tempuri.org/license"
host: "clsaf"
basePath: "/piwebapi"
schemes:
- "https"
paths:
  /:
    get:
      tags:
      - "Home"
      summary: "Get top level links for this PI System Web API instance."
      operationId: "Home_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters: []
      responses:
        200:
          description: "Links to top level collections and system information."
          schema:
            $ref: "#/definitions/Landing"
  /analyses:
    get:
      tags:
      - "Analysis"
      summary: "Retrieve an Analysis by path."
      description: "This method returns an Analysis based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "Analysis_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the Analysis."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified Analysis."
          schema:
            $ref: "#/definitions/Analysis"
  /analyses/{webId}:
    get:
      tags:
      - "Analysis"
      summary: "Retrieve an Analysis."
      operationId: "Analysis_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Analysis."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified Analysis."
          schema:
            $ref: "#/definitions/Analysis"
    delete:
      tags:
      - "Analysis"
      summary: "Delete an Analysis."
      operationId: "Analysis_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Analysis to delete."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The Analysis was deleted."
    patch:
      tags:
      - "Analysis"
      summary: "Update an Analysis."
      operationId: "Analysis_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Analysis to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "analysis"
        description: "A partial Analysis containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/Analysis"
        x-exportParamName: "Analysis"
      responses:
        204:
          description: "The Analysis was updated."
  /analyses/{webId}/categories:
    get:
      tags:
      - "Analysis"
      summary: "Get an Analysis' categories."
      operationId: "Analysis_GetCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Analysis."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of categories."
          schema:
            $ref: "#/definitions/Items[AnalysisCategory]"
  /analyses/{webId}/security:
    get:
      tags:
      - "Analysis"
      summary: "Get the security information of the specified security item associated\
        \ with the Analysis for a specified user."
      operationId: "Analysis_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Analysis for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /analyses/{webId}/securityentries:
    get:
      tags:
      - "Analysis"
      summary: "Retrieve the security entries associated with the analysis based on\
        \ the specified criteria. By default, all security entries for this analysis\
        \ are returned."
      operationId: "Analysis_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "Analysis"
      summary: "Create a security entry owned by the analysis."
      operationId: "Analysis_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis, where the security entry will be created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /analyses/{webId}/securityentries/{name}:
    get:
      tags:
      - "Analysis"
      summary: "Retrieve the security entry associated with the analysis with the\
        \ specified name."
      operationId: "Analysis_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the analysis."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "Analysis"
      summary: "Update a security entry owned by the analysis."
      operationId: "Analysis_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the analysis, where the security entry will be updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "Analysis"
      summary: "Delete a security entry owned by the analysis."
      operationId: "Analysis_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the analysis, where the security entry will be deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was deleted."
  /analyses/search:
    get:
      tags:
      - "Analysis"
      summary: "Retrieve analyses based on the specified conditions. By default, returns\
        \ all analyses."
      operationId: "Analysis_GetAnalysesQuery"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "databaseWebId"
        in: "query"
        description: "The ID of the asset database to use as the root of the query."
        required: false
        type: "string"
        x-exportParamName: "DatabaseWebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string is a list of filters used to perform an AFSearch\
          \ for the analyses in the asset database. An example would be: \"query=\
          \ Name:=MyAnalysis1* Template:=AnalysisTemplate*\"."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of analyses matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[Analysis]"
  /analysiscategories:
    get:
      tags:
      - "AnalysisCategory"
      summary: "Retrieve an analysis category by path."
      operationId: "AnalysisCategory_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the target analysis category."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified analysis category."
          schema:
            $ref: "#/definitions/AnalysisCategory"
  /analysiscategories/{webId}:
    get:
      tags:
      - "AnalysisCategory"
      summary: "Retrieve an analysis category."
      operationId: "AnalysisCategory_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified analysis category."
          schema:
            $ref: "#/definitions/AnalysisCategory"
    delete:
      tags:
      - "AnalysisCategory"
      summary: "Delete an analysis category."
      operationId: "AnalysisCategory_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis category to delete."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The analysis category was deleted."
    patch:
      tags:
      - "AnalysisCategory"
      summary: "Update an analysis category by replacing items in its definition."
      operationId: "AnalysisCategory_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis category to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "category"
        description: "A partial analysis category containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/AnalysisCategory"
        x-exportParamName: "Category"
      responses:
        204:
          description: "The analysis category was updated."
  /analysiscategories/{webId}/security:
    get:
      tags:
      - "AnalysisCategory"
      summary: "Get the security information of the specified security item associated\
        \ with the analysis category for a specified user."
      operationId: "AnalysisCategory_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis category for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /analysiscategories/{webId}/securityentries:
    get:
      tags:
      - "AnalysisCategory"
      summary: "Retrieve the security entries associated with the analysis category\
        \ based on the specified criteria. By default, all security entries for this\
        \ analysis category are returned."
      operationId: "AnalysisCategory_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "AnalysisCategory"
      summary: "Create a security entry owned by the analysis category."
      operationId: "AnalysisCategory_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis category, where the security entry will\
          \ be created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /analysiscategories/{webId}/securityentries/{name}:
    get:
      tags:
      - "AnalysisCategory"
      summary: "Retrieve the security entry associated with the analysis category\
        \ with the specified name."
      operationId: "AnalysisCategory_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the analysis category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "AnalysisCategory"
      summary: "Update a security entry owned by the analysis category."
      operationId: "AnalysisCategory_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the analysis category, where the security entry will\
          \ be updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "AnalysisCategory"
      summary: "Delete a security entry owned by the analysis category."
      operationId: "AnalysisCategory_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the analysis category, where the security entry will\
          \ be deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was deleted."
  /analysisruleplugins:
    get:
      tags:
      - "AnalysisRulePlugIn"
      summary: "Retrieve an Analysis Rule Plug-in by path."
      description: "This method returns an Analysis Rule Plug-in based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "AnalysisRulePlugIn_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the Analysis Rule Plug-in."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified Analysis Rule Plug-in."
          schema:
            $ref: "#/definitions/AnalysisRulePlugIn"
  /analysisruleplugins/{webId}:
    get:
      tags:
      - "AnalysisRulePlugIn"
      summary: "Retrieve an Analysis Rule Plug-in."
      operationId: "AnalysisRulePlugIn_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Analysis Rule Plug-in."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified Analysis Rule Plug-in."
          schema:
            $ref: "#/definitions/AnalysisRulePlugIn"
  /analysisrules:
    get:
      tags:
      - "AnalysisRule"
      summary: "Retrieve an Analysis Rule by path."
      description: "This method returns an Analysis Rule based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "AnalysisRule_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the Analysis Rule."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested Analysis Rule."
          schema:
            $ref: "#/definitions/AnalysisRule"
  /analysisrules/{webId}:
    get:
      tags:
      - "AnalysisRule"
      summary: "Retrieve an Analysis Rule."
      operationId: "AnalysisRule_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Analysis Rule."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested Analysis Rule."
          schema:
            $ref: "#/definitions/AnalysisRule"
    delete:
      tags:
      - "AnalysisRule"
      summary: "Delete an Analysis Rule."
      operationId: "AnalysisRule_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Analysis Rule."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The Analysis Rule was deleted."
    patch:
      tags:
      - "AnalysisRule"
      summary: "Update an Analysis Rule by replacing items in its definition."
      operationId: "AnalysisRule_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Analysis Rule."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "analysisRule"
        description: "A partial Analysis Rule containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/AnalysisRule"
        x-exportParamName: "AnalysisRule"
      responses:
        204:
          description: "The Analysis Rule was updated."
  /analysisrules/{webId}/analysisrules:
    get:
      tags:
      - "AnalysisRule"
      summary: "Get the child Analysis Rules of the Analysis Rule."
      operationId: "AnalysisRule_GetAnalysisRules"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the parent Analysis Rule."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding Analysis Rules. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include Analysis Rules nested\
          \ further than the immediate children of the searchRoot. The default is\
          \ 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of child Analysis Rules."
          schema:
            $ref: "#/definitions/Items[AnalysisRule]"
    post:
      tags:
      - "AnalysisRule"
      summary: "Create a new Analysis Rule as a child of an existing Analysis Rule."
      operationId: "AnalysisRule_CreateAnalysisRule"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the parent Analysis Rule, on which to create the child\
          \ Analysis Rule."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "analysisRule"
        description: "The definition of the new Analysis Rule."
        required: true
        schema:
          $ref: "#/definitions/AnalysisRule"
        x-exportParamName: "AnalysisRule"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The Analysis Rule was created. The response's Location header\
            \ is a link to the created Analysis Rule."
  /analysistemplates:
    get:
      tags:
      - "AnalysisTemplate"
      summary: "Retrieve an analysis template by path."
      description: "This method returns an analysis template based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "AnalysisTemplate_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the analysis template."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified analysis template."
          schema:
            $ref: "#/definitions/AnalysisTemplate"
    post:
      tags:
      - "AnalysisTemplate"
      summary: "Create an Analysis template based upon a specified Analysis."
      operationId: "AnalysisTemplate_CreateFromAnalysis"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "analysisWebId"
        in: "query"
        description: "The ID of the Analysis, on which the template is created."
        required: true
        type: "string"
        x-exportParamName: "AnalysisWebId"
      - name: "name"
        in: "query"
        description: "The name for the created template, which must be unique within\
          \ the database's AnalysisTemplate collection. If the name ends with an asterisk\
          \ (*), then a unique name will be generated based on the supplied name.\
          \ The default is the specified Analysis' name suffixed with an asterisk\
          \ (*)."
        required: false
        type: "string"
        x-exportParamName: "Name"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The Analysis Template was created. The response's Location\
            \ header is a link to the created Analysis Template."
  /analysistemplates/{webId}:
    get:
      tags:
      - "AnalysisTemplate"
      summary: "Retrieve an analysis template."
      operationId: "AnalysisTemplate_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified analysis template."
          schema:
            $ref: "#/definitions/AnalysisTemplate"
    delete:
      tags:
      - "AnalysisTemplate"
      summary: "Delete an analysis template."
      description: "Deleting an analysis template will delete any analysis which was\
        \ created from it, unless the analysis is tied to a notification."
      operationId: "AnalysisTemplate_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis template to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The analysis template was deleted."
    patch:
      tags:
      - "AnalysisTemplate"
      summary: "Update an analysis template by replacing items in its definition."
      operationId: "AnalysisTemplate_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis template to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "template"
        description: "A partial analysis template containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/AnalysisTemplate"
        x-exportParamName: "Template"
      responses:
        204:
          description: "The analysis template was updated."
  /analysistemplates/{webId}/categories:
    get:
      tags:
      - "AnalysisTemplate"
      summary: "Get an analysis template's categories."
      operationId: "AnalysisTemplate_GetCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of categories."
          schema:
            $ref: "#/definitions/Items[AnalysisCategory]"
  /analysistemplates/{webId}/security:
    get:
      tags:
      - "AnalysisTemplate"
      summary: "Get the security information of the specified security item associated\
        \ with the analysis template for a specified user."
      operationId: "AnalysisTemplate_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis template for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /analysistemplates/{webId}/securityentries:
    get:
      tags:
      - "AnalysisTemplate"
      summary: "Retrieve the security entries associated with the analysis template\
        \ based on the specified criteria. By default, all security entries for this\
        \ analysis template are returned."
      operationId: "AnalysisTemplate_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "AnalysisTemplate"
      summary: "Create a security entry owned by the analysis template."
      operationId: "AnalysisTemplate_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the analysis template, where the security entry will\
          \ be created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /analysistemplates/{webId}/securityentries/{name}:
    get:
      tags:
      - "AnalysisTemplate"
      summary: "Retrieve the security entry associated with the analysis template\
        \ with the specified name."
      operationId: "AnalysisTemplate_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the analysis template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "AnalysisTemplate"
      summary: "Update a security entry owned by the analysis template."
      operationId: "AnalysisTemplate_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the analysis template, where the security entry will\
          \ be updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "AnalysisTemplate"
      summary: "Delete a security entry owned by the analysis template."
      operationId: "AnalysisTemplate_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the analysis template, where the security entry will\
          \ be deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was deleted."
  /analysistemplates/search:
    get:
      tags:
      - "AnalysisTemplate"
      summary: "Retrieve analysis templates based on the specified conditions. By\
        \ default, returns all analysis templates."
      operationId: "AnalysisTemplate_GetAnalysisTemplatesQuery"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "databaseWebId"
        in: "query"
        description: "The ID of the asset database to use as the root of the query."
        required: false
        type: "string"
        x-exportParamName: "DatabaseWebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string is a list of filters used to perform an AFSearch\
          \ for the analyses in the asset database. An example would be: \"query=\
          \ Name:=MyAnalysisTemplate1*\"."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of analysis templates matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[AnalysisTemplate]"
  /assetdatabases:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve an Asset Database by path."
      description: "This method returns an asset database based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "AssetDatabase_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the database."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified database."
          schema:
            $ref: "#/definitions/AssetDatabase"
  /assetdatabases/{webId}:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve an Asset Database."
      operationId: "AssetDatabase_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified database."
          schema:
            $ref: "#/definitions/AssetDatabase"
    delete:
      tags:
      - "AssetDatabase"
      summary: "Delete an asset database."
      operationId: "AssetDatabase_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The database was deleted."
    patch:
      tags:
      - "AssetDatabase"
      summary: "Update an asset database by replacing items in its definition."
      operationId: "AssetDatabase_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "database"
        description: "A partial database containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/AssetDatabase"
        x-exportParamName: "Database"
      responses:
        204:
          description: "The database was updated."
  /assetdatabases/{webId}/analyses:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve analyses based on the specified conditions."
      description: "Users can search for the analyses based on specific search parameters.\
        \ If no parameters are specified in the search, the default values for each\
        \ parameter will be used and will return the analyses that match the default\
        \ search."
      operationId: "AssetDatabase_FindAnalyses"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database to search for the analyses."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "field"
        in: "query"
        description: "Specifies which of the object's properties are searched. Multiple\
          \ search fields may be specified with multiple instances of the parameter.\
          \ The default is 'Name'."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Field"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string used for finding analyses. The default is null."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of analyses matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[Analysis]"
  /assetdatabases/{webId}/analysiscategories:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve analysis categories for a given Asset Database."
      operationId: "AssetDatabase_GetAnalysisCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The analysis categories that exist in the database."
          schema:
            $ref: "#/definitions/Items[AnalysisCategory]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Create an analysis category at the Asset Database root."
      operationId: "AssetDatabase_CreateAnalysisCategory"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database in which to create the analysis category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "analysisCategory"
        description: "The new analysis category definition."
        required: true
        schema:
          $ref: "#/definitions/AnalysisCategory"
        x-exportParamName: "AnalysisCategory"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The analysis category was created. The response's Location\
            \ header is a link to the analysis category."
  /assetdatabases/{webId}/analysistemplates:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve analysis templates based on the specified criteria. By default,\
        \ all analysis templates in the specified Asset Database are returned."
      description: "Users can search for the analysis templates based on specific\
        \ search parameters. If no parameters are specified in the search, the default\
        \ values for each parameter will be used and will return the templates that\
        \ match the default search."
      operationId: "AssetDatabase_GetAnalysisTemplates"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database to search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "field"
        in: "query"
        description: "Specifies which of the object's properties are searched. Multiple\
          \ search fields may be specified with multiple instances of the parameter.\
          \ The default is 'Name'."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Field"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string used for finding objects. The default is no\
          \ query string."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of analysis templates matching the specified condition."
          schema:
            $ref: "#/definitions/Items[AnalysisTemplate]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Create an analysis template at the Asset Database root."
      description: "Analyses that are based on an analysis template will inherit characteristics\
        \ defined in the template."
      operationId: "AssetDatabase_CreateAnalysisTemplate"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database in which to create the analysis template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "template"
        description: "The new analysis template definition."
        required: true
        schema:
          $ref: "#/definitions/AnalysisTemplate"
        x-exportParamName: "Template"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The analysis template was created. The response's Location\
            \ header is a link to the created template."
  /assetdatabases/{webId}/attributecategories:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve attribute categories for a given Asset Database."
      operationId: "AssetDatabase_GetAttributeCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The attribute categories that exist in the database."
          schema:
            $ref: "#/definitions/Items[AttributeCategory]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Create an attribute category at the Asset Database root."
      operationId: "AssetDatabase_CreateAttributeCategory"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database in which to create the attribute category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "attributeCategory"
        description: "The new attribute category definition."
        required: true
        schema:
          $ref: "#/definitions/AttributeCategory"
        x-exportParamName: "AttributeCategory"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The attribute category was created. The response's Location\
            \ header is a link to the attribute category."
  /assetdatabases/{webId}/elementattributes:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieves a list of element attributes matching the specified filters\
        \ from the specified asset database."
      operationId: "AssetDatabase_FindElementAttributes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset database to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "attributeCategory"
        in: "query"
        description: "Specify that returned attributes must have this category. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeCategory"
      - name: "attributeDescriptionFilter"
        in: "query"
        description: "The attribute description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeDescriptionFilter"
      - name: "attributeNameFilter"
        in: "query"
        description: "The attribute name filter string used for finding objects. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeNameFilter"
      - name: "attributeType"
        in: "query"
        description: "Specify that returned attributes' value type must be this value\
          \ type. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeType"
      - name: "elementCategory"
        in: "query"
        description: "Specify that the owner of the returned attributes must have\
          \ this category. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ElementCategory"
      - name: "elementDescriptionFilter"
        in: "query"
        description: "The element description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ElementDescriptionFilter"
      - name: "elementNameFilter"
        in: "query"
        description: "The element name filter string used for finding objects. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ElementNameFilter"
      - name: "elementTemplate"
        in: "query"
        description: "Specify that the owner of the returned attributes must have\
          \ this template or a template derived from this template. The default is\
          \ no filter."
        required: false
        type: "string"
        x-exportParamName: "ElementTemplate"
      - name: "elementType"
        in: "query"
        description: "Specify that the element of the returned attributes must have\
          \ this AFElementType. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ElementType"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned (the page size).\
          \ The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include objects nested further\
          \ than immediate children of the given resource. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "a list of matching attributes."
          schema:
            $ref: "#/definitions/Items[Attribute]"
  /assetdatabases/{webId}/elementcategories:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve element categories for a given Asset Database."
      operationId: "AssetDatabase_GetElementCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The element categories that exist in the database."
          schema:
            $ref: "#/definitions/Items[ElementCategory]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Create an element category at the Asset Database root."
      operationId: "AssetDatabase_CreateElementCategory"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database in which to create the element category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "elementCategory"
        description: "The new element category definition."
        required: true
        schema:
          $ref: "#/definitions/ElementCategory"
        x-exportParamName: "ElementCategory"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The element category was created. The response's Location\
            \ header is a link to the element category."
  /assetdatabases/{webId}/elements:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve elements based on the specified conditions. By default, this\
        \ method selects immediate children of the specified asset database."
      description: "Users can search for the elements based on specific search parameters.\
        \ If no parameters are specified in the search, the default values for each\
        \ parameter will be used and will return the elements that match the default\
        \ search."
      operationId: "AssetDatabase_GetElements"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that returned elements must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "descriptionFilter"
        in: "query"
        description: "Specify that returned elements must have this description. The\
          \ default is no description filter."
        required: false
        type: "string"
        x-exportParamName: "DescriptionFilter"
      - name: "elementType"
        in: "query"
        description: "Specify that returned elements must have this type. The default\
          \ type is 'Any'."
        required: false
        type: "string"
        x-exportParamName: "ElementType"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding objects. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include objects nested further\
          \ than the immediate children of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "templateName"
        in: "query"
        description: "Specify that returned elements must have this template or a\
          \ template derived from this template. The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of elements matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[Element]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Create a child element."
      operationId: "AssetDatabase_CreateElement"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset database on which to create the element."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "element"
        description: "The new element definition."
        required: true
        schema:
          $ref: "#/definitions/Element"
        x-exportParamName: "Element"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The element was created. The response's Location header is\
            \ a link to the element."
  /assetdatabases/{webId}/elementtemplates:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve element templates based on the specified criteria. Only templates\
        \ of instance type \"Element\" and \"EventFrame\" are returned. By default,\
        \ all element and event frame templates in the specified Asset Database are\
        \ returned."
      description: "Users can search for the element and event frame template based\
        \ on specific search parameters. If no parameters are specified in the search,\
        \ the default values for each parameter will be used and will return the templates\
        \ that match the default search."
      operationId: "AssetDatabase_GetElementTemplates"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database to search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "field"
        in: "query"
        description: "Specifies which of the object's properties are searched. Multiple\
          \ search fields may be specified with multiple instances of the parameter.\
          \ The default is 'Name'."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Field"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string used for finding objects. The default is no\
          \ query string."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of element templates matching the specified condition."
          schema:
            $ref: "#/definitions/Items[ElementTemplate]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Create a template at the Asset Database root. Specify InstanceType\
        \ of \"Element\" or \"EventFrame\" to create element or event frame template\
        \ respectively. Only these two types of templates can be created."
      description: "Elements and event frames that are based on an element template\
        \ will inherit characteristics defined in the template."
      operationId: "AssetDatabase_CreateElementTemplate"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database in which to create the element template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "template"
        description: "The new element template definition."
        required: true
        schema:
          $ref: "#/definitions/ElementTemplate"
        x-exportParamName: "Template"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The element template was created. The response's Location\
            \ header is a link to the created template."
  /assetdatabases/{webId}/enumerationsets:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve enumeration sets for given asset database."
      operationId: "AssetDatabase_GetEnumerationSets"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified enumeration sets."
          schema:
            $ref: "#/definitions/Items[EnumerationSet]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Create an enumeration set at the Asset Database."
      operationId: "AssetDatabase_CreateEnumerationSet"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database in which to create the enumeration set."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "enumerationSet"
        description: "The new enumeration set definition."
        required: true
        schema:
          $ref: "#/definitions/EnumerationSet"
        x-exportParamName: "EnumerationSet"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The enumeration set was created. The response's Location header\
            \ is a link to the created enumeration set."
  /assetdatabases/{webId}/eventframeattributes:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieves a list of event frame attributes matching the specified\
        \ filters from the specified asset database."
      operationId: "AssetDatabase_FindEventFrameAttributes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset database to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "attributeCategory"
        in: "query"
        description: "Specify that returned attributes must have this category. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeCategory"
      - name: "attributeDescriptionFilter"
        in: "query"
        description: "The attribute description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeDescriptionFilter"
      - name: "attributeNameFilter"
        in: "query"
        description: "The attribute name filter string used for finding objects. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeNameFilter"
      - name: "attributeType"
        in: "query"
        description: "Specify that returned attributes' value type must be this value\
          \ type. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeType"
      - name: "endTime"
        in: "query"
        description: "A string representing the latest ending time for the event frames\
          \ to be matched. The endTime must be greater than or equal to the startTime.\
          \ The default is '*'."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "eventFrameCategory"
        in: "query"
        description: "Specify that the owner of the returned attributes must have\
          \ this category. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "EventFrameCategory"
      - name: "eventFrameDescriptionFilter"
        in: "query"
        description: "The event frame description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "EventFrameDescriptionFilter"
      - name: "eventFrameNameFilter"
        in: "query"
        description: "The event frame name filter string used for finding objects.\
          \ The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "EventFrameNameFilter"
      - name: "eventFrameTemplate"
        in: "query"
        description: "Specify that the owner of the returned attributes must have\
          \ this template or a template derived from this template. The default is\
          \ no filter."
        required: false
        type: "string"
        x-exportParamName: "EventFrameTemplate"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned (the page size).\
          \ The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "referencedElementNameFilter"
        in: "query"
        description: "The name query string which must match the name of a referenced\
          \ element. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ReferencedElementNameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include objects nested further\
          \ than immediate children of the given resource. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "searchMode"
        in: "query"
        description: "Determines how the startTime and endTime parameters are treated\
          \ when searching for event frames. The default is 'Overlapped'."
        required: false
        type: "string"
        x-exportParamName: "SearchMode"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "startTime"
        in: "query"
        description: "A string representing the earliest starting time for the event\
          \ frames to be matched. startTime must be less than or equal to the endTime.\
          \ The default is '*-8h'."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "a list of matching attributes."
          schema:
            $ref: "#/definitions/Items[Attribute]"
  /assetdatabases/{webId}/eventframes:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve event frames based on the specified conditions. By default,\
        \ returns all children of the specified root resource that have been active\
        \ in the past 8 hours."
      operationId: "AssetDatabase_GetEventFrames"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset database to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "canBeAcknowledged"
        in: "query"
        description: "Specify the returned event frames' canBeAcknowledged property.\
          \ The default is no canBeAcknowledged filter."
        required: false
        type: "boolean"
        x-exportParamName: "CanBeAcknowledged"
      - name: "categoryName"
        in: "query"
        description: "Specify that returned event frames must have this category.\
          \ The default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "endTime"
        in: "query"
        description: "The ending time for the search. The endTime must be greater\
          \ than or equal to the startTime. The searchMode parameter will control\
          \ whether the comparison will be performed against the event frame's startTime\
          \ or endTime. The default is '*' if searchMode is not one of the 'Backward*'\
          \ or 'Forward*' values."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "isAcknowledged"
        in: "query"
        description: "Specify the returned event frames' isAcknowledged property.\
          \ The default no isAcknowledged filter."
        required: false
        type: "boolean"
        x-exportParamName: "IsAcknowledged"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding event frames. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "referencedElementNameFilter"
        in: "query"
        description: "The name query string which must match the name of a referenced\
          \ element. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ReferencedElementNameFilter"
      - name: "referencedElementTemplateName"
        in: "query"
        description: "Specify that returned event frames must have an element in the\
          \ event frame's referenced elements collection that derives from the template.\
          \ Specify this parameter by name."
        required: false
        type: "string"
        x-exportParamName: "ReferencedElementTemplateName"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies whether the search should include objects nested further\
          \ than the immediate children of the search root. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "searchMode"
        in: "query"
        description: "Determines how the startTime and endTime parameters are treated\
          \ when searching for event frame objects to be included in the returned\
          \ collection. If this parameter is one of the 'Backward*' or 'Forward*'\
          \ values, none of endTime, sortField, or sortOrder may be specified. The\
          \ default is 'Overlapped'."
        required: false
        type: "string"
        x-exportParamName: "SearchMode"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "severity"
        in: "query"
        description: "Specify that returned event frames must have this severity.\
          \ Multiple severity values may be specified with multiple instances of the\
          \ parameter. The default is no severity filter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Severity"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name' if searchMode is not one of the 'Backward*'\
          \ or 'Forward*' values."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending' if searchMode is not one of the 'Backward*' or 'Forward*'\
          \ values."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "startTime"
        in: "query"
        description: "The starting time for the search. startTime must be less than\
          \ or equal to the endTime. The searchMode parameter will control whether\
          \ the comparison will be performed against the event frame's startTime or\
          \ endTime. The default is '*-8h'."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "templateName"
        in: "query"
        description: "Specify that returned event frames must have this template or\
          \ a template derived from this template. The default is no template filter.\
          \ Specify this parameter by name."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of event frames matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[EventFrame]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Create an event frame."
      operationId: "AssetDatabase_CreateEventFrame"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database on which to create the event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "eventFrame"
        description: "The new event frame definition."
        required: true
        schema:
          $ref: "#/definitions/EventFrame"
        x-exportParamName: "EventFrame"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The event frame was created. The response's Location header\
            \ is a link to the event frame."
  /assetdatabases/{webId}/export:
    get:
      tags:
      - "AssetDatabase"
      summary: "Export the asset database."
      operationId: "AssetDatabase_Export"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "endTime"
        in: "query"
        description: "The latest ending time for AFEventFrame, AFTransfer, and AFCase\
          \ objects that may be part of the export. The default is '*'."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "exportMode"
        in: "query"
        description: "Indicates the type of export to perform. The default is 'StrongReferences'.\
          \ Multiple export modes may be specified by using multiple instances of\
          \ exportMode."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "ExportMode"
      - name: "startTime"
        in: "query"
        description: "The earliest starting time for AFEventFrame, AFTransfer, and\
          \ AFCase objects that may be part of the export. The default is '*-30d'."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      responses:
        200:
          description: "Database exported. The response body contains the serialized\
            \ database."
  /assetdatabases/{webId}/import:
    post:
      tags:
      - "AssetDatabase"
      summary: "Import an asset database."
      operationId: "AssetDatabase_Import"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "importMode"
        in: "query"
        description: "Indicates the type of import to perform. The default is 'AllowCreate\
          \ | AllowUpdate | AutoCheckIn'. Multiple import modes may be specified by\
          \ using multiple instances of importMode."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "ImportMode"
      responses:
        200:
          description: "Database imported."
  /assetdatabases/{webId}/referencedelements:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve referenced elements based on the specified conditions. By\
        \ default, this method selects all referenced elements at the root level of\
        \ the asset database."
      description: "Users can search for the referenced elements based on specific\
        \ search parameters. If no parameters are specified in the search, the default\
        \ values for each parameter will be used and will return the elements that\
        \ match the default search."
      operationId: "AssetDatabase_GetReferencedElements"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the resource to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that returned elements must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "descriptionFilter"
        in: "query"
        description: "Specify that returned elements must have this description. The\
          \ default is no description filter."
        required: false
        type: "string"
        x-exportParamName: "DescriptionFilter"
      - name: "elementType"
        in: "query"
        description: "Specify that returned elements must have this type. The default\
          \ type is 'Any'."
        required: false
        type: "string"
        x-exportParamName: "ElementType"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding objects. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "templateName"
        in: "query"
        description: "Specify that returned elements must have this template or a\
          \ template derived from this template. The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of referenced elements matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[Element]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Add a reference to an existing element to the specified database."
      operationId: "AssetDatabase_AddReferencedElement"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database which the referenced element will be\
          \ added to."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "referencedElementWebId"
        in: "query"
        description: "The ID of the referenced element. Multiple referenced elements\
          \ may be specified with multiple instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "ReferencedElementWebId"
      - name: "referenceType"
        in: "query"
        description: "The name of the reference type between the parent and the referenced\
          \ element. This must be a \"strong\" reference type. The default is \"parent-child\"\
          ."
        required: false
        type: "string"
        x-exportParamName: "ReferenceType"
      responses:
        204:
          description: "The referenced element was successfully added."
        409:
          description: "The referenced element already exists in the collection."
          schema:
            $ref: "#/definitions/Errors"
    delete:
      tags:
      - "AssetDatabase"
      summary: "Remove a reference to an existing element from the specified database."
      operationId: "AssetDatabase_RemoveReferencedElement"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database which the referenced element will be\
          \ removed from."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "referencedElementWebId"
        in: "query"
        description: "The ID of the referenced element. Multiple referenced elements\
          \ may be specified with multiple instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "ReferencedElementWebId"
      responses:
        204:
          description: "The referenced element was successfully removed."
  /assetdatabases/{webId}/security:
    get:
      tags:
      - "AssetDatabase"
      summary: "Get the security information of the specified security item associated\
        \ with the asset database for a specified user."
      operationId: "AssetDatabase_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset database for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security information to be\
          \ returned. Multiple security items may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only 'Default' security\
          \ item of the security information will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "SecurityItem"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "Unsupported security item; an invalid or local account is\
            \ specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /assetdatabases/{webId}/securityentries:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve the security entries of the specified security item associated\
        \ with the asset database based on the specified criteria. By default, all\
        \ security entries for this asset database are returned."
      operationId: "AssetDatabase_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security entries information\
          \ to be returned. If the parameter is not specified, security entries of\
          \ the 'Default' security item will be returned."
        required: false
        type: "string"
        x-exportParamName: "SecurityItem"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Create a security entry owned by the asset database."
      operationId: "AssetDatabase_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset database where the security entry will be\
          \ created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security entries to be created.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be created."
        required: false
        type: "string"
        x-exportParamName: "SecurityItem"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /assetdatabases/{webId}/securityentries/{name}:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve the security entry of the specified security item associated\
        \ with the asset database with the specified name."
      operationId: "AssetDatabase_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the asset database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security entries information\
          \ to be returned. If the parameter is not specified, security entries of\
          \ the 'Default' security item will be returned."
        required: false
        type: "string"
        x-exportParamName: "SecurityItem"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "AssetDatabase"
      summary: "Update a security entry owned by the asset database."
      operationId: "AssetDatabase_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the asset database where the security entry will be\
          \ updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security entries to be updated.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be updated."
        required: false
        type: "string"
        x-exportParamName: "SecurityItem"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "AssetDatabase"
      summary: "Delete a security entry owned by the asset database."
      operationId: "AssetDatabase_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the asset database where the security entry will be\
          \ deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security entries to be deleted.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be deleted."
        required: false
        type: "string"
        x-exportParamName: "SecurityItem"
      responses:
        204:
          description: "The security entry was deleted."
  /assetdatabases/{webId}/tablecategories:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve table categories for a given Asset Database."
      operationId: "AssetDatabase_GetTableCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The table categories on the specified database."
          schema:
            $ref: "#/definitions/Items[TableCategory]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Create a table category on the Asset Database."
      operationId: "AssetDatabase_CreateTableCategory"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database in which to create the table category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "tableCategory"
        description: "The new table category definition."
        required: true
        schema:
          $ref: "#/definitions/TableCategory"
        x-exportParamName: "TableCategory"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The table category was created. The response's Location header\
            \ is a link to the table category."
  /assetdatabases/{webId}/tables:
    get:
      tags:
      - "AssetDatabase"
      summary: "Retrieve tables for given Asset Database."
      operationId: "AssetDatabase_GetTables"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The tables on the specified database."
          schema:
            $ref: "#/definitions/Items[Table]"
    post:
      tags:
      - "AssetDatabase"
      summary: "Create a table on the Asset Database."
      operationId: "AssetDatabase_CreateTable"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the database in which to create the table."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "table"
        description: "The new table definition."
        required: true
        schema:
          $ref: "#/definitions/Table"
        x-exportParamName: "Table"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The table was created. The response's Location header is a\
            \ link to the created table."
  /assetservers:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve a list of all Asset Servers known to this service."
      operationId: "AssetServer_List"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of servers."
          schema:
            $ref: "#/definitions/Items[AssetServer]"
  /assetservers#name:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve an Asset Server by name."
      description: "This method returns an asset server based on the name associated\
        \ with it. Users should primarily search with the WebID when available."
      operationId: "AssetServer_GetByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "query"
        description: "The name of the server."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested server."
          schema:
            $ref: "#/definitions/AssetServer"
  /assetservers#path:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve an Asset Server by path."
      description: "This method returns an asset server based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "AssetServer_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the server."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested server."
          schema:
            $ref: "#/definitions/AssetServer"
  /assetservers/{webId}:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve an Asset Server."
      operationId: "AssetServer_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested server."
          schema:
            $ref: "#/definitions/AssetServer"
  /assetservers/{webId}/analysisruleplugins:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve a list of all Analysis Rule Plug-in's."
      operationId: "AssetServer_GetAnalysisRulePlugIns"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset server, where the Analysis Rule Plug-in's\
          \ are installed."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of Analysis Rule Plug-in's."
          schema:
            $ref: "#/definitions/Items[AnalysisRulePlugIn]"
  /assetservers/{webId}/assetdatabases:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve a list of all Asset Databases on the specified Asset Server."
      operationId: "AssetServer_GetDatabases"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of databases."
          schema:
            $ref: "#/definitions/Items[AssetDatabase]"
    post:
      tags:
      - "AssetServer"
      summary: "Create an asset database."
      operationId: "AssetServer_CreateAssetDatabase"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset server on which to create the database."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "database"
        description: "The new database definition."
        required: true
        schema:
          $ref: "#/definitions/AssetDatabase"
        x-exportParamName: "Database"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The database was created. The response's Location header is\
            \ a link to the database."
  /assetservers/{webId}/notificationcontacttemplates:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve a list of all notification contact templates on the specified\
        \ Asset Server."
      operationId: "AssetServer_GetNotificationContactTemplates"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of notification contact templates."
          schema:
            $ref: "#/definitions/Items[NotificationContactTemplate]"
  /assetservers/{webId}/security:
    get:
      tags:
      - "AssetServer"
      summary: "Get the security information of the specified security item associated\
        \ with the asset server for a specified user."
      operationId: "AssetServer_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset server for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security information to be\
          \ returned. Multiple security items may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only 'Default' security\
          \ item of the security information will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "SecurityItem"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "Unsupported security item; an invalid or local account is\
            \ specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /assetservers/{webId}/securityentries:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve the security entries of the specified security item associated\
        \ with the asset server based on the specified criteria. By default, all security\
        \ entries for this asset server are returned."
      operationId: "AssetServer_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security entries information\
          \ to be returned. If the parameter is not specified, security entries of\
          \ the 'Default' security item will be returned."
        required: false
        type: "string"
        x-exportParamName: "SecurityItem"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "AssetServer"
      summary: "Create a security entry owned by the asset server."
      operationId: "AssetServer_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset server where the security entry will be\
          \ created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security entries to be created.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be created."
        required: false
        type: "string"
        x-exportParamName: "SecurityItem"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /assetservers/{webId}/securityentries/{name}:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve the security entry of the specified security item associated\
        \ with the asset server with the specified name."
      operationId: "AssetServer_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the asset server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security entries information\
          \ to be returned. If the parameter is not specified, security entries of\
          \ the 'Default' security item will be returned."
        required: false
        type: "string"
        x-exportParamName: "SecurityItem"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "AssetServer"
      summary: "Update a security entry owned by the asset server."
      operationId: "AssetServer_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the asset server where the security entry will be\
          \ updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security entries to be updated.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be updated."
        required: false
        type: "string"
        x-exportParamName: "SecurityItem"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "AssetServer"
      summary: "Delete a security entry owned by the asset server."
      operationId: "AssetServer_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the asset server where the security entry will be\
          \ deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "securityItem"
        in: "query"
        description: "The security item of the desired security entries to be deleted.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be deleted."
        required: false
        type: "string"
        x-exportParamName: "SecurityItem"
      responses:
        204:
          description: "The security entry was deleted."
  /assetservers/{webId}/securityidentities:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve security identities based on the specified criteria. By default,\
        \ all security identities in the specified Asset Server are returned."
      operationId: "AssetServer_GetSecurityIdentities"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset server to search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "field"
        in: "query"
        description: "Specifies which of the object's properties are searched. The\
          \ default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "Field"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned. The default is\
          \ 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string used for finding objects. The default is no\
          \ query string."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security identities matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityIdentity]"
    post:
      tags:
      - "AssetServer"
      summary: "Create a security identity."
      operationId: "AssetServer_CreateSecurityIdentity"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset server on which to create the security identity."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityIdentity"
        description: "The new security identity definition."
        required: true
        schema:
          $ref: "#/definitions/SecurityIdentity"
        x-exportParamName: "SecurityIdentity"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security identity was created. The response's Location\
            \ header is a link to the security identity."
  /assetservers/{webId}/securityidentities#userIdentity:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve security identities for a specific user."
      operationId: "AssetServer_GetSecurityIdentitiesForUser"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity to search for."
        required: true
        type: "string"
        x-exportParamName: "UserIdentity"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security identities for the specified user."
          schema:
            $ref: "#/definitions/Items[SecurityIdentity]"
        400:
          description: "Unsupported security item; an invalid or local account is\
            \ specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /assetservers/{webId}/securitymappings:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve security mappings based on the specified criteria. By default,\
        \ all security mappings in the specified Asset Server are returned."
      operationId: "AssetServer_GetSecurityMappings"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset server to search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "field"
        in: "query"
        description: "Specifies which of the object's properties are searched. The\
          \ default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "Field"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned. The default is\
          \ 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string used for finding objects. The default is no\
          \ query string."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security mappings matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityMapping]"
    post:
      tags:
      - "AssetServer"
      summary: "Create a security mapping."
      operationId: "AssetServer_CreateSecurityMapping"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset server on which to create the security mapping."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityMapping"
        description: "The new security mapping definition."
        required: true
        schema:
          $ref: "#/definitions/SecurityMapping"
        x-exportParamName: "SecurityMapping"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security mapping was created. The response's Location\
            \ header is a link to the security mapping."
  /assetservers/{webId}/timeruleplugins:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve a list of all Time Rule Plug-in's."
      operationId: "AssetServer_GetTimeRulePlugIns"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the asset server, where the Time Rule Plug-in's are\
          \ installed."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of Time Rule Plug-in's."
          schema:
            $ref: "#/definitions/Items[TimeRulePlugIn]"
  /assetservers/{webId}/unitclasses:
    get:
      tags:
      - "AssetServer"
      summary: "Retrieve a list of all unit classes on the specified Asset Server."
      operationId: "AssetServer_GetUnitClasses"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of unit classes."
          schema:
            $ref: "#/definitions/Items[UnitClass]"
    post:
      tags:
      - "AssetServer"
      summary: "Create a unit class in the specified Asset Server."
      operationId: "AssetServer_CreateUnitClass"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "unitClass"
        description: "The new unit class definition."
        required: true
        schema:
          $ref: "#/definitions/UnitClass"
        x-exportParamName: "UnitClass"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The unit class was created. The response's Location header\
            \ is a link to the unit class."
  /attributecategories:
    get:
      tags:
      - "AttributeCategory"
      summary: "Retrieve an attribute category by path."
      operationId: "AttributeCategory_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the target attribute category."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified attribute category."
          schema:
            $ref: "#/definitions/AttributeCategory"
  /attributecategories/{webId}:
    get:
      tags:
      - "AttributeCategory"
      summary: "Retrieve an attribute category."
      operationId: "AttributeCategory_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The id of the attribute category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified attribute category."
          schema:
            $ref: "#/definitions/AttributeCategory"
    delete:
      tags:
      - "AttributeCategory"
      summary: "Delete an attribute category."
      operationId: "AttributeCategory_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute category to delete."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The attribute category was deleted."
    patch:
      tags:
      - "AttributeCategory"
      summary: "Update an attribute category by replacing items in its definition."
      operationId: "AttributeCategory_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute category to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "category"
        description: "A partial attribute category containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/AttributeCategory"
        x-exportParamName: "Category"
      responses:
        204:
          description: "The attribute category was updated."
  /attributecategories/{webId}/security:
    get:
      tags:
      - "AttributeCategory"
      summary: "Get the security information of the specified security item associated\
        \ with the attribute category for a specified user."
      operationId: "AttributeCategory_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute category for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /attributecategories/{webId}/securityentries:
    get:
      tags:
      - "AttributeCategory"
      summary: "Retrieve the security entries associated with the attribute category\
        \ based on the specified criteria. By default, all security entries for this\
        \ attribute category are returned."
      operationId: "AttributeCategory_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "AttributeCategory"
      summary: "Create a security entry owned by the attribute category."
      operationId: "AttributeCategory_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute category where the security entry will\
          \ be created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /attributecategories/{webId}/securityentries/{name}:
    get:
      tags:
      - "AttributeCategory"
      summary: "Retrieve the security entry associated with the attribute category\
        \ with the specified name."
      operationId: "AttributeCategory_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the attribute category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "AttributeCategory"
      summary: "Update a security entry owned by the attribute category."
      operationId: "AttributeCategory_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the attribute category where the security entry will\
          \ be updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "AttributeCategory"
      summary: "Delete a security entry owned by the attribute category."
      operationId: "AttributeCategory_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the attribute category where the security entry will\
          \ be deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was deleted."
  /attributes:
    get:
      tags:
      - "Attribute"
      summary: "Retrieve an attribute by path."
      description: "This method returns an attribute based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "Attribute_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the attribute."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested attribute."
          schema:
            $ref: "#/definitions/Attribute"
  /attributes/{webId}:
    get:
      tags:
      - "Attribute"
      summary: "Retrieve an attribute."
      operationId: "Attribute_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested attribute."
          schema:
            $ref: "#/definitions/Attribute"
    delete:
      tags:
      - "Attribute"
      summary: "Delete an attribute."
      operationId: "Attribute_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The attribute was deleted."
    patch:
      tags:
      - "Attribute"
      summary: "Update an attribute by replacing items in its definition."
      description: "If an attribute is based on a template, the user must make sure\
        \ to update the attribute appropriately so that it does not conflict with\
        \ the template's design. Once a template is applied to an attribute, it can\
        \ not be changed."
      operationId: "Attribute_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "attribute"
        description: "A partial attribute containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/Attribute"
        x-exportParamName: "Attribute"
      responses:
        204:
          description: "The attribute was updated."
  /attributes/{webId}/attributes:
    get:
      tags:
      - "Attribute"
      summary: "Get the child attributes of the specified attribute."
      operationId: "Attribute_GetAttributes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the parent attribute."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that returned attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "templateName"
        in: "query"
        description: "Specify that returned attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "trait"
        in: "query"
        description: "The name of the attribute trait. Multiple traits may be specified\
          \ with multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Trait"
      - name: "traitCategory"
        in: "query"
        description: "The category of the attribute traits. Multiple categories may\
          \ be specified with multiple instances of the parameter. If the parameter\
          \ is not specified, or if its value is \"all\", then all attribute traits\
          \ of all categories will be returned."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TraitCategory"
      - name: "valueType"
        in: "query"
        description: "Specify that returned attributes' value type must be the given\
          \ value type. The default is no value type filter."
        required: false
        type: "string"
        x-exportParamName: "ValueType"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of child attributes."
          schema:
            $ref: "#/definitions/Items[Attribute]"
    post:
      tags:
      - "Attribute"
      summary: "Create a new attribute as a child of the specified attribute."
      operationId: "Attribute_CreateAttribute"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the parent attribute on which to create the attribute."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "attribute"
        description: "The definition of the new attribute."
        required: true
        schema:
          $ref: "#/definitions/Attribute"
        x-exportParamName: "Attribute"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The attribute was created. The response's Location header\
            \ is a link to the created attribute."
  /attributes/{webId}/categories:
    get:
      tags:
      - "Attribute"
      summary: "Get an attribute's categories."
      operationId: "Attribute_GetCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of categories."
          schema:
            $ref: "#/definitions/Items[AttributeCategory]"
  /attributes/{webId}/config:
    post:
      tags:
      - "Attribute"
      summary: "Create or update an attribute's DataReference configuration (Create/Update\
        \ PI point for PI Point DataReference)."
      operationId: "Attribute_CreateConfig"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The attribute's DataReference configuration was created or\
            \ updated."
  /attributes/{webId}/value:
    get:
      tags:
      - "Attribute"
      summary: "Get the attribute's value. This call is intended for use with attributes\
        \ that have no data reference only. For attributes with a data reference,\
        \ consult the documentation for Streams."
      operationId: "Attribute_GetValue"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      responses:
        200:
          description: "The attribute's value."
          schema:
            $ref: "#/definitions/TimedValue"
    put:
      tags:
      - "Attribute"
      summary: "Set the value of a configuration item attribute. For attributes with\
        \ a data reference or non-configuration item attributes, consult the documentation\
        \ for streams."
      description: "Users must be aware of the value type that the attribute takes\
        \ before changing the value. If a value entered by the user does not match\
        \ the value type expressed in the attribute, it will not work or it will return\
        \ an error. Users should also be careful of what the value type means, for\
        \ instance, if a value type accepts strings and the user enters a number,\
        \ the attribute will interpret it as a string of characters and not as the\
        \ integer value that the user may have wanted."
      operationId: "Attribute_SetValue"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "value"
        description: "The value to write."
        required: true
        schema:
          $ref: "#/definitions/TimedValue"
        x-exportParamName: "Value"
      responses:
        204:
          description: "The value was set successfully."
  /attributes/multiple:
    get:
      tags:
      - "Attribute"
      summary: "Retrieve multiple attributes by web id or path."
      operationId: "Attribute_GetMultiple"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "asParallel"
        in: "query"
        description: "Specifies if the retrieval processes should be run in parallel\
          \ on the server. This may improve the response time for large amounts of\
          \ requested attributes. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "AsParallel"
      - name: "includeMode"
        in: "query"
        description: "The include mode for the return list. The default is 'All'."
        required: false
        type: "string"
        x-exportParamName: "IncludeMode"
      - name: "path"
        in: "query"
        description: "The path of an attribute. Multiple attributes may be specified\
          \ with multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webId"
        in: "query"
        description: "The ID of an attribute. Multiple attributes may be specified\
          \ with multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested attributes"
          schema:
            $ref: "#/definitions/Items[Item[Attribute]]"
        207:
          description: "Some or all items contain exceptions."
          schema:
            $ref: "#/definitions/Items[Item[Attribute]]"
  /attributes/search:
    get:
      tags:
      - "Attribute"
      summary: "Retrieve attributes based on the specified conditions. Returns attributes\
        \ using the specified search query string."
      operationId: "Attribute_GetAttributesQuery"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "databaseWebId"
        in: "query"
        description: "The ID of the asset database to use as the root of the query."
        required: false
        type: "string"
        x-exportParamName: "DatabaseWebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string is a list of filters used to perform an AFSearch\
          \ for the attributes in the asset database. An example would be: \"query=Element:{\
          \ Name:='MyElement' } Type:=Int32\"."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of attributes matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[Attribute]"
  /attributetemplates:
    get:
      tags:
      - "AttributeTemplate"
      summary: "Retrieve an attribute template by path."
      description: "This method returns an attribute template based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "AttributeTemplate_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the attribute template."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified attribute template."
          schema:
            $ref: "#/definitions/AttributeTemplate"
  /attributetemplates/{webId}:
    get:
      tags:
      - "AttributeTemplate"
      summary: "Retrieve an attribute template."
      operationId: "AttributeTemplate_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified attribute template."
          schema:
            $ref: "#/definitions/AttributeTemplate"
    delete:
      tags:
      - "AttributeTemplate"
      summary: "Delete an attribute template."
      description: "Deleting an attribute template will delete the attributes that\
        \ were created based on the template"
      operationId: "AttributeTemplate_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The attribute template was deleted."
    patch:
      tags:
      - "AttributeTemplate"
      summary: "Update an existing attribute template by replacing items in its definition."
      description: "Updating an attribute template will propagate changes to the attributes\
        \ that were created based on the template"
      operationId: "AttributeTemplate_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "template"
        description: "A partial attribute template containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/AttributeTemplate"
        x-exportParamName: "Template"
      responses:
        204:
          description: "The attribute template was updated."
  /attributetemplates/{webId}/attributetemplates:
    get:
      tags:
      - "AttributeTemplate"
      summary: "Retrieve an attribute template's child attribute templates."
      operationId: "AttributeTemplate_GetAttributeTemplates"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of child attribute templates."
          schema:
            $ref: "#/definitions/Items[AttributeTemplate]"
    post:
      tags:
      - "AttributeTemplate"
      summary: "Create an attribute template as a child of another attribute template."
      operationId: "AttributeTemplate_CreateAttributeTemplate"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the parent attribute template on which to create the\
          \ attribute template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "template"
        description: "The attribute template definition."
        required: true
        schema:
          $ref: "#/definitions/AttributeTemplate"
        x-exportParamName: "Template"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The attribute template was created. The response's Location\
            \ header is a link to the created resource."
  /attributetemplates/{webId}/categories:
    get:
      tags:
      - "AttributeTemplate"
      summary: "Get an attribute template's categories."
      operationId: "AttributeTemplate_GetCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the attribute template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of categories."
          schema:
            $ref: "#/definitions/Items[AttributeCategory]"
  /attributetraits:
    get:
      tags:
      - "AttributeTrait"
      summary: "Retrieve all attribute traits of the specified category/categories."
      operationId: "AttributeTrait_GetByCategory"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "category"
        in: "query"
        description: "The category of the attribute traits. Multiple categories may\
          \ be specified with multiple instances of the parameter. If the parameter\
          \ is not specified, or if its value is \"all\", then all attribute traits\
          \ of all categories will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Category"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      responses:
        200:
          description: "A list of attribute traits."
          schema:
            $ref: "#/definitions/Items[AttributeTrait]"
  /attributetraits/{name}:
    get:
      tags:
      - "AttributeTrait"
      summary: "Retrieve an attribute trait."
      operationId: "AttributeTrait_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name or abbreviation of the attribute trait."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      responses:
        200:
          description: "The requested attribute trait."
          schema:
            $ref: "#/definitions/AttributeTrait"
  /batch:
    post:
      tags:
      - "Batch"
      summary: "Execute a batch of requests against the service. As shown in the Sample\
        \ Request, the input is a dictionary with IDs as keys and request objects\
        \ as values. Each request object specifies the HTTP method and the resource\
        \ and, optionally, the content and a list of parent IDs. The list of parent\
        \ IDs specifies which other requests must complete before the given request\
        \ will be executed. The example first creates an element, then gets the element\
        \ by the response's Location header, then creates an attribute for the element.\
        \ Note that the resource can be an absolute URL or a JsonPath that references\
        \ the response to the parent request. The batch's response is a dictionary\
        \ uses keys corresponding those provided in the request, with response objects\
        \ containing a status code, response headers, and the response body. A request\
        \ can alternatively specify a request template in place of a resource. In\
        \ this case, a single JsonPath may select multiple tokens, and a separate\
        \ subrequest will be made from the template for each token. The responses\
        \ of these subrequests will returned as the content of a single outer response."
      operationId: "Batch_Execute"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - in: "body"
        name: "batch"
        description: "The batch of requests."
        required: true
        schema:
          type: "object"
          additionalProperties:
            $ref: "#/definitions/Request"
        x-exportParamName: "Batch"
      responses:
        207:
          description: "A dictionary of response information corresponding to the\
            \ batched requests."
          schema:
            type: "object"
            additionalProperties:
              $ref: "#/definitions/Response"
  /calculation/intervals:
    get:
      tags:
      - "Calculation"
      summary: "Returns results of evaluating the expression over the time range from\
        \ the start time to the end time at a defined interval."
      operationId: "Calculation_GetAtIntervals"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "expression"
        in: "query"
        description: "A string containing the expression to be evaluated. The syntax\
          \ for the expression generally follows the Performance Equation syntax as\
          \ described in the PI Server documentation, with the exception that expressions\
          \ which target AF objects use attribute names in place of tag names in the\
          \ equation."
        required: false
        type: "string"
        x-exportParamName: "Expression"
      - name: "sampleInterval"
        in: "query"
        description: "A time span specifies how often the filter expression is evaluated\
          \ when computing the summary for an interval."
        required: false
        type: "string"
        x-exportParamName: "SampleInterval"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "webId"
        in: "query"
        description: "The ID of the target object of the expression. A target object\
          \ can be a Data Server, a database, an element, an event frame or an attribute.\
          \ References to attributes or points are based on the target. If this parameter\
          \ is not provided, the target object is set to null."
        required: false
        type: "string"
        x-exportParamName: "WebId"
      responses:
        200:
          description: "The calculated values."
          schema:
            $ref: "#/definitions/TimedValues"
        409:
          description: "The targeted object does not support the calculation."
          schema:
            $ref: "#/definitions/Errors"
  /calculation/recorded:
    get:
      tags:
      - "Calculation"
      summary: "Returns the result of evaluating the expression at each point in time\
        \ over the time range from the start time to the end time where a recorded\
        \ value exists for a member of the expression."
      operationId: "Calculation_GetAtRecorded"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "expression"
        in: "query"
        description: "A string containing the expression to be evaluated. The syntax\
          \ for the expression generally follows the Performance Equation syntax as\
          \ described in the PI Server documentation, with the exception that expressions\
          \ which target AF objects use attribute names in place of tag names in the\
          \ equation."
        required: false
        type: "string"
        x-exportParamName: "Expression"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "webId"
        in: "query"
        description: "The ID of the target object of the expression. A target object\
          \ can be a Data Server, a database, an element, an event frame or an attribute.\
          \ References to attributes or points are based on the target. If this parameter\
          \ is not provided, the target object is set to null."
        required: false
        type: "string"
        x-exportParamName: "WebId"
      responses:
        200:
          description: "The calculated values."
          schema:
            $ref: "#/definitions/TimedValues"
        409:
          description: "The targeted object does not support the calculation."
          schema:
            $ref: "#/definitions/Errors"
  /calculation/summary:
    get:
      tags:
      - "Calculation"
      summary: "Returns the result of evaluating the expression over the time range\
        \ from the start time to the end time. The time range is first divided into\
        \ a number of summary intervals. Then the calculation is performed for the\
        \ specified summaries over each interval."
      operationId: "Calculation_GetSummary"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "calculationBasis"
        in: "query"
        description: "Specifies the method of evaluating the data over the time range.\
          \ The default is 'TimeWeighted'."
        required: false
        type: "string"
        x-exportParamName: "CalculationBasis"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "expression"
        in: "query"
        description: "A string containing the expression to be evaluated. The syntax\
          \ for the expression generally follows the Performance Equation syntax as\
          \ described in the PI Server documentation, with the exception that expressions\
          \ which target AF objects use attribute names in place of tag names in the\
          \ equation."
        required: false
        type: "string"
        x-exportParamName: "Expression"
      - name: "sampleInterval"
        in: "query"
        description: "A time span specifies how often the filter expression is evaluated\
          \ when computing the summary for an interval, if the sampleType is 'Interval'."
        required: false
        type: "string"
        x-exportParamName: "SampleInterval"
      - name: "sampleType"
        in: "query"
        description: "A flag which specifies one or more summaries to compute for\
          \ each interval over the time range. The default is 'ExpressionRecordedValues'."
        required: false
        type: "string"
        x-exportParamName: "SampleType"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "summaryDuration"
        in: "query"
        description: "The duration of each summary interval."
        required: false
        type: "string"
        x-exportParamName: "SummaryDuration"
      - name: "summaryType"
        in: "query"
        description: "Specifies the kinds of summaries to produce over the range.\
          \ The default is 'Total'. Multiple summary types may be specified by using\
          \ multiple instances of summaryType."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "SummaryType"
      - name: "timeType"
        in: "query"
        description: "Specifies how to calculate the timestamp for each interval.\
          \ The default is 'Auto'."
        required: false
        type: "string"
        x-exportParamName: "TimeType"
      - name: "webId"
        in: "query"
        description: "The ID of the target object of the expression. A target object\
          \ can be a Data Server, a database, an element, an event frame or an attribute.\
          \ References to attributes or points are based on the target. If this parameter\
          \ is not provided, the target object is set to null."
        required: false
        type: "string"
        x-exportParamName: "WebId"
      responses:
        200:
          description: "The calculated values."
          schema:
            $ref: "#/definitions/Items[SummaryValue]"
        409:
          description: "The targeted object does not support the calculation."
          schema:
            $ref: "#/definitions/Errors"
  /calculation/times:
    get:
      tags:
      - "Calculation"
      summary: "Returns the result of evaluating the expression at the specified timestamps."
      operationId: "Calculation_GetAtTimes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "expression"
        in: "query"
        description: "A string containing the expression to be evaluated. The syntax\
          \ for the expression generally follows the Performance Equation syntax as\
          \ described in the PI Server documentation, with the exception that expressions\
          \ which target AF objects use attribute names in place of tag names in the\
          \ equation."
        required: false
        type: "string"
        x-exportParamName: "Expression"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "time"
        in: "query"
        description: "A list of timestamps at which to calculate the expression."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Time"
      - name: "webId"
        in: "query"
        description: "The ID of the target object of the expression. A target object\
          \ can be a Data Server, a database, an element, an event frame or an attribute.\
          \ References to attributes or points are based on the target. If this parameter\
          \ is not provided, the target object is set to null."
        required: false
        type: "string"
        x-exportParamName: "WebId"
      responses:
        200:
          description: "The calculated values."
          schema:
            $ref: "#/definitions/TimedValues"
        409:
          description: "The targeted object does not support the calculation."
          schema:
            $ref: "#/definitions/Errors"
  /channels/instances:
    get:
      tags:
      - "Channel"
      summary: "Retrieves a list of currently running channel instances."
      operationId: "Channel_Instances"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters: []
      responses:
        200:
          description: "A list of currently running channel instances."
          schema:
            $ref: "#/definitions/Items[ChannelInstance]"
  /dataservers:
    get:
      tags:
      - "DataServer"
      summary: "Retrieve a list of Data Servers known to this service."
      description: "This method returns a list of all available known Data Servers\
        \ that the user can connect to. Even though a server may be returned in the\
        \ list, the user may not have permission to access it."
      operationId: "DataServer_List"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of all known servers."
          schema:
            $ref: "#/definitions/Items[DataServer]"
  /dataservers#name:
    get:
      tags:
      - "DataServer"
      summary: "Retrieve a Data Server by name."
      description: "This method returns a data server based on the name. Users should\
        \ primarily search with the WebID when available."
      operationId: "DataServer_GetByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "query"
        description: "The name of the server."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested server."
          schema:
            $ref: "#/definitions/DataServer"
  /dataservers#path:
    get:
      tags:
      - "DataServer"
      summary: "Retrieve a Data Server by path."
      description: "This method returns a data server based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "DataServer_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the server. Note that the path supplied to this\
          \ method must be of the form '\\\\servername'."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested server."
          schema:
            $ref: "#/definitions/DataServer"
  /dataservers/{webId}:
    get:
      tags:
      - "DataServer"
      summary: "Retrieve a Data Server."
      operationId: "DataServer_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested server."
          schema:
            $ref: "#/definitions/DataServer"
  /dataservers/{webId}/enumerationsets:
    get:
      tags:
      - "DataServer"
      summary: "Retrieve enumeration sets for given Data Server."
      operationId: "DataServer_GetEnumerationSets"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified enumeration sets."
          schema:
            $ref: "#/definitions/Items[EnumerationSet]"
    post:
      tags:
      - "DataServer"
      summary: "Create an enumeration set on the Data Server."
      operationId: "DataServer_CreateEnumerationSet"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server on which to create the enumeration set."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "enumerationSet"
        description: "The new enumeration set definition."
        required: true
        schema:
          $ref: "#/definitions/EnumerationSet"
        x-exportParamName: "EnumerationSet"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The enumeration was created. The response's Location header\
            \ is a link to the created enumeration set."
  /dataservers/{webId}/license:
    get:
      tags:
      - "DataServer"
      summary: "Retrieves the specified license for the given Data Server. The fields\
        \ of the response object are string representations of the numerical values\
        \ reported by the Data Server, with \"Infinity\" representing a license field\
        \ with no limit."
      operationId: "DataServer_GetLicense"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "module"
        in: "query"
        description: "The case-sensitive name of the module."
        required: false
        type: "string"
        x-exportParamName: "Module"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified license."
          schema:
            $ref: "#/definitions/DataServerLicense"
        404:
          description: "No license with the specified module name existed."
          schema:
            $ref: "#/definitions/Errors"
  /dataservers/{webId}/points:
    get:
      tags:
      - "DataServer"
      summary: "Retrieve a list of points on a specified Data Server."
      description: "Users can search for the data servers based on specific search\
        \ parameters. If no parameters are specified in the search, the default values\
        \ for each parameter will be used and will return the data servers that match\
        \ the default search."
      operationId: "DataServer_GetPoints"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "A query string for filtering by point name. The default is no\
          \ filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is '0'."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of matching points."
          schema:
            $ref: "#/definitions/Items[Point]"
    post:
      tags:
      - "DataServer"
      summary: "Create a point in the specified Data Server."
      operationId: "DataServer_CreatePoint"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "pointDTO"
        description: "The new point definition."
        required: true
        schema:
          $ref: "#/definitions/Point"
        x-exportParamName: "PointDTO"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The point was created. The response's Location header is a\
            \ link to the point."
  /elementcategories:
    get:
      tags:
      - "ElementCategory"
      summary: "Retrieve an element category by path."
      operationId: "ElementCategory_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the target element category."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified element category."
          schema:
            $ref: "#/definitions/ElementCategory"
  /elementcategories/{webId}:
    get:
      tags:
      - "ElementCategory"
      summary: "Retrieve an element category."
      operationId: "ElementCategory_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The id of the element category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified element category."
          schema:
            $ref: "#/definitions/ElementCategory"
    delete:
      tags:
      - "ElementCategory"
      summary: "Delete an element category."
      operationId: "ElementCategory_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element category to delete."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The element category was deleted."
    patch:
      tags:
      - "ElementCategory"
      summary: "Update an element category by replacing items in its definition."
      operationId: "ElementCategory_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element category to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "elementCategory"
        description: "A partial element category containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/ElementCategory"
        x-exportParamName: "ElementCategory"
      responses:
        204:
          description: "The element category was updated."
  /elementcategories/{webId}/security:
    get:
      tags:
      - "ElementCategory"
      summary: "Get the security information of the specified security item associated\
        \ with the element category for a specified user."
      operationId: "ElementCategory_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element category for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /elementcategories/{webId}/securityentries:
    get:
      tags:
      - "ElementCategory"
      summary: "Retrieve the security entries associated with the element category\
        \ based on the specified criteria. By default, all security entries for this\
        \ element category are returned."
      operationId: "ElementCategory_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "ElementCategory"
      summary: "Create a security entry owned by the element category."
      operationId: "ElementCategory_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element category where the security entry will\
          \ be created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /elementcategories/{webId}/securityentries/{name}:
    get:
      tags:
      - "ElementCategory"
      summary: "Retrieve the security entry associated with the element category with\
        \ the specified name."
      operationId: "ElementCategory_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the element category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "ElementCategory"
      summary: "Update a security entry owned by the element category."
      operationId: "ElementCategory_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the element category where the security entry will\
          \ be updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "ElementCategory"
      summary: "Delete a security entry owned by the element category."
      operationId: "ElementCategory_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the element category where the security entry will\
          \ be deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was deleted."
  /elements:
    get:
      tags:
      - "Element"
      summary: "Retrieve an element by path."
      description: "This method returns an element based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "Element_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the element."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified element."
          schema:
            $ref: "#/definitions/Element"
  /elements/{webId}:
    get:
      tags:
      - "Element"
      summary: "Retrieve an element."
      operationId: "Element_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified element."
          schema:
            $ref: "#/definitions/Element"
    delete:
      tags:
      - "Element"
      summary: "Delete an element."
      operationId: "Element_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The element was deleted."
    patch:
      tags:
      - "Element"
      summary: "Update an element by replacing items in its definition."
      operationId: "Element_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "element"
        description: "A partial element containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/Element"
        x-exportParamName: "Element"
      responses:
        204:
          description: "The element was updated."
  /elements/{webId}/analyses:
    get:
      tags:
      - "Element"
      summary: "Retrieve analyses based on the specified conditions."
      description: "Users can search for the analyses based on specific search parameters.\
        \ If no parameters are specified in the search, the default values for each\
        \ parameter will be used and will return the analyses that match the default\
        \ search."
      operationId: "Element_GetAnalyses"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element, which is the Target of the analyses."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of analyses matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[Analysis]"
    post:
      tags:
      - "Element"
      summary: "Create an Analysis."
      operationId: "Element_CreateAnalysis"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element on which to create the Analysis."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "analysis"
        description: "The new Analysis definition."
        required: true
        schema:
          $ref: "#/definitions/Analysis"
        x-exportParamName: "Analysis"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The Analysis was created. The response's Location header is\
            \ a link to the Analysis."
  /elements/{webId}/attributes:
    get:
      tags:
      - "Element"
      summary: "Get the attributes of the specified element."
      operationId: "Element_GetAttributes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that returned attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "templateName"
        in: "query"
        description: "Specify that returned attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "trait"
        in: "query"
        description: "The name of the attribute trait. Multiple traits may be specified\
          \ with multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Trait"
      - name: "traitCategory"
        in: "query"
        description: "The category of the attribute traits. Multiple categories may\
          \ be specified with multiple instances of the parameter. If the parameter\
          \ is not specified, or if its value is \"all\", then all attribute traits\
          \ of all categories will be returned."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TraitCategory"
      - name: "valueType"
        in: "query"
        description: "Specify that returned attributes' value type must be the given\
          \ value type. The default is no value type filter."
        required: false
        type: "string"
        x-exportParamName: "ValueType"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of child attributes."
          schema:
            $ref: "#/definitions/Items[Attribute]"
    post:
      tags:
      - "Element"
      summary: "Create a new attribute of the specified element."
      operationId: "Element_CreateAttribute"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element on which to create the attribute."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "attribute"
        description: "The definition of the new attribute."
        required: true
        schema:
          $ref: "#/definitions/Attribute"
        x-exportParamName: "Attribute"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The attribute was created. The response's Location header\
            \ is a link to the created attribute."
  /elements/{webId}/categories:
    get:
      tags:
      - "Element"
      summary: "Get an element's categories."
      operationId: "Element_GetCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of categories."
          schema:
            $ref: "#/definitions/Items[ElementCategory]"
  /elements/{webId}/config:
    post:
      tags:
      - "Element"
      summary: "Executes the create configuration function of the data references\
        \ found within the attributes of the element, and optionally, its children."
      operationId: "Element_CreateConfig"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "includeChildElements"
        in: "query"
        description: "If true, includes the child elements of the specified element."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeChildElements"
      responses:
        200:
          description: "Process log of operations. Operations completed with no errors."
        207:
          description: "Process log of operations. Operations completed with errors."
  /elements/{webId}/elementattributes:
    get:
      tags:
      - "Element"
      summary: "Retrieves a list of element attributes matching the specified filters\
        \ from the specified element."
      operationId: "Element_FindElementAttributes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "attributeCategory"
        in: "query"
        description: "Specify that returned attributes must have this category. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeCategory"
      - name: "attributeDescriptionFilter"
        in: "query"
        description: "The attribute description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeDescriptionFilter"
      - name: "attributeNameFilter"
        in: "query"
        description: "The attribute name filter string used for finding objects. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeNameFilter"
      - name: "attributeType"
        in: "query"
        description: "Specify that returned attributes' value type must be this value\
          \ type. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeType"
      - name: "elementCategory"
        in: "query"
        description: "Specify that the owner of the returned attributes must have\
          \ this category. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ElementCategory"
      - name: "elementDescriptionFilter"
        in: "query"
        description: "The element description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ElementDescriptionFilter"
      - name: "elementNameFilter"
        in: "query"
        description: "The element name filter string used for finding objects. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ElementNameFilter"
      - name: "elementTemplate"
        in: "query"
        description: "Specify that the owner of the returned attributes must have\
          \ this template or a template derived from this template. The default is\
          \ no filter."
        required: false
        type: "string"
        x-exportParamName: "ElementTemplate"
      - name: "elementType"
        in: "query"
        description: "Specify that the element of the returned attributes must have\
          \ this AFElementType. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ElementType"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned (the page size).\
          \ The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include objects nested further\
          \ than immediate children of the given resource. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "a list of matching attributes."
          schema:
            $ref: "#/definitions/Items[Attribute]"
  /elements/{webId}/elements:
    get:
      tags:
      - "Element"
      summary: "Retrieve elements based on the specified conditions. By default, this\
        \ method selects immediate children of the specified element."
      description: "Users can search for the elements based on specific search parameters.\
        \ If no parameters are specified in the search, the default values for each\
        \ parameter will be used and will return the elements that match the default\
        \ search."
      operationId: "Element_GetElements"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that returned elements must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "descriptionFilter"
        in: "query"
        description: "Specify that returned elements must have this description. The\
          \ default is no description filter."
        required: false
        type: "string"
        x-exportParamName: "DescriptionFilter"
      - name: "elementType"
        in: "query"
        description: "Specify that returned elements must have this type. The default\
          \ type is 'Any'."
        required: false
        type: "string"
        x-exportParamName: "ElementType"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding objects. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include objects nested further\
          \ than the immediate children of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "templateName"
        in: "query"
        description: "Specify that returned elements must have this template or a\
          \ template derived from this template. The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of elements matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[Element]"
    post:
      tags:
      - "Element"
      summary: "Create a child element."
      operationId: "Element_CreateElement"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the parent element on which to create the element."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "element"
        description: "The new element definition."
        required: true
        schema:
          $ref: "#/definitions/Element"
        x-exportParamName: "Element"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The element was created. The response's Location header is\
            \ a link to the element."
  /elements/{webId}/eventframes:
    get:
      tags:
      - "Element"
      summary: "Retrieve event frames that reference this element based on the specified\
        \ conditions. By default, returns all event frames that reference this element\
        \ that have been active in the past 8 hours."
      operationId: "Element_GetEventFrames"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element whose related event frames are sought."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "canBeAcknowledged"
        in: "query"
        description: "Specify the returned event frames' canBeAcknowledged property.\
          \ The default is no canBeAcknowledged filter."
        required: false
        type: "boolean"
        x-exportParamName: "CanBeAcknowledged"
      - name: "categoryName"
        in: "query"
        description: "Specify that returned event frames must have this category.\
          \ The default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "endTime"
        in: "query"
        description: "The ending time for the search. The endTime must be greater\
          \ than or equal to the startTime. The searchMode parameter will control\
          \ whether the comparison will be performed against the event frame's startTime\
          \ or endTime. The default is '*' if searchMode is not one of the 'Backward*'\
          \ or 'Forward*' values."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "isAcknowledged"
        in: "query"
        description: "Specify the returned event frames' isAcknowledged property.\
          \ The default no isAcknowledged filter."
        required: false
        type: "boolean"
        x-exportParamName: "IsAcknowledged"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding event frames. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchMode"
        in: "query"
        description: "Determines how the startTime and endTime parameters are treated\
          \ when searching for event frame objects to be included in the returned\
          \ collection. If this parameter is one of the 'Backward*' or 'Forward*'\
          \ values, none of endTime, sortField, or sortOrder may be specified. The\
          \ default is 'Overlapped'."
        required: false
        type: "string"
        x-exportParamName: "SearchMode"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "severity"
        in: "query"
        description: "Specify that returned event frames must have this severity.\
          \ Multiple severity values may be specified with multiple instances of the\
          \ parameter. The default is no severity filter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Severity"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name' if searchMode is not one of the 'Backward*'\
          \ or 'Forward*' values."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending' if searchMode is not one of the 'Backward*' or 'Forward*'\
          \ values."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "startTime"
        in: "query"
        description: "The starting time for the search. startTime must be less than\
          \ or equal to the endTime. The searchMode parameter will control whether\
          \ the comparison will be performed against the event frame's startTime or\
          \ endTime. The default is '*-8h'."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "templateName"
        in: "query"
        description: "Specify that returned event frames must have this template or\
          \ a template derived from this template. The default is no template filter.\
          \ Specify this parameter by name."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of event frames matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[EventFrame]"
  /elements/{webId}/notificationrules:
    get:
      tags:
      - "Element"
      summary: "Retrieve notification rules for an element"
      operationId: "Element_GetNotificationRules"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the resource to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of notification rules."
          schema:
            $ref: "#/definitions/Items[NotificationRule]"
  /elements/{webId}/paths:
    get:
      tags:
      - "Element"
      summary: "Get a list of the full or relative paths to this element."
      description: "This method will return paths with the primary path at the first\
        \ index. If there is no primary path, then null will be at the first index.\
        \ If relative path is specified but does not exist, null will be returned\
        \ at the first index."
      operationId: "Element_GetPaths"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "relativePath"
        in: "query"
        description: "The full path in ShortName format to the parent object that\
          \ the returned paths should be relative. For example, \"\\\\Server1\\Database2\"\
          \ would return all the paths to the element relative to the database. A\
          \ path of \"\\\\Server1\\Database2\\RootElement\" would return all paths\
          \ to the element relative to \"RootElement\". If null, then all the full\
          \ paths to the element will be returned."
        required: false
        type: "string"
        x-exportParamName: "RelativePath"
      responses:
        200:
          description: "A list of the full or relative paths to this element."
          schema:
            $ref: "#/definitions/Items[string]"
  /elements/{webId}/referencedelements:
    get:
      tags:
      - "Element"
      summary: "Retrieve referenced elements based on the specified conditions. By\
        \ default, this method selects all referenced elements of the current resource."
      description: "Users can search for the referenced elements based on specific\
        \ search parameters. If no parameters are specified in the search, the default\
        \ values for each parameter will be used and will return the elements that\
        \ match the default search."
      operationId: "Element_GetReferencedElements"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the resource to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that returned elements must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "descriptionFilter"
        in: "query"
        description: "Specify that returned elements must have this description. The\
          \ default is no description filter."
        required: false
        type: "string"
        x-exportParamName: "DescriptionFilter"
      - name: "elementType"
        in: "query"
        description: "Specify that returned elements must have this type. The default\
          \ type is 'Any'."
        required: false
        type: "string"
        x-exportParamName: "ElementType"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding objects. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "templateName"
        in: "query"
        description: "Specify that returned elements must have this template or a\
          \ template derived from this template. The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of referenced elements matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[Element]"
    post:
      tags:
      - "Element"
      summary: "Add a reference to an existing element to the child elements collection."
      operationId: "Element_AddReferencedElement"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element which the referenced element will be added\
          \ to."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "referencedElementWebId"
        in: "query"
        description: "The ID of the referenced element. Multiple referenced elements\
          \ may be specified with multiple instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "ReferencedElementWebId"
      - name: "referenceType"
        in: "query"
        description: "The name of the reference type between the parent and the referenced\
          \ element. The default is \"parent-child\"."
        required: false
        type: "string"
        x-exportParamName: "ReferenceType"
      responses:
        204:
          description: "The referenced element was successfully added."
        409:
          description: "The referenced element already exists in the collection."
          schema:
            $ref: "#/definitions/Errors"
    delete:
      tags:
      - "Element"
      summary: "Remove a reference to an existing element from the child elements\
        \ collection."
      operationId: "Element_RemoveReferencedElement"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element which the referenced element will be removed\
          \ from."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "referencedElementWebId"
        in: "query"
        description: "The ID of the referenced element. Multiple referenced elements\
          \ may be specified with multiple instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "ReferencedElementWebId"
      responses:
        204:
          description: "The referenced element was successfully removed."
  /elements/{webId}/security:
    get:
      tags:
      - "Element"
      summary: "Get the security information of the specified security item associated\
        \ with the element for a specified user."
      operationId: "Element_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /elements/{webId}/securityentries:
    get:
      tags:
      - "Element"
      summary: "Retrieve the security entries associated with the element based on\
        \ the specified criteria. By default, all security entries for this element\
        \ are returned."
      operationId: "Element_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "Element"
      summary: "Create a security entry owned by the element."
      operationId: "Element_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element where the security entry will be created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /elements/{webId}/securityentries/{name}:
    get:
      tags:
      - "Element"
      summary: "Retrieve the security entry associated with the element with the specified\
        \ name."
      operationId: "Element_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the element."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "Element"
      summary: "Update a security entry owned by the element."
      operationId: "Element_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the element where the security entry will be updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "Element"
      summary: "Delete a security entry owned by the element."
      operationId: "Element_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the element where the security entry will be deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was deleted."
  /elements/multiple:
    get:
      tags:
      - "Element"
      summary: "Retrieve multiple elements by web id or path."
      operationId: "Element_GetMultiple"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "asParallel"
        in: "query"
        description: "Specifies if the retrieval processes should be run in parallel\
          \ on the server. This may improve the response time for large amounts of\
          \ requested attributes. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "AsParallel"
      - name: "includeMode"
        in: "query"
        description: "The include mode for the return list. The default is 'All'."
        required: false
        type: "string"
        x-exportParamName: "IncludeMode"
      - name: "path"
        in: "query"
        description: "The path of an element. Multiple elements may be specified with\
          \ multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webId"
        in: "query"
        description: "The ID of an element. Multiple elements may be specified with\
          \ multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested elements"
          schema:
            $ref: "#/definitions/Items[Item[Element]]"
        207:
          description: "Some or all items contain exceptions."
          schema:
            $ref: "#/definitions/Items[Item[Element]]"
  /elements/search:
    get:
      tags:
      - "Element"
      summary: "Retrieve elements based on the specified conditions. By default, returns\
        \ all the elements."
      operationId: "Element_GetElementsQuery"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "databaseWebId"
        in: "query"
        description: "The ID of the asset database to use as the root of the query."
        required: false
        type: "string"
        x-exportParamName: "DatabaseWebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string is a list of filters used to perform an AFSearch\
          \ for the elements in the asset database. An example would be: \"query=Name:=MyElement*\
          \ Template:=ElementTemplate*\"."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of elements matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[Element]"
  /elements/searchbyattribute:
    post:
      tags:
      - "Element"
      summary: "Create a link for a \"Search Elements By Attribute Value\" operation,\
        \ whose queries are specified in the request content. The SearchRoot is specified\
        \ by the Web Id of the root Element. If the SearchRoot is not specified, then\
        \ the search starts at the Asset Database. ElementTemplate must be provided\
        \ as the Web ID of the ElementTemplate, which are used to create the Elements.\
        \ All the attributes in the queries must be defined as AttributeTemplates\
        \ on the ElementTemplate. An array of attribute value queries are ANDed together\
        \ to find the desired Element objects. At least one value query must be specified.\
        \ There are limitations on SearchOperators."
      operationId: "Element_CreateSearchByAttribute"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - in: "body"
        name: "query"
        description: "The query of search by attribute."
        required: true
        schema:
          $ref: "#/definitions/SearchByAttribute"
        x-exportParamName: "Query"
      - name: "noResults"
        in: "query"
        description: "If false, the response content will contain the first page of\
          \ the search results. If true, the response content will be empty. The default\
          \ is false."
        required: false
        type: "boolean"
        x-exportParamName: "NoResults"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The link is stored in the response's \"Location\" header.\
            \ The response content is the first page of the search result by the default\
            \ parameters."
          schema:
            $ref: "#/definitions/Items[Element]"
        400:
          description: "Empty or invalid request content."
          schema:
            $ref: "#/definitions/Errors"
        413:
          description: "Request content is too large."
          schema:
            $ref: "#/definitions/Errors"
  /elements/searchbyattribute/{searchId}:
    get:
      tags:
      - "Element"
      summary: "Execute a \"Search Elements By Attribute Value\" operation."
      operationId: "Element_ExecuteSearchByAttribute"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "searchId"
        in: "path"
        description: "The encoded search Id of the \"Search Elements By Attribute\
          \ Value\" operation."
        required: true
        type: "string"
        x-exportParamName: "SearchId"
      - name: "categoryName"
        in: "query"
        description: "Specify that the owner of the returned attributes must have\
          \ this category. For Asset Servers older than 2.7, a 400 status code (Bad\
          \ Request) will be returned if this parameter is specified. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "descriptionFilter"
        in: "query"
        description: "The element description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "DescriptionFilter"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned. The default is\
          \ 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding objects. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include objects nested further\
          \ than the immediate children of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "a list of matching Elements."
          schema:
            $ref: "#/definitions/Items[Element]"
        400:
          description: "Invalid search Id or search parameters."
          schema:
            $ref: "#/definitions/Errors"
  /elementtemplates:
    get:
      tags:
      - "ElementTemplate"
      summary: "Retrieve an element template by path."
      description: "This method returns an element template based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "ElementTemplate_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the element template."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified element template."
          schema:
            $ref: "#/definitions/ElementTemplate"
  /elementtemplates/{webId}:
    get:
      tags:
      - "ElementTemplate"
      summary: "Retrieve an element template."
      operationId: "ElementTemplate_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified element template."
          schema:
            $ref: "#/definitions/ElementTemplate"
    delete:
      tags:
      - "ElementTemplate"
      summary: "Delete an element template."
      description: "Deleting an element template will delete all associated templated\
        \ data from elements which were created from it."
      operationId: "ElementTemplate_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The element template was deleted."
    patch:
      tags:
      - "ElementTemplate"
      summary: "Update an element template by replacing items in its definition."
      description: "Updating the InstanceType property of an element template will\
        \ not affect any elements that have already been created from this template;\
        \ it will only affect any future elements created from this template. All\
        \ other changes will be propagated to elements based on this template."
      operationId: "ElementTemplate_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "template"
        description: "A partial element template containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/ElementTemplate"
        x-exportParamName: "Template"
      responses:
        204:
          description: "The element template was updated."
  /elementtemplates/{webId}/analysistemplates:
    get:
      tags:
      - "ElementTemplate"
      summary: "Get analysis templates for an element template."
      operationId: "ElementTemplate_GetAnalysisTemplates"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of analysis templates for the specified element template."
          schema:
            $ref: "#/definitions/Items[AnalysisTemplate]"
  /elementtemplates/{webId}/attributetemplates:
    get:
      tags:
      - "ElementTemplate"
      summary: "Get child attribute templates for an element template."
      description: "If 'showInherited' and 'showDescendants' are 'true', it returns\
        \ all the attribute templates from current element template and the base template.\
        \  If 'showInherited' is 'false', it returns all the attribute templates from\
        \ the current element template."
      operationId: "ElementTemplate_GetAttributeTemplates"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "depthFirstTraverse"
        in: "query"
        description: "When 'true', a Depth First traversal will be performed; this\
          \ starts at the root and explores as far as possible along each branch before\
          \ backtracking. When 'false', a Breadth First traversal will be performed;\
          \ this starts at the tree root and explores the neighbor nodes first, then\
          \ moves onto the next level of neighbors. The default is 'false' (Breadth\
          \ First)."
        required: false
        type: "boolean"
        x-exportParamName: "DepthFirstTraverse"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned. The default is\
          \ 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showDescendants"
        in: "query"
        description: "Specifies if the result should include all descendant attribute\
          \ templates from the current element template, even indirect ones. The default\
          \ is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowDescendants"
      - name: "showInherited"
        in: "query"
        description: "Specifies if the result should include attribute templates inherited\
          \ from base element templates. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowInherited"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of attribute templates for the specified element template."
          schema:
            $ref: "#/definitions/Items[AttributeTemplate]"
    post:
      tags:
      - "ElementTemplate"
      summary: "Create an attribute template."
      operationId: "ElementTemplate_CreateAttributeTemplate"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template on which to create the attribute\
          \ template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "template"
        description: "The attribute template definition."
        required: true
        schema:
          $ref: "#/definitions/AttributeTemplate"
        x-exportParamName: "Template"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The attribute template was created. The response's Location\
            \ header is a link to the created resource."
  /elementtemplates/{webId}/baseelementtemplates:
    get:
      tags:
      - "ElementTemplate"
      summary: "Get base element templates for an element template."
      description: "The root template will be returned first, followed by successive\
        \ templates in the inheritance chain."
      operationId: "ElementTemplate_GetBaseElementTemplates"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned. The default is\
          \ 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of base element templates for the specified element\
            \ template."
          schema:
            $ref: "#/definitions/Items[ElementTemplate]"
  /elementtemplates/{webId}/categories:
    get:
      tags:
      - "ElementTemplate"
      summary: "Get an element template's categories."
      operationId: "ElementTemplate_GetCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showInherited"
        in: "query"
        description: "Specifies if the result should include categories inherited\
          \ from base element templates. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowInherited"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of categories."
          schema:
            $ref: "#/definitions/Items[ElementCategory]"
  /elementtemplates/{webId}/derivedelementtemplates:
    get:
      tags:
      - "ElementTemplate"
      summary: "Get derived element templates for an element template."
      operationId: "ElementTemplate_GetDerivedElementTemplates"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned. The default is\
          \ 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showDescendants"
        in: "query"
        description: "Specifies if the result should include all descendant element\
          \ templates from the current element template, even indirect ones. The default\
          \ is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowDescendants"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of derived element templates for the specified element\
            \ template."
          schema:
            $ref: "#/definitions/Items[ElementTemplate]"
  /elementtemplates/{webId}/notificationruletemplates:
    get:
      tags:
      - "ElementTemplate"
      summary: "Get notification rule templates for an element template"
      operationId: "ElementTemplate_GetNotificationRuleTemplates"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of notification rule templates."
          schema:
            $ref: "#/definitions/Items[NotificationRuleTemplate]"
  /elementtemplates/{webId}/security:
    get:
      tags:
      - "ElementTemplate"
      summary: "Get the security information of the specified security item associated\
        \ with the element template for a specified user."
      operationId: "ElementTemplate_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /elementtemplates/{webId}/securityentries:
    get:
      tags:
      - "ElementTemplate"
      summary: "Retrieve the security entries associated with the element template\
        \ based on the specified criteria. By default, all security entries for this\
        \ element template are returned."
      operationId: "ElementTemplate_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "ElementTemplate"
      summary: "Create a security entry owned by the element template."
      operationId: "ElementTemplate_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the element template where the security entry will\
          \ be created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /elementtemplates/{webId}/securityentries/{name}:
    get:
      tags:
      - "ElementTemplate"
      summary: "Retrieve the security entry associated with the element template with\
        \ the specified name."
      operationId: "ElementTemplate_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the element template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "ElementTemplate"
      summary: "Update a security entry owned by the element template."
      operationId: "ElementTemplate_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the element template where the security entry will\
          \ be updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "ElementTemplate"
      summary: "Delete a security entry owned by the element template."
      operationId: "ElementTemplate_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the element template where the security entry will\
          \ be deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was deleted."
  /enumerationsets:
    get:
      tags:
      - "EnumerationSet"
      summary: "Retrieve an enumeration set by path."
      description: "This method returns an enumeration set based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "EnumerationSet_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the target enumeration set."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified enumeration set."
          schema:
            $ref: "#/definitions/EnumerationSet"
  /enumerationsets/{webId}:
    get:
      tags:
      - "EnumerationSet"
      summary: "Retrieve an enumeration set."
      operationId: "EnumerationSet_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration set."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified enumeration sets."
          schema:
            $ref: "#/definitions/EnumerationSet"
    delete:
      tags:
      - "EnumerationSet"
      summary: "Delete an enumeration set."
      operationId: "EnumerationSet_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration set to delete."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The enumeration set was deleted."
    patch:
      tags:
      - "EnumerationSet"
      summary: "Update an enumeration set by replacing items in its definition."
      operationId: "EnumerationSet_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration set to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "enumerationSet"
        description: "A partial enumeration set containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/EnumerationSet"
        x-exportParamName: "EnumerationSet"
      responses:
        204:
          description: "The enumeration set was updated."
  /enumerationsets/{webId}/enumerationvalues:
    get:
      tags:
      - "EnumerationSet"
      summary: "Retrieve an enumeration set's values."
      operationId: "EnumerationSet_GetValues"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration set."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified enumeration set's values"
          schema:
            $ref: "#/definitions/Items[EnumerationValue]"
    post:
      tags:
      - "EnumerationSet"
      summary: "Create an enumeration value for a enumeration set."
      operationId: "EnumerationSet_CreateValue"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration set on which to create the enumeration\
          \ value."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "enumerationValue"
        description: "The new enumeration value definition."
        required: true
        schema:
          $ref: "#/definitions/EnumerationValue"
        x-exportParamName: "EnumerationValue"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The enumeration value was created. The response's Location\
            \ header is a link to the enumeration value."
  /enumerationsets/{webId}/security:
    get:
      tags:
      - "EnumerationSet"
      summary: "Get the security information of the specified security item associated\
        \ with the enumeration set for a specified user."
      operationId: "EnumerationSet_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration set for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /enumerationsets/{webId}/securityentries:
    get:
      tags:
      - "EnumerationSet"
      summary: "Retrieve the security entries associated with the enumeration set\
        \ based on the specified criteria. By default, all security entries for this\
        \ enumeration set are returned."
      operationId: "EnumerationSet_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration set."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "EnumerationSet"
      summary: "Create a security entry owned by the enumeration set."
      operationId: "EnumerationSet_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration set where the security entry will\
          \ be created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /enumerationsets/{webId}/securityentries/{name}:
    get:
      tags:
      - "EnumerationSet"
      summary: "Retrieve the security entry associated with the enumeration set with\
        \ the specified name."
      operationId: "EnumerationSet_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration set."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "EnumerationSet"
      summary: "Update a security entry owned by the enumeration set."
      operationId: "EnumerationSet_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration set where the security entry will\
          \ be updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "EnumerationSet"
      summary: "Delete a security entry owned by the enumeration set."
      operationId: "EnumerationSet_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration set where the security entry will\
          \ be deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was deleted."
  /enumerationvalues:
    get:
      tags:
      - "EnumerationValue"
      summary: "Retrieve an enumeration value by path."
      description: "This method returns a enumeration value based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "EnumerationValue_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the target enumeration value."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified enumeration set."
          schema:
            $ref: "#/definitions/EnumerationValue"
  /enumerationvalues/{webId}:
    get:
      tags:
      - "EnumerationValue"
      summary: "Retrieve an enumeration value mapping"
      operationId: "EnumerationValue_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration value."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified enumeration value mapping"
          schema:
            $ref: "#/definitions/EnumerationValue"
    delete:
      tags:
      - "EnumerationValue"
      summary: "Delete an enumeration value from an enumeration set."
      description: "Deleting a value will remove it from the enumeration set along\
        \ with any value references within the PI Web API system."
      operationId: "EnumerationValue_DeleteEnumerationValue"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration value."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The enumeration value was deleted."
    patch:
      tags:
      - "EnumerationValue"
      summary: "Update an enumeration value by replacing items in its definition."
      operationId: "EnumerationValue_UpdateEnumerationValue"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the enumeration value to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "enumerationValue"
        description: "A partial enumeration value containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/EnumerationValue"
        x-exportParamName: "EnumerationValue"
      responses:
        204:
          description: "The enumeration set was updated."
  /eventframes:
    get:
      tags:
      - "EventFrame"
      summary: "Retrieve an event frame by path."
      description: "This method returns an event frame based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "EventFrame_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the event frame."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified event frame."
          schema:
            $ref: "#/definitions/EventFrame"
  /eventframes/{webId}:
    get:
      tags:
      - "EventFrame"
      summary: "Retrieve an event frame."
      operationId: "EventFrame_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified event frame."
          schema:
            $ref: "#/definitions/EventFrame"
    delete:
      tags:
      - "EventFrame"
      summary: "Delete an event frame."
      operationId: "EventFrame_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame to delete."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The event frame was deleted."
    patch:
      tags:
      - "EventFrame"
      summary: "Update an event frame by replacing items in its definition."
      operationId: "EventFrame_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "eventFrame"
        description: "A partial event frame containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/EventFrame"
        x-exportParamName: "EventFrame"
      responses:
        204:
          description: "The event frame was updated."
  /eventframes/{webId}/acknowledge:
    patch:
      tags:
      - "EventFrame"
      summary: "Calls the EventFrame's Acknowledge method."
      operationId: "EventFrame_Acknowledge"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The event frame has been acknowledged."
  /eventframes/{webId}/annotations:
    get:
      tags:
      - "EventFrame"
      summary: "Get an event frame's annotations."
      operationId: "EventFrame_GetAnnotations"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the owner event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of annotations."
          schema:
            $ref: "#/definitions/Items[Annotation]"
    post:
      tags:
      - "EventFrame"
      summary: "Create an annotation on an event frame."
      operationId: "EventFrame_CreateAnnotation"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the owner event frame on which to create the annotation."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "annotation"
        description: "The new annotation definition."
        required: true
        schema:
          $ref: "#/definitions/Annotation"
        x-exportParamName: "Annotation"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The annotation was created. The response's Location header\
            \ is a link to the annotation."
  /eventframes/{webId}/annotations/{id}:
    get:
      tags:
      - "EventFrame"
      summary: "Get a specific annotation on an event frame."
      operationId: "EventFrame_GetAnnotationById"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "id"
        in: "path"
        description: "The Annotation identifier of the specific annotation."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "webId"
        in: "path"
        description: "The ID of the owner event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested annotation."
          schema:
            $ref: "#/definitions/Annotation"
    delete:
      tags:
      - "EventFrame"
      summary: "Delete an annotation on an event frame. If the annotation has attached\
        \ media, the attached media will also be deleted."
      operationId: "EventFrame_DeleteAnnotation"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "id"
        in: "path"
        description: "The Annotation identifier of the annotation to be deleted."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "webId"
        in: "path"
        description: "The ID of the owner event frame of the annotation to delete."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The annotation was deleted."
    patch:
      tags:
      - "EventFrame"
      summary: "Update an annotation on an event frame by replacing items in its definition."
      operationId: "EventFrame_UpdateAnnotation"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "id"
        in: "path"
        description: "The Annotation identifier of the annotation to be updated."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "webId"
        in: "path"
        description: "The ID of the owner event frame of the annotation to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "annotation"
        description: "A partial annotation containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/Annotation"
        x-exportParamName: "Annotation"
      responses:
        204:
          description: "The annotation was updated."
  /eventframes/{webId}/annotations/{id}/attachment/media:
    delete:
      tags:
      - "EventFrame"
      summary: "Delete attached media from an annotation on an event frame."
      operationId: "EventFrame_DeleteAnnotationAttachmentMediaById"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "id"
        in: "path"
        description: "The Annotation identifier of the annotation to delete the attached\
          \ media of."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "webId"
        in: "path"
        description: "The ID of the owner event frame of the annotation to delete\
          \ the attached media of."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The attached media was deleted."
        404:
          description: "The specified annotation did not have any attached media to\
            \ delete."
          schema:
            $ref: "#/definitions/Errors"
  /eventframes/{webId}/annotations/{id}/attachment/media/metadata:
    get:
      tags:
      - "EventFrame"
      summary: "Gets the metadata of the media attached to the specified annotation."
      operationId: "EventFrame_GetAnnotationAttachmentMediaMetadataById"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "id"
        in: "path"
        description: "The Annotation identifier of the specific annotation."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "webId"
        in: "path"
        description: "The ID of the owner event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested metadata."
          schema:
            $ref: "#/definitions/MediaMetadata"
        400:
          description: "The supplied Web ID could not be parsed, or the request was\
            \ somehow otherwise invalid."
          schema:
            $ref: "#/definitions/Errors"
        404:
          description: "The specified Event Frame did not exist, the specified annotation\
            \ was not found, or the annotation did not have attached media."
          schema:
            $ref: "#/definitions/Errors"
  /eventframes/{webId}/attributes:
    get:
      tags:
      - "EventFrame"
      summary: "Get the attributes of the specified event frame."
      operationId: "EventFrame_GetAttributes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that returned attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "templateName"
        in: "query"
        description: "Specify that returned attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "trait"
        in: "query"
        description: "The name of the attribute trait. Multiple traits may be specified\
          \ with multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Trait"
      - name: "traitCategory"
        in: "query"
        description: "The category of the attribute traits. Multiple categories may\
          \ be specified with multiple instances of the parameter. If the parameter\
          \ is not specified, or if its value is \"all\", then all attribute traits\
          \ of all categories will be returned."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TraitCategory"
      - name: "valueType"
        in: "query"
        description: "Specify that returned attributes' value type must be the given\
          \ value type. The default is no value type filter."
        required: false
        type: "string"
        x-exportParamName: "ValueType"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of child attributes."
          schema:
            $ref: "#/definitions/Items[Attribute]"
    post:
      tags:
      - "EventFrame"
      summary: "Create a new attribute of the specified event frame."
      operationId: "EventFrame_CreateAttribute"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame on which to create the attribute."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "attribute"
        description: "The definition of the new attribute."
        required: true
        schema:
          $ref: "#/definitions/Attribute"
        x-exportParamName: "Attribute"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The attribute was created. The response's Location header\
            \ is a link to the created attribute."
  /eventframes/{webId}/attributes/capture:
    post:
      tags:
      - "EventFrame"
      summary: "Calls the EventFrame's CaptureValues method."
      operationId: "EventFrame_CaptureValues"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The event frame attribute's values were captured."
  /eventframes/{webId}/categories:
    get:
      tags:
      - "EventFrame"
      summary: "Get an event frame's categories."
      operationId: "EventFrame_GetCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of categories."
          schema:
            $ref: "#/definitions/Items[ElementCategory]"
  /eventframes/{webId}/config:
    post:
      tags:
      - "EventFrame"
      summary: "Executes the create configuration function of the data references\
        \ found within the attributes of the event frame, and optionally, its children."
      operationId: "EventFrame_CreateConfig"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "includeChildElements"
        in: "query"
        description: "If true, includes the child event frames of the specified event\
          \ frame."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeChildElements"
      responses:
        200:
          description: "Process log of operations. Operations completed with no errors."
        207:
          description: "Process log of operations. Operations completed with errors."
  /eventframes/{webId}/eventframeattributes:
    get:
      tags:
      - "EventFrame"
      summary: "Retrieves a list of event frame attributes matching the specified\
        \ filters from the specified event frame."
      operationId: "EventFrame_FindEventFrameAttributes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "attributeCategory"
        in: "query"
        description: "Specify that returned attributes must have this category. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeCategory"
      - name: "attributeDescriptionFilter"
        in: "query"
        description: "The attribute description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeDescriptionFilter"
      - name: "attributeNameFilter"
        in: "query"
        description: "The attribute name filter string used for finding objects. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeNameFilter"
      - name: "attributeType"
        in: "query"
        description: "Specify that returned attributes' value type must be this value\
          \ type. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "AttributeType"
      - name: "endTime"
        in: "query"
        description: "A string representing the latest ending time for the event frames\
          \ to be matched. The endTime must be greater than or equal to the startTime.\
          \ The default is '*'."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "eventFrameCategory"
        in: "query"
        description: "Specify that the owner of the returned attributes must have\
          \ this category. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "EventFrameCategory"
      - name: "eventFrameDescriptionFilter"
        in: "query"
        description: "The event frame description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "EventFrameDescriptionFilter"
      - name: "eventFrameNameFilter"
        in: "query"
        description: "The event frame name filter string used for finding objects.\
          \ The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "EventFrameNameFilter"
      - name: "eventFrameTemplate"
        in: "query"
        description: "Specify that the owner of the returned attributes must have\
          \ this template or a template derived from this template. The default is\
          \ no filter."
        required: false
        type: "string"
        x-exportParamName: "EventFrameTemplate"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned (the page size).\
          \ The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "referencedElementNameFilter"
        in: "query"
        description: "The name query string which must match the name of a referenced\
          \ element. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ReferencedElementNameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include objects nested further\
          \ than immediate children of the given resource. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "searchMode"
        in: "query"
        description: "Determines how the startTime and endTime parameters are treated\
          \ when searching for event frames. The default is 'Overlapped'."
        required: false
        type: "string"
        x-exportParamName: "SearchMode"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "startTime"
        in: "query"
        description: "A string representing the earliest starting time for the event\
          \ frames to be matched. startTime must be less than or equal to the endTime.\
          \ The default is '*-8h'."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "a list of matching attributes."
          schema:
            $ref: "#/definitions/Items[Attribute]"
  /eventframes/{webId}/eventframes:
    get:
      tags:
      - "EventFrame"
      summary: "Retrieve event frames based on the specified conditions. By default,\
        \ returns all children of the specified root event frame that have been active\
        \ in the past 8 hours."
      operationId: "EventFrame_GetEventFrames"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "canBeAcknowledged"
        in: "query"
        description: "Specify the returned event frames' canBeAcknowledged property.\
          \ The default is no canBeAcknowledged filter."
        required: false
        type: "boolean"
        x-exportParamName: "CanBeAcknowledged"
      - name: "categoryName"
        in: "query"
        description: "Specify that returned event frames must have this category.\
          \ The default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "endTime"
        in: "query"
        description: "The ending time for the search. The endTime must be greater\
          \ than or equal to the startTime. The searchMode parameter will control\
          \ whether the comparison will be performed against the event frame's startTime\
          \ or endTime. The default is '*' if searchMode is not one of the 'Backward*'\
          \ or 'Forward*' values."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "isAcknowledged"
        in: "query"
        description: "Specify the returned event frames' isAcknowledged property.\
          \ The default no isAcknowledged filter."
        required: false
        type: "boolean"
        x-exportParamName: "IsAcknowledged"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding event frames. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "referencedElementNameFilter"
        in: "query"
        description: "The name query string which must match the name of a referenced\
          \ element. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ReferencedElementNameFilter"
      - name: "referencedElementTemplateName"
        in: "query"
        description: "Specify that returned event frames must have an element in the\
          \ event frame's referenced elements collection that derives from the template.\
          \ Specify this parameter by name."
        required: false
        type: "string"
        x-exportParamName: "ReferencedElementTemplateName"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies whether the search should include objects nested further\
          \ than the immediate children of the search root. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "searchMode"
        in: "query"
        description: "Determines how the startTime and endTime parameters are treated\
          \ when searching for event frame objects to be included in the returned\
          \ collection. If this parameter is one of the 'Backward*' or 'Forward*'\
          \ values, none of endTime, sortField, or sortOrder may be specified. The\
          \ default is 'Overlapped'."
        required: false
        type: "string"
        x-exportParamName: "SearchMode"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "severity"
        in: "query"
        description: "Specify that returned event frames must have this severity.\
          \ Multiple severity values may be specified with multiple instances of the\
          \ parameter. The default is no severity filter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Severity"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name' if searchMode is not one of the 'Backward*'\
          \ or 'Forward*' values."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending' if searchMode is not one of the 'Backward*' or 'Forward*'\
          \ values."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "startTime"
        in: "query"
        description: "The starting time for the search. startTime must be less than\
          \ or equal to the endTime. The searchMode parameter will control whether\
          \ the comparison will be performed against the event frame's startTime or\
          \ endTime. The default is '*-8h'."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "templateName"
        in: "query"
        description: "Specify that returned event frames must have this template or\
          \ a template derived from this template. The default is no template filter.\
          \ Specify this parameter by name."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of event frames matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[EventFrame]"
    post:
      tags:
      - "EventFrame"
      summary: "Create an event frame as a child of the specified event frame."
      operationId: "EventFrame_CreateEventFrame"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the parent event frame on which to create the event\
          \ frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "eventFrame"
        description: "The new event frame definition."
        required: true
        schema:
          $ref: "#/definitions/EventFrame"
        x-exportParamName: "EventFrame"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The event frame was created. The response's Location header\
            \ is a link to the event frame."
  /eventframes/{webId}/referencedelements:
    get:
      tags:
      - "EventFrame"
      summary: "Retrieve the event frame's referenced elements."
      operationId: "EventFrame_GetReferencedElements"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame whose referenced elements should be\
          \ retrieved."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of referenced elements."
          schema:
            $ref: "#/definitions/Items[Element]"
  /eventframes/{webId}/security:
    get:
      tags:
      - "EventFrame"
      summary: "Get the security information of the specified security item associated\
        \ with the event frame for a specified user."
      operationId: "EventFrame_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /eventframes/{webId}/securityentries:
    get:
      tags:
      - "EventFrame"
      summary: "Retrieve the security entries associated with the event frame based\
        \ on the specified criteria. By default, all security entries for this event\
        \ frame are returned."
      operationId: "EventFrame_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "EventFrame"
      summary: "Create a security entry owned by the event frame."
      operationId: "EventFrame_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the event frame where the security entry will be created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /eventframes/{webId}/securityentries/{name}:
    get:
      tags:
      - "EventFrame"
      summary: "Retrieve the security entry associated with the event frame with the\
        \ specified name."
      operationId: "EventFrame_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the event frame."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "EventFrame"
      summary: "Update a security entry owned by the event frame."
      operationId: "EventFrame_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the event frame where the security entry will be updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "EventFrame"
      summary: "Delete a security entry owned by the event frame."
      operationId: "EventFrame_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the event frame where the security entry will be deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was deleted."
  /eventframes/multiple:
    get:
      tags:
      - "EventFrame"
      summary: "Retrieve multiple event frames by web ids or paths."
      operationId: "EventFrame_GetMultiple"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "asParallel"
        in: "query"
        description: "Specifies if the retrieval processes should be run in parallel\
          \ on the server. This may improve the response time for large amounts of\
          \ requested attributes. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "AsParallel"
      - name: "includeMode"
        in: "query"
        description: "The include mode for the return list. The default is 'All'."
        required: false
        type: "string"
        x-exportParamName: "IncludeMode"
      - name: "path"
        in: "query"
        description: "The path of an event frame. Multiple event frames may be specified\
          \ with multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webId"
        in: "query"
        description: "The ID of an event frame. Multiple event frames may be specified\
          \ with multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested event frames"
          schema:
            $ref: "#/definitions/Items[Item[EventFrame]]"
        207:
          description: "Some or all items contain exceptions."
          schema:
            $ref: "#/definitions/Items[Item[EventFrame]]"
  /eventframes/search:
    get:
      tags:
      - "EventFrame"
      summary: "Retrieve event frames based on the specified conditions. Returns event\
        \ frames using the specified search query string."
      operationId: "EventFrame_GetEventFramesQuery"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "databaseWebId"
        in: "query"
        description: "The ID of the asset database to use as the root of the query."
        required: false
        type: "string"
        x-exportParamName: "DatabaseWebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string is a list of filters used to perform an AFSearch\
          \ for the eventframes in the asset database. An example would be: \"query=Name:=MyEventFrame*\
          \ Category:=MyCategory Template:=EFTemplate*\"."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of event frames matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[EventFrame]"
  /eventframes/searchbyattribute:
    post:
      tags:
      - "EventFrame"
      summary: "Create a link for a \"Search EventFrames By Attribute Value\" operation,\
        \ whose queries are specified in the request content. The SearchRoot is specified\
        \ by the Web Id of the root EventFrame. If the SearchRoot is not specified,\
        \ then the search starts at the Asset Database. ElementTemplate must be provided\
        \ as the Web ID of the ElementTemplate, which are used to create the EventFrames.\
        \ All the attributes in the queries must be defined as AttributeTemplates\
        \ on the ElementTemplate. An array of attribute value queries are ANDed together\
        \ to find the desired Element objects. At least one value query must be specified.\
        \ There are limitations on SearchOperators."
      operationId: "EventFrame_CreateSearchByAttribute"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - in: "body"
        name: "query"
        description: "The query of search by attribute."
        required: true
        schema:
          $ref: "#/definitions/SearchByAttribute"
        x-exportParamName: "Query"
      - name: "noResults"
        in: "query"
        description: "If false, the response content will contain the first page of\
          \ the search results. If true, the response content will be empty. The default\
          \ is false."
        required: false
        type: "boolean"
        x-exportParamName: "NoResults"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The link is stored in the response's \"Location\" header.\
            \ The response content is the first page of the search result by the default\
            \ parameters."
          schema:
            $ref: "#/definitions/Items[EventFrame]"
        400:
          description: "Empty or invalid request content."
          schema:
            $ref: "#/definitions/Errors"
        413:
          description: "Request content is too large."
          schema:
            $ref: "#/definitions/Errors"
  /eventframes/searchbyattribute/{searchId}:
    get:
      tags:
      - "EventFrame"
      summary: "Execute a \"Search EventFrames By Attribute Value\" operation."
      operationId: "EventFrame_ExecuteSearchByAttribute"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "searchId"
        in: "path"
        description: "The encoded search Id of the \"Search EventFrames By Attribute\
          \ Value\" operation."
        required: true
        type: "string"
        x-exportParamName: "SearchId"
      - name: "canBeAcknowledged"
        in: "query"
        description: "Specify the returned event frames' canBeAcknowledged property.\
          \ The default is no canBeAcknowledged filter."
        required: false
        type: "boolean"
        x-exportParamName: "CanBeAcknowledged"
      - name: "endTime"
        in: "query"
        description: "The ending time for the search. endTime must be greater than\
          \ or equal to the startTime. The searchMode parameter will control whether\
          \ the comparison will be performed against the event frame's startTime or\
          \ endTime. The default is '*'."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "isAcknowledged"
        in: "query"
        description: "Specify the returned event frames' isAcknowledged property.\
          \ The default no isAcknowledged filter."
        required: false
        type: "boolean"
        x-exportParamName: "IsAcknowledged"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for finding event frames. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "referencedElementNameFilter"
        in: "query"
        description: "The name query string which must match the name of a referenced\
          \ element. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "ReferencedElementNameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies whether the search should include objects nested further\
          \ than the immediate children of the search root. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "searchMode"
        in: "query"
        description: "Determines how the startTime and endTime parameters are treated\
          \ when searching for event frame objects to be included in the returned\
          \ collection. The default is 'Overlapped'."
        required: false
        type: "string"
        x-exportParamName: "SearchMode"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "severity"
        in: "query"
        description: "Specify that returned event frames must have this severity.\
          \ Multiple severity values may be specified with multiple instances of the\
          \ parameter. The default is no severity filter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Severity"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. The default is 'Name'."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "startTime"
        in: "query"
        description: "The starting time for the search. startTime must be less than\
          \ or equal to the endTime. The searchMode parameter will control whether\
          \ the comparison will be performed against the event frame's startTime or\
          \ endTime. The default is '*-8h'."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "a list of matching EventFrames."
          schema:
            $ref: "#/definitions/Items[EventFrame]"
        400:
          description: "Invalid search Id or search parameters."
          schema:
            $ref: "#/definitions/Errors"
  /notificationcontacttemplates/{webId}:
    get:
      tags:
      - "NotificationContactTemplate"
      summary: "Retrieve a notification contact template."
      operationId: "NotificationContactTemplate_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the notification contact template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified notification contact template."
          schema:
            $ref: "#/definitions/NotificationContactTemplate"
  /notificationrules/{webId}:
    get:
      tags:
      - "NotificationRule"
      summary: "Retrieve a notification rule."
      operationId: "NotificationRule_GetNotificationRules"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the resource to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A notification rule"
          schema:
            $ref: "#/definitions/NotificationRule"
  /notificationrules/{webId}/notificationrulesubscribers:
    get:
      tags:
      - "NotificationRule"
      summary: "Retrieve notification rule subscribers."
      operationId: "NotificationRule_GetNotificationRuleSubscribers"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the resource to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of notification rule subscribers."
          schema:
            $ref: "#/definitions/Items[NotificationRuleSubscriber]"
  /notificationrules/search:
    get:
      tags:
      - "NotificationRule"
      summary: "Retrieve notification rules based on the specified conditions. Returns\
        \ notification rules using the specified search query string."
      operationId: "NotificationRule_GetNotificationRulesQuery"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "databaseWebId"
        in: "query"
        description: "The ID of the asset database to use as the root of the query."
        required: false
        type: "string"
        x-exportParamName: "DatabaseWebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string is a list of filters used to perform an AFSearch\
          \ for the Notification rules in the asset database. An example would be:\
          \ \"query=Name:=MyNotificationRule* Template:=NoteRuleTemplate*\"."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of notification rules matching the specified conditions."
          schema:
            $ref: "#/definitions/Items[NotificationRule]"
  /notificationrulesubscribers:
    get:
      tags:
      - "NotificationRuleSubscriber"
      summary: "Retrieve a notification rule subscriber by path."
      operationId: "NotificationRuleSubscriber_GetNotificationRuleSubscriberByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the notification rule subscriber."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A notification rule subscriber"
          schema:
            $ref: "#/definitions/NotificationRuleSubscriber"
  /notificationrulesubscribers/{webId}:
    get:
      tags:
      - "NotificationRuleSubscriber"
      summary: "Retrieve a notification rule subscriber."
      operationId: "NotificationRuleSubscriber_GetNotificationRuleSubscriber"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the resource to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A notification rule subscriber"
          schema:
            $ref: "#/definitions/NotificationRuleSubscriber"
  /notificationrulesubscribers/{webId}/notificationrulesubscribers:
    get:
      tags:
      - "NotificationRuleSubscriber"
      summary: "Retrieve notification rule subscriber subscribers."
      operationId: "NotificationRuleSubscriber_GetNotificationRuleSubscribers"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the resource to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of notification rules subscribers."
          schema:
            $ref: "#/definitions/Items[NotificationRuleSubscriber]"
  /notificationruletemplates/{webId}:
    get:
      tags:
      - "NotificationRuleTemplate"
      summary: "Get the specified notification rule template."
      operationId: "NotificationRuleTemplate_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the notification rule template."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified notification rule template."
          schema:
            $ref: "#/definitions/NotificationRuleTemplate"
  /notificationruletemplates/{webId}/notificationrulesubscribers:
    get:
      tags:
      - "NotificationRuleTemplate"
      summary: "Retrieve notification rule template subscribers."
      operationId: "NotificationRuleTemplate_GetNotificationRuleTemplateSubscribers"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the resource to use as the root of the search."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of notification rule template subscribers."
          schema:
            $ref: "#/definitions/Items[NotificationRuleSubscriber]"
  /notificationruletemplates/search:
    get:
      tags:
      - "NotificationRuleTemplate"
      summary: "Retrieve Notification rule templates based on the specified conditions.\
        \ Returns Notification rule templates using the specified search query string."
      operationId: "NotificationRuleTemplate_GetNotificationRuleTemplatesQuery"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "databaseWebId"
        in: "query"
        description: "The ID of the asset database to use as the root of the query."
        required: false
        type: "string"
        x-exportParamName: "DatabaseWebId"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of objects to be returned per call (page\
          \ size). The default is 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "query"
        in: "query"
        description: "The query string is a list of filters used to perform an AFSearch\
          \ for the Notification rule templates in the asset database. An example\
          \ would be: \"query=NotificationRuleTemplate:{ Name:='MyNotificationRuleTemplate'\
          \ } Type:=Int32\"."
        required: false
        type: "string"
        x-exportParamName: "Query"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startIndex"
        in: "query"
        description: "The starting index (zero based) of the items to be returned.\
          \ The default is 0."
        required: false
        type: "integer"
        x-exportParamName: "StartIndex"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of notification rule templates matching the specified\
            \ conditions."
          schema:
            $ref: "#/definitions/Items[NotificationRuleTemplate]"
  /points:
    get:
      tags:
      - "Point"
      summary: "Get a point by path."
      description: "This method returns a PI Point based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "Point_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the point."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified point."
          schema:
            $ref: "#/definitions/Point"
  /points/{webId}:
    get:
      tags:
      - "Point"
      summary: "Get a point."
      operationId: "Point_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the point."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified point."
          schema:
            $ref: "#/definitions/Point"
    delete:
      tags:
      - "Point"
      summary: "Delete a point."
      operationId: "Point_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the point."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The point was deleted."
    patch:
      tags:
      - "Point"
      summary: "Update a point."
      operationId: "Point_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the point."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "pointDTO"
        description: "A partial point containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/Point"
        x-exportParamName: "PointDTO"
      responses:
        204:
          description: "The point was updated."
  /points/{webId}/attributes:
    get:
      tags:
      - "Point"
      summary: "Get point attributes."
      operationId: "Point_GetAttributes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the point."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "name"
        in: "query"
        description: "The name of a point attribute to be returned. Multiple attributes\
          \ may be specified with multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Name"
      - name: "nameFilter"
        in: "query"
        description: "The filter to the names of the list of point attributes to be\
          \ returned. The default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of point attributes based on the specified names and\
            \ name filter."
          schema:
            $ref: "#/definitions/Items[PointAttribute]"
        400:
          description: "Some or all of the point attribute names could not be found."
          schema:
            $ref: "#/definitions/Errors"
  /points/{webId}/attributes/{name}:
    get:
      tags:
      - "Point"
      summary: "Get a point attribute by name."
      operationId: "Point_GetAttributeByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the attribute."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the point."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A point attribute specified by its name."
          schema:
            $ref: "#/definitions/PointAttribute"
  /points/multiple:
    get:
      tags:
      - "Point"
      summary: "Retrieve multiple points by web id or path."
      operationId: "Point_GetMultiple"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "asParallel"
        in: "query"
        description: "Specifies if the retrieval processes should be run in parallel\
          \ on the server. This may improve the response time for large amounts of\
          \ requested points. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "AsParallel"
      - name: "includeMode"
        in: "query"
        description: "The include mode for the return list. The default is 'All'."
        required: false
        type: "string"
        x-exportParamName: "IncludeMode"
      - name: "path"
        in: "query"
        description: "The path of a point. Multiple points may be specified with multiple\
          \ instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webId"
        in: "query"
        description: "The ID of a point. Multiple points may be specified with multiple\
          \ instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested points"
          schema:
            $ref: "#/definitions/Items[Item[Point]]"
        207:
          description: "Some or all items contain exceptions."
          schema:
            $ref: "#/definitions/Items[Item[Point]]"
  /securityidentities:
    get:
      tags:
      - "SecurityIdentity"
      summary: "Retrieve a security identity by path."
      description: "This method returns a security identity based on the path associated\
        \ with it, and should be used when a path has been received from a separate\
        \ part of the PI System for use in the PI Web API. Users should primarily\
        \ search with the WebID when available."
      operationId: "SecurityIdentity_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the security identity."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified security identity."
          schema:
            $ref: "#/definitions/SecurityIdentity"
  /securityidentities/{webId}:
    get:
      tags:
      - "SecurityIdentity"
      summary: "Retrieve a security identity."
      operationId: "SecurityIdentity_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the security identity."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified security identity."
          schema:
            $ref: "#/definitions/SecurityIdentity"
    delete:
      tags:
      - "SecurityIdentity"
      summary: "Delete a security identity."
      operationId: "SecurityIdentity_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the security identity."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The security identity was deleted."
    patch:
      tags:
      - "SecurityIdentity"
      summary: "Update a security identity by replacing items in its definition."
      operationId: "SecurityIdentity_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the security identity."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityIdentity"
        description: "A partial security identity containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/SecurityIdentity"
        x-exportParamName: "SecurityIdentity"
      responses:
        204:
          description: "The security identity was updated."
  /securityidentities/{webId}/security:
    get:
      tags:
      - "SecurityIdentity"
      summary: "Get the security information of the specified security item associated\
        \ with the security identity for a specified user."
      operationId: "SecurityIdentity_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the security identity for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /securityidentities/{webId}/securityentries:
    get:
      tags:
      - "SecurityIdentity"
      summary: "Retrieve the security entries associated with the security identity\
        \ based on the specified criteria. By default, all security entries for this\
        \ security identity are returned."
      operationId: "SecurityIdentity_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the security identity."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
  /securityidentities/{webId}/securityentries/{name}:
    get:
      tags:
      - "SecurityIdentity"
      summary: "Retrieve the security entry associated with the security identity\
        \ with the specified name."
      operationId: "SecurityIdentity_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the security identity."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
  /securityidentities/{webId}/securitymappings:
    get:
      tags:
      - "SecurityIdentity"
      summary: "Get security mappings for the specified security identity."
      operationId: "SecurityIdentity_GetSecurityMappings"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the security identity."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security mappings for the specified security identity."
          schema:
            $ref: "#/definitions/Items[SecurityMapping]"
  /securitymappings:
    get:
      tags:
      - "SecurityMapping"
      summary: "Retrieve a security mapping by path."
      description: "This method returns a security mapping based on the path associated\
        \ with it, and should be used when a path has been received from a separate\
        \ part of the PI System for use in the PI Web API. Users should primarily\
        \ search with the WebID when available."
      operationId: "SecurityMapping_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the security mapping."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified security mapping."
          schema:
            $ref: "#/definitions/SecurityMapping"
  /securitymappings/{webId}:
    get:
      tags:
      - "SecurityMapping"
      summary: "Retrieve a security mapping."
      operationId: "SecurityMapping_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the security mapping."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified security mapping."
          schema:
            $ref: "#/definitions/SecurityMapping"
    delete:
      tags:
      - "SecurityMapping"
      summary: "Delete a security mapping."
      operationId: "SecurityMapping_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the security mapping."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The security mapping was deleted."
    patch:
      tags:
      - "SecurityMapping"
      summary: "Update a security mapping by replacing items in its definition."
      operationId: "SecurityMapping_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the security mapping."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityMapping"
        description: "A partial security mapping containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/SecurityMapping"
        x-exportParamName: "SecurityMapping"
      responses:
        204:
          description: "The security mapping was updated."
  /securitymappings/{webId}/security:
    get:
      tags:
      - "SecurityMapping"
      summary: "Get the security information of the specified security item associated\
        \ with the security mapping for a specified user."
      operationId: "SecurityMapping_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the security mapping for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user mapping."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user mapping."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user mapping."
          schema:
            $ref: "#/definitions/Errors"
  /securitymappings/{webId}/securityentries:
    get:
      tags:
      - "SecurityMapping"
      summary: "Retrieve the security entries associated with the security mapping\
        \ based on the specified criteria. By default, all security entries for this\
        \ security mapping are returned."
      operationId: "SecurityMapping_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the security mapping."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
  /securitymappings/{webId}/securityentries/{name}:
    get:
      tags:
      - "SecurityMapping"
      summary: "Retrieve the security entry associated with the security mapping with\
        \ the specified name."
      operationId: "SecurityMapping_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the security mapping."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
  /streams/{webId}/channel:
    get:
      tags:
      - "Stream"
      summary: "Opens a channel that will send messages about any value changes for\
        \ the specified stream."
      operationId: "Stream_GetChannel"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "heartbeatRate"
        in: "query"
        description: "HeartbeatRate is an integer multiple of the Polling Interval.\
          \ It specifies the rate at which a client will receive an empty message\
          \ if there are no data updates. It can be used to check that the connection\
          \ is still alive. Zero/negative values correspond to no heartbeat. By default,\
          \ no empty messages will be sent to the user."
        required: false
        type: "integer"
        x-exportParamName: "HeartbeatRate"
      - name: "includeInitialValues"
        in: "query"
        description: "Specified if the channel should send a message with the current\
          \ value of the stream after the connection is opened. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeInitialValues"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        101:
          description: "Switches to the Web Socket protocol."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
  /streams/{webId}/end:
    get:
      tags:
      - "Stream"
      summary: "Returns the end-of-stream value of the stream."
      operationId: "Stream_GetEnd"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "desiredUnits"
        in: "query"
        description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        required: false
        type: "string"
        x-exportParamName: "DesiredUnits"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      responses:
        200:
          description: "The value at the specified time value."
          schema:
            $ref: "#/definitions/TimedValue"
  /streams/{webId}/interpolated:
    get:
      tags:
      - "Stream"
      summary: "Retrieves interpolated values over the specified time range at the\
        \ specified sampling interval."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "Stream_GetInterpolated"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "desiredUnits"
        in: "query"
        description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        required: false
        type: "string"
        x-exportParamName: "DesiredUnits"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "filterExpression"
        in: "query"
        description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "includeFilteredValues"
        in: "query"
        description: "Specify 'true' to indicate that values which fail the filter\
          \ criteria are present in the returned data at the times where they occurred\
          \ with a value set to a 'Filtered' enumeration value with bad status. Repeated\
          \ consecutive failures are omitted."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeFilteredValues"
      - name: "interval"
        in: "query"
        description: "The sampling interval, in AFTimeSpan format."
        required: false
        type: "string"
        x-exportParamName: "Interval"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "syncTime"
        in: "query"
        description: "An optional start time anchor, in AFTime format. When specified,\
          \ interpolated data retrieval will use the sync time as the origin for calculating\
          \ the interval times."
        required: false
        type: "string"
        x-exportParamName: "SyncTime"
      - name: "syncTimeBoundaryType"
        in: "query"
        description: "An optional string specifying the boundary type to use when\
          \ applying a syncTime. The allowed values are 'Inside' and 'Outside'. The\
          \ default is 'Inside'."
        required: false
        type: "string"
        x-exportParamName: "SyncTimeBoundaryType"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      responses:
        200:
          description: "The values that meet the specified conditions."
          schema:
            $ref: "#/definitions/TimedValues"
        400:
          description: "The request was malformed."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "The data reference does not support this method, or the supplied\
            \ filter expression is unsupported, or the desired units of measure are\
            \ incompatible."
          schema:
            $ref: "#/definitions/Errors"
  /streams/{webId}/interpolatedattimes:
    get:
      tags:
      - "Stream"
      summary: "Retrieves interpolated values over the specified time range at the\
        \ specified sampling interval."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "Stream_GetInterpolatedAtTimes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "desiredUnits"
        in: "query"
        description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        required: false
        type: "string"
        x-exportParamName: "DesiredUnits"
      - name: "filterExpression"
        in: "query"
        description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "includeFilteredValues"
        in: "query"
        description: "Specify 'true' to indicate that values which fail the filter\
          \ criteria are present in the returned data at the times where they occurred\
          \ with a value set to a 'Filtered' enumeration value with bad status. Repeated\
          \ consecutive failures are omitted."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeFilteredValues"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "time"
        in: "query"
        description: "The timestamp at which to retrieve an interpolated value. Multiple\
          \ timestamps may be specified with multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Time"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      responses:
        200:
          description: "The values that meet the specified conditions."
          schema:
            $ref: "#/definitions/TimedValues"
        400:
          description: "The request was malformed."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "The data reference does not support this method, or the supplied\
            \ filter expression is unsupported, or the desired units of measure are\
            \ incompatible."
          schema:
            $ref: "#/definitions/Errors"
  /streams/{webId}/plot:
    get:
      tags:
      - "Stream"
      summary: "Retrieves values over the specified time range suitable for plotting\
        \ over the number of intervals (typically represents pixels)."
      description: "For each interval, the data available is examined and significant\
        \ values are returned. Each interval can produce up to 5 values if they are\
        \ unique, the first value in the interval, the last value, the highest value,\
        \ the lowest value and at most one exceptional point (bad status or digital\
        \ state). Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "Stream_GetPlot"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "desiredUnits"
        in: "query"
        description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        required: false
        type: "string"
        x-exportParamName: "DesiredUnits"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "intervals"
        in: "query"
        description: "The number of intervals to plot over. Typically, this would\
          \ be the number of horizontal pixels in the trend. The default is '24'.\
          \ For each interval, the data available is examined and significant values\
          \ are returned. Each interval can produce up to 5 values if they are unique,\
          \ the first value in the interval, the last value, the highest value, the\
          \ lowest value and at most one exceptional point (bad status or digital\
          \ state)."
        required: false
        type: "integer"
        x-exportParamName: "Intervals"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      responses:
        200:
          description: "The values that meet the specified conditions"
          schema:
            $ref: "#/definitions/TimedValues"
        400:
          description: "The request was malformed."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "The data reference does not support this method, or the desired\
            \ units of measure are incompatible."
          schema:
            $ref: "#/definitions/Errors"
  /streams/{webId}/recorded:
    get:
      tags:
      - "Stream"
      summary: "Returns a list of compressed values for the requested time range from\
        \ the source provider."
      description: "Returned times are affected by the specified boundary type. If\
        \ no values are found for the time range and conditions specified then the\
        \ HTTP response will be success, with a body containing an empty array of\
        \ Items. When specifying true for the includeFilteredValues parameter, consecutive\
        \ filtered events are not returned. The first value that would be filtered\
        \ out is returned with its time and the enumeration value \"Filtered\". The\
        \ next value in the collection will be the next compressed value in the specified\
        \ direction that passes the filter criteria - if any. When both boundaryType\
        \ and a filterExpression are specified, the events returned for the boundary\
        \ condition specified are passed through the filter. If the includeFilteredValues\
        \ parameter is true, the boundary values will be reported at the proper timestamps\
        \ with the enumeration value \"Filtered\" when the filter conditions are not\
        \ met at the boundary time. If the includeFilteredValues parameter is false\
        \ for this case, no event is returned for the boundary time. Any time series\
        \ value in the response that contains an 'Errors' property indicates PI Web\
        \ API encountered a handled error during the transfer of the response stream.\
        \   If only recorded values with annotations are desired, the filterExpression\
        \ parameter should include the filter IsSet('.', \"a\")."
      operationId: "Stream_GetRecorded"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "associations"
        in: "query"
        description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Annotations to return events with annotation values.\
          \ If this parameter is not specified, annotation values are not returned."
        required: false
        type: "string"
        x-exportParamName: "Associations"
      - name: "boundaryType"
        in: "query"
        description: "An optional value that determines how the times and values of\
          \ the returned end points are determined. The default is 'Inside'."
        required: false
        type: "string"
        x-exportParamName: "BoundaryType"
      - name: "desiredUnits"
        in: "query"
        description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        required: false
        type: "string"
        x-exportParamName: "DesiredUnits"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "filterExpression"
        in: "query"
        description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. The default is no filtering."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "includeFilteredValues"
        in: "query"
        description: "Specify 'true' to indicate that values which fail the filter\
          \ criteria are present in the returned data at the times where they occurred\
          \ with a value set to a 'Filtered' enumeration value with bad status. Repeated\
          \ consecutive failures are omitted."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeFilteredValues"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of values to be returned. The default is\
          \ 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      responses:
        200:
          description: "The values that meet the specified conditions."
          schema:
            $ref: "#/definitions/ExtendedTimedValues"
        400:
          description: "The request was malformed."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "The data reference does not support the method, or the supplied\
            \ filter expression is unsupported, or the desired units of measure are\
            \ incompatible, or an unsupported association was specified."
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "Stream"
      summary: "Updates multiple values for the specified stream."
      operationId: "Stream_UpdateValues"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "values"
        description: "The values to add or update."
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/TimedValue"
        x-exportParamName: "Values"
      - name: "bufferOption"
        in: "query"
        description: "The desired AFBufferOption. The default is 'BufferIfPossible'."
        required: false
        type: "string"
        x-exportParamName: "BufferOption"
      - name: "updateOption"
        in: "query"
        description: "The desired AFUpdateOption. The default is 'Replace'."
        required: false
        type: "string"
        x-exportParamName: "UpdateOption"
      responses:
        204:
          description: "All updates executed successfully."
          schema:
            $ref: "#/definitions/Items[Substatus]"
        207:
          description: "The operation was a partial success. The response body contains\
            \ substatuses and errors in the same order as the supplied values."
          schema:
            $ref: "#/definitions/Items[Substatus]"
        409:
          description: "The data reference does not support this operation."
          schema:
            $ref: "#/definitions/Errors"
  /streams/{webId}/recordedattime:
    get:
      tags:
      - "Stream"
      summary: "Returns a single recorded value based on the passed time and retrieval\
        \ mode from the stream."
      description: "If only recorded values with annotations are desired, the filterExpression\
        \ parameter should include the filter IsSet('.', \"a\")."
      operationId: "Stream_GetRecordedAtTime"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "time"
        in: "query"
        description: "The timestamp at which the value is desired."
        required: true
        type: "string"
        x-exportParamName: "Time"
      - name: "associations"
        in: "query"
        description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Annotations to return events with annotation values.\
          \ If this parameter is not specified, annotation values are not returned."
        required: false
        type: "string"
        x-exportParamName: "Associations"
      - name: "desiredUnits"
        in: "query"
        description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        required: false
        type: "string"
        x-exportParamName: "DesiredUnits"
      - name: "retrievalMode"
        in: "query"
        description: "An optional value that determines the value to return when a\
          \ value doesn't exist at the exact time specified. The default is 'Auto'."
        required: false
        type: "string"
        x-exportParamName: "RetrievalMode"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      responses:
        200:
          description: "The value that meet the specified conditions."
          schema:
            $ref: "#/definitions/ExtendedTimedValue"
        400:
          description: "The request was malformed."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "The data reference does not support the method, or the desired\
            \ units of measure are incompatible."
          schema:
            $ref: "#/definitions/Errors"
  /streams/{webId}/recordedattimes:
    get:
      tags:
      - "Stream"
      summary: "Retrieves recorded values at the specified times."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream.   If only recorded values with annotations are desired,\
        \ the filterExpression parameter should include the filter IsSet('.', \"a\"\
        )."
      operationId: "Stream_GetRecordedAtTimes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "associations"
        in: "query"
        description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Annotations to return events with annotation values.\
          \ If this parameter is not specified, annotation values are not returned."
        required: false
        type: "string"
        x-exportParamName: "Associations"
      - name: "desiredUnits"
        in: "query"
        description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        required: false
        type: "string"
        x-exportParamName: "DesiredUnits"
      - name: "retrievalMode"
        in: "query"
        description: "An optional value that determines the value to return when a\
          \ value doesn't exist at the exact time specified. The default is 'Auto'."
        required: false
        type: "string"
        x-exportParamName: "RetrievalMode"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "time"
        in: "query"
        description: "The timestamp at which to retrieve a recorded value. Multiple\
          \ timestamps may be specified with multiple instances of the parameter."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Time"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      responses:
        200:
          description: "The values that meet the specified conditions."
          schema:
            $ref: "#/definitions/ExtendedTimedValues"
        400:
          description: "The request was malformed."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "The data reference does not support this method, or the desired\
            \ units of measure are incompatible."
          schema:
            $ref: "#/definitions/Errors"
  /streams/{webId}/summary:
    get:
      tags:
      - "Stream"
      summary: "Returns a summary over the specified time range for the stream."
      description: "Count is the only summary type supported on non-numeric streams.\
        \ Requesting a summary for any other type will generate an error. Time-weighted\
        \ totals are computed by integrating the rate tag values over the requested\
        \ time range. If some of the data are bad in the time range, the calculated\
        \ total is divided by the fraction of the time period for which there are\
        \ good values. This approach is equivalent to assuming that during the period\
        \ of bad data, the tag takes on the average values for the entire calculation\
        \ time range. The PercentGood summary may be used to determine if the calculation\
        \ results are suitable for the application's purposes. For time-weighted totals,\
        \ if the time unit rate of the stream cannot be determined, then the value\
        \ will be totaled assuming a unit of \"per day\" and no unit of measure will\
        \ be assigned to the value. If the measured time component of the tag is not\
        \ based on a day, the user of the data must convert the totalized value to\
        \ the correct units."
      operationId: "Stream_GetSummary"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "calculationBasis"
        in: "query"
        description: "Specifies the method of evaluating the data over the time range.\
          \ The default is 'TimeWeighted'."
        required: false
        type: "string"
        x-exportParamName: "CalculationBasis"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "filterExpression"
        in: "query"
        description: "A string containing a filter expression. Expression variables\
          \ are relative to the attribute. Use '.' to reference the containing attribute."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "sampleInterval"
        in: "query"
        description: "When the sampleType is Interval, sampleInterval specifies how\
          \ often the filter expression is evaluated when computing the summary for\
          \ an interval."
        required: false
        type: "string"
        x-exportParamName: "SampleInterval"
      - name: "sampleType"
        in: "query"
        description: "Defines the evaluation of an expression over a time range. The\
          \ default is 'ExpressionRecordedValues'."
        required: false
        type: "string"
        x-exportParamName: "SampleType"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "summaryDuration"
        in: "query"
        description: "The duration of each summary interval. If specified in hours,\
          \ minutes, seconds, or milliseconds, the summary durations will be evenly\
          \ spaced UTC time intervals. Longer interval types are interpreted using\
          \ wall clock rules and are time zone dependent."
        required: false
        type: "string"
        x-exportParamName: "SummaryDuration"
      - name: "summaryType"
        in: "query"
        description: "Specifies the kinds of summaries to produce over the range.\
          \ The default is 'Total'. Multiple summary types may be specified by using\
          \ multiple instances of summaryType."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "SummaryType"
      - name: "timeType"
        in: "query"
        description: "Specifies how to calculate the timestamp for each interval.\
          \ The default is 'Auto'."
        required: false
        type: "string"
        x-exportParamName: "TimeType"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      responses:
        200:
          description: "The summaries that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[SummaryValue]"
        409:
          description: "The data reference does not support this method."
          schema:
            $ref: "#/definitions/Errors"
  /streams/{webId}/value:
    get:
      tags:
      - "Stream"
      summary: "Returns the value of the stream at the specified time. By default,\
        \ this is usually the current value."
      operationId: "Stream_GetValue"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "desiredUnits"
        in: "query"
        description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        required: false
        type: "string"
        x-exportParamName: "DesiredUnits"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "time"
        in: "query"
        description: "An optional time. The default time context is determined from\
          \ the owning object - for example, the time range of the event frame or\
          \ transfer which holds this attribute. Otherwise, the implementation of\
          \ the Data Reference determines the meaning of no context. For Points or\
          \ simply configured PI Point Data References, this means the snapshot value\
          \ of the PI Point on the Data Server."
        required: false
        type: "string"
        x-exportParamName: "Time"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      responses:
        200:
          description: "The value at the specified time value."
          schema:
            $ref: "#/definitions/TimedValue"
        409:
          description: "The data reference does not support the method, or the desired\
            \ units of measure are incompatible."
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "Stream"
      summary: "Updates a value for the specified stream."
      operationId: "Stream_UpdateValue"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the stream."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "value"
        description: "The value to add or update."
        required: true
        schema:
          $ref: "#/definitions/TimedValue"
        x-exportParamName: "Value"
      - name: "bufferOption"
        in: "query"
        description: "The desired AFBufferOption. The default is 'BufferIfPossible'."
        required: false
        type: "string"
        x-exportParamName: "BufferOption"
      - name: "updateOption"
        in: "query"
        description: "The desired AFUpdateOption. The default is 'Replace'. This parameter\
          \ is ignored if the attribute is a configuration item."
        required: false
        type: "string"
        x-exportParamName: "UpdateOption"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        202:
          description: "The value was accepted for a potential buffered update. The\
            \ response's Location header is a link that can be used to examine the\
            \ result."
        204:
          description: "The update operation was successfully applied. The response's\
            \ Location header is a link that can be used to examine the result."
        400:
          description: "The request was malformed."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "The attribute or data reference does not support this operation,\
            \ or the specified units are incompatible."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/{webId}/channel:
    get:
      tags:
      - "StreamSet"
      summary: "Opens a channel that will send messages about any value changes for\
        \ the attributes of an Element, Event Frame, or Attribute."
      operationId: "StreamSet_GetChannel"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of an Element, Event Frame or Attribute, which is the\
          \ base element or parent of all the stream attributes."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that included attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "heartbeatRate"
        in: "query"
        description: "Specifies the maximum number of consecutive empty messages that\
          \ can be elapsed with no new data updates from the PI System, after which\
          \ the client receives an empty payload. It helps to check if the connection\
          \ is still alive. Zero/negative values correspond to no heartbeat, and the\
          \ default value is no heartbeat."
        required: false
        type: "integer"
        x-exportParamName: "HeartbeatRate"
      - name: "includeInitialValues"
        in: "query"
        description: "Specified if the channel should send a message with the current\
          \ values of all the streams after the connection is opened. The default\
          \ is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeInitialValues"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "templateName"
        in: "query"
        description: "Specify that included attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        101:
          description: "Switches to the Web Socket protocol."
          schema:
            $ref: "#/definitions/Items[StreamValue]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/{webId}/end:
    get:
      tags:
      - "StreamSet"
      summary: "Returns End of stream values of the attributes for an Element, Event\
        \ Frame or Attribute"
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetEnd"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of an Element, Event Frame or Attribute, which is the\
          \ base element or parent of all the stream attributes."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that included attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'"
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "templateName"
        in: "query"
        description: "Specify that included attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Summary values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamValue]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/{webId}/interpolated:
    get:
      tags:
      - "StreamSet"
      summary: "Returns interpolated values of attributes for an element, event frame\
        \ or attribute over the specified time range at the specified sampling interval."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetInterpolated"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that included attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "filterExpression"
        in: "query"
        description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "includeFilteredValues"
        in: "query"
        description: "Specify 'true' to indicate that values which fail the filter\
          \ criteria are present in the returned data at the times where they occurred\
          \ with a value set to a 'Filtered' enumeration value with bad status. Repeated\
          \ consecutive failures are omitted."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeFilteredValues"
      - name: "interval"
        in: "query"
        description: "The sampling interval, in AFTimeSpan format."
        required: false
        type: "string"
        x-exportParamName: "Interval"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "syncTime"
        in: "query"
        description: "An optional start time anchor, in AFTime format. When specified,\
          \ interpolated data retrieval will use the sync time as the origin for calculating\
          \ the interval times."
        required: false
        type: "string"
        x-exportParamName: "SyncTime"
      - name: "syncTimeBoundaryType"
        in: "query"
        description: "An optional string specifying the boundary type to use when\
          \ applying a syncTime. The allowed values are 'Inside' and 'Outside'. The\
          \ default is 'Inside'."
        required: false
        type: "string"
        x-exportParamName: "SyncTimeBoundaryType"
      - name: "templateName"
        in: "query"
        description: "Specify that included attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Interpolated values of the streams that meet the specified\
            \ conditions."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
  /streamsets/{webId}/interpolatedattimes:
    get:
      tags:
      - "StreamSet"
      summary: "Returns interpolated values of attributes for an element, event frame\
        \ or attribute at the specified times."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetInterpolatedAtTimes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "time"
        in: "query"
        description: "The timestamp at which to retrieve a interpolated value. Multiple\
          \ timestamps may be specified with multiple instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Time"
      - name: "categoryName"
        in: "query"
        description: "Specify that included attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "filterExpression"
        in: "query"
        description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "includeFilteredValues"
        in: "query"
        description: "Specify 'true' to indicate that values which fail the filter\
          \ criteria are present in the returned data at the times where they occurred\
          \ with a value set to a 'Filtered' enumeration value with bad status. Repeated\
          \ consecutive failures are omitted."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeFilteredValues"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "templateName"
        in: "query"
        description: "Specify that included attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Interpolated values of the streams that meet the specified\
            \ conditions."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
        400:
          description: "The request was malformed."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "The request was cancelled."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/{webId}/plot:
    get:
      tags:
      - "StreamSet"
      summary: "Returns values of attributes for an element, event frame or attribute\
        \ over the specified time range suitable for plotting over the number of intervals\
        \ (typically represents pixels)."
      description: "For each interval, the data available is examined and significant\
        \ values are returned. Each interval can produce up to 5 values if they are\
        \ unique, the first value in the interval, the last value, the highest value,\
        \ the lowest value and at most one exceptional point (bad status or digital\
        \ state). Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetPlot"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that included attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "intervals"
        in: "query"
        description: "The number of intervals to plot over. Typically, this would\
          \ be the number of horizontal pixels in the trend. The default is '24'.\
          \ For each interval, the data available is examined and significant values\
          \ are returned. Each interval can produce up to 5 values if they are unique,\
          \ the first value in the interval, the last value, the highest value, the\
          \ lowest value and at most one exceptional point (bad status or digital\
          \ state)."
        required: false
        type: "integer"
        x-exportParamName: "Intervals"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'"
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "templateName"
        in: "query"
        description: "Specify that included attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Plot values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/{webId}/recorded:
    get:
      tags:
      - "StreamSet"
      summary: "Returns recorded values of the attributes for an element, event frame,\
        \ or attribute."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetRecorded"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "boundaryType"
        in: "query"
        description: "An optional value that determines how the times and values of\
          \ the returned end points are determined. The default is 'Inside'."
        required: false
        type: "string"
        x-exportParamName: "BoundaryType"
      - name: "categoryName"
        in: "query"
        description: "Specify that included attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "filterExpression"
        in: "query"
        description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. The default is no filtering."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "includeFilteredValues"
        in: "query"
        description: "Specify 'true' to indicate that values which fail the filter\
          \ criteria are present in the returned data at the times where they occurred\
          \ with a value set to a 'Filtered' enumeration value with bad status. Repeated\
          \ consecutive failures are omitted."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeFilteredValues"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of values to be returned. The default is\
          \ 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'"
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "templateName"
        in: "query"
        description: "Specify that included attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Recorded values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "StreamSet"
      summary: "Updates multiple values for the specified streams."
      operationId: "StreamSet_UpdateValues"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the parent element, event frame, or attribute. Attributes\
          \ specified in the body must be descendants of the specified object."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "values"
        description: "The values to add or update."
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/StreamValues"
        x-exportParamName: "Values"
      - name: "bufferOption"
        in: "query"
        description: "The desired AFBufferOption. The default is 'BufferIfPossible'."
        required: false
        type: "string"
        x-exportParamName: "BufferOption"
      - name: "updateOption"
        in: "query"
        description: "The desired AFUpdateOption. The default is 'Replace'."
        required: false
        type: "string"
        x-exportParamName: "UpdateOption"
      responses:
        200:
          description: "All updates executed successfully."
          schema:
            $ref: "#/definitions/Items[Items[Substatus]]"
        207:
          description: "The operation was a partial success. The response body contains\
            \ substatuses and errors in the same order as the supplied values."
          schema:
            $ref: "#/definitions/Items[Items[Substatus]]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/{webId}/recordedattime:
    get:
      tags:
      - "StreamSet"
      summary: "Returns recorded values of the attributes for an element, event frame,\
        \ or attribute."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetRecordedAtTime"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "time"
        in: "query"
        description: "The timestamp at which the values are desired."
        required: true
        type: "string"
        x-exportParamName: "Time"
      - name: "categoryName"
        in: "query"
        description: "Specify that included attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "retrievalMode"
        in: "query"
        description: "An optional value that determines the values to return when\
          \ values don't exist at the exact time specified. The default is 'Auto'."
        required: false
        type: "string"
        x-exportParamName: "RetrievalMode"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "templateName"
        in: "query"
        description: "Specify that included attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Recorded values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamValue]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/{webId}/recordedattimes:
    get:
      tags:
      - "StreamSet"
      summary: "Returns recorded values of attributes for an element, event frame\
        \ or attribute at the specified times."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetRecordedAtTimes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "time"
        in: "query"
        description: "The timestamp at which to retrieve a recorded value. Multiple\
          \ timestamps may be specified with multiple instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Time"
      - name: "categoryName"
        in: "query"
        description: "Specify that included attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "retrievalMode"
        in: "query"
        description: "An optional value that determines the values to return when\
          \ values don't exist at the exact time specified. The default is 'Auto'."
        required: false
        type: "string"
        x-exportParamName: "RetrievalMode"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "templateName"
        in: "query"
        description: "Specify that included attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Recorded values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
        400:
          description: "The request was malformed."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "The request was cancelled."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/{webId}/summary:
    get:
      tags:
      - "StreamSet"
      summary: "Returns summary values of the attributes for an element, event frame\
        \ or attribute."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetSummaries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "calculationBasis"
        in: "query"
        description: "Specifies the method of evaluating the data over the time range.\
          \ The default is 'TimeWeighted'."
        required: false
        type: "string"
        x-exportParamName: "CalculationBasis"
      - name: "categoryName"
        in: "query"
        description: "Specify that included attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "filterExpression"
        in: "query"
        description: "A string containing a filter expression. Expression variables\
          \ are relative to the attribute. Use '.' to reference the containing attribute.\
          \ The default is no filtering."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "sampleInterval"
        in: "query"
        description: "A time span specifies how often the filter expression is evaluated\
          \ when computing the summary for an interval, if the sampleType is 'Interval'."
        required: false
        type: "string"
        x-exportParamName: "SampleInterval"
      - name: "sampleType"
        in: "query"
        description: "A flag which specifies one or more summaries to compute for\
          \ each interval over the time range. The default is 'ExpressionRecordedValues'."
        required: false
        type: "string"
        x-exportParamName: "SampleType"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "summaryDuration"
        in: "query"
        description: "The duration of each summary interval."
        required: false
        type: "string"
        x-exportParamName: "SummaryDuration"
      - name: "summaryType"
        in: "query"
        description: "Specifies the kinds of summaries to produce over the range.\
          \ The default is 'Total'. Multiple summary types may be specified by using\
          \ multiple instances of summaryType."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "SummaryType"
      - name: "templateName"
        in: "query"
        description: "Specify that included attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "timeType"
        in: "query"
        description: "Specifies how to calculate the timestamp for each interval.\
          \ The default is 'Auto'."
        required: false
        type: "string"
        x-exportParamName: "TimeType"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Summary values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamSummaries]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/{webId}/value:
    get:
      tags:
      - "StreamSet"
      summary: "Returns values of the attributes for an Element, Event Frame or Attribute\
        \ at the specified time."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetValues"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of an Element, Event Frame or Attribute, which is the\
          \ base element or parent of all the stream attributes."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "categoryName"
        in: "query"
        description: "Specify that included attributes must have this category. The\
          \ default is no category filter."
        required: false
        type: "string"
        x-exportParamName: "CategoryName"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering attributes. The default\
          \ is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "searchFullHierarchy"
        in: "query"
        description: "Specifies if the search should include attributes nested further\
          \ than the immediate attributes of the searchRoot. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "SearchFullHierarchy"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "showExcluded"
        in: "query"
        description: "Specified if the search should include attributes with the Excluded\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowExcluded"
      - name: "showHidden"
        in: "query"
        description: "Specified if the search should include attributes with the Hidden\
          \ property set. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ShowHidden"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'"
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "templateName"
        in: "query"
        description: "Specify that included attributes must be members of this template.\
          \ The default is no template filter."
        required: false
        type: "string"
        x-exportParamName: "TemplateName"
      - name: "time"
        in: "query"
        description: "An AF time string, which is used as the time context to get\
          \ stream values if it is provided. By default, it is not specified, and\
          \ the default time context of the AF object will be used."
        required: false
        type: "string"
        x-exportParamName: "Time"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Summary values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamValue]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "StreamSet"
      summary: "Updates a single value for the specified streams."
      operationId: "StreamSet_UpdateValue"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the parent element, event frame, or attribute. Attributes\
          \ specified in the body must be descendants of the specified object."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "values"
        description: "The values to add or update."
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/StreamValue"
        x-exportParamName: "Values"
      - name: "bufferOption"
        in: "query"
        description: "The desired AFBufferOption. The default is 'BufferIfPossible'."
        required: false
        type: "string"
        x-exportParamName: "BufferOption"
      - name: "updateOption"
        in: "query"
        description: "The desired AFUpdateOption. The default is 'Replace'."
        required: false
        type: "string"
        x-exportParamName: "UpdateOption"
      responses:
        200:
          description: "All updates executed successfully."
          schema:
            $ref: "#/definitions/Items[Substatus]"
        207:
          description: "The operation was a partial success. The response body contains\
            \ substatuses and errors in the same order as the supplied values."
          schema:
            $ref: "#/definitions/Items[Substatus]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/channel:
    get:
      tags:
      - "StreamSet"
      summary: "Opens a channel that will send messages about any value changes for\
        \ the specified streams."
      operationId: "StreamSet_GetChannelAdHoc"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "query"
        description: "The ID of a stream. Multiple streams may be specified with multiple\
          \ instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "heartbeatRate"
        in: "query"
        description: "Specifies the maximum number of consecutive empty messages that\
          \ can be elapsed with no new data updates from the PI System, after which\
          \ the client receives an empty payload. It helps to check if the connection\
          \ is still alive. Zero/negative values correspond to no heartbeat, and the\
          \ default value is no heartbeat."
        required: false
        type: "integer"
        x-exportParamName: "HeartbeatRate"
      - name: "includeInitialValues"
        in: "query"
        description: "Specified if the channel should send a message with the current\
          \ values of all the streams after the connection is opened. The default\
          \ is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeInitialValues"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        101:
          description: "Switches to the Web Socket protocol."
          schema:
            $ref: "#/definitions/Items[StreamValue]"
  /streamsets/end:
    get:
      tags:
      - "StreamSet"
      summary: "Returns End Of Stream values for attributes of the specified streams"
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetEndAdHoc"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "query"
        description: "The ID of a stream. Multiple streams may be specified with multiple\
          \ instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'"
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "End of stream values of the streams that meet the specified\
            \ conditions."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
  /streamsets/interpolated:
    get:
      tags:
      - "StreamSet"
      summary: "Returns interpolated values of the specified streams over the specified\
        \ time range at the specified sampling interval."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetInterpolatedAdHoc"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "query"
        description: "The ID of a stream. Multiple streams may be specified with multiple\
          \ instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*'. Note that if endTime\
          \ is earlier than startTime, the resulting values will be in time-descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "filterExpression"
        in: "query"
        description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "includeFilteredValues"
        in: "query"
        description: "Specify 'true' to indicate that values which fail the filter\
          \ criteria are present in the returned data at the times where they occurred\
          \ with a value set to a 'Filtered' enumeration value with bad status. Repeated\
          \ consecutive failures are omitted."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeFilteredValues"
      - name: "interval"
        in: "query"
        description: "The sampling interval, in AFTimeSpan format."
        required: false
        type: "string"
        x-exportParamName: "Interval"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'"
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d'."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "syncTime"
        in: "query"
        description: "An optional start time anchor, in AFTime format. When specified,\
          \ interpolated data retrieval will use the sync time as the origin for calculating\
          \ the interval times."
        required: false
        type: "string"
        x-exportParamName: "SyncTime"
      - name: "syncTimeBoundaryType"
        in: "query"
        description: "An optional string specifying the boundary type to use when\
          \ applying a syncTime. The allowed values are 'Inside' and 'Outside'. The\
          \ default is 'Inside'."
        required: false
        type: "string"
        x-exportParamName: "SyncTimeBoundaryType"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Interpolated values of the streams that meet the specified\
            \ conditions."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
  /streamsets/interpolatedattimes:
    get:
      tags:
      - "StreamSet"
      summary: "Returns interpolated values of the specified streams at the specified\
        \ times."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetInterpolatedAtTimesAdHoc"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "time"
        in: "query"
        description: "The timestamp at which to retrieve a interpolated value. Multiple\
          \ timestamps may be specified with multiple instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Time"
      - name: "webId"
        in: "query"
        description: "The ID of a stream. Multiple streams may be specified with multiple\
          \ instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "filterExpression"
        in: "query"
        description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "includeFilteredValues"
        in: "query"
        description: "Specify 'true' to indicate that values which fail the filter\
          \ criteria are present in the returned data at the times where they occurred\
          \ with a value set to a 'Filtered' enumeration value with bad status. Repeated\
          \ consecutive failures are omitted."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeFilteredValues"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Interpolated values of the streams that meet the specified\
            \ conditions."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
        400:
          description: "The request was malformed."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "The request was cancelled."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/plot:
    get:
      tags:
      - "StreamSet"
      summary: "Returns values of attributes for the specified streams over the specified\
        \ time range suitable for plotting over the number of intervals (typically\
        \ represents pixels)."
      description: "For each interval, the data available is examined and significant\
        \ values are returned. Each interval can produce up to 5 values if they are\
        \ unique, the first value in the interval, the last value, the highest value,\
        \ the lowest value and at most one exceptional point (bad status or digital\
        \ state). Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetPlotAdHoc"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "query"
        description: "The ID of a stream. Multiple streams may be specified with multiple\
          \ instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*'. Note that if endTime\
          \ is earlier than startTime, the resulting values will be in time-descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "intervals"
        in: "query"
        description: "The number of intervals to plot over. Typically, this would\
          \ be the number of horizontal pixels in the trend. The default is '24'.\
          \ For each interval, the data available is examined and significant values\
          \ are returned. Each interval can produce up to 5 values if they are unique,\
          \ the first value in the interval, the last value, the highest value, the\
          \ lowest value and at most one exceptional point (bad status or digital\
          \ state)."
        required: false
        type: "integer"
        x-exportParamName: "Intervals"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'"
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d'."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Plot values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/recorded:
    get:
      tags:
      - "StreamSet"
      summary: "Returns recorded values of the specified streams."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetRecordedAdHoc"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "query"
        description: "The ID of a stream. Multiple streams may be specified with multiple\
          \ instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "boundaryType"
        in: "query"
        description: "An optional value that determines how the times and values of\
          \ the returned end points are determined. The default is 'Inside'."
        required: false
        type: "string"
        x-exportParamName: "BoundaryType"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*'. Note that if endTime\
          \ is earlier than startTime, the resulting values will be in time-descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "filterExpression"
        in: "query"
        description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. The default is no filtering."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "includeFilteredValues"
        in: "query"
        description: "Specify 'true' to indicate that values which fail the filter\
          \ criteria are present in the returned data at the times where they occurred\
          \ with a value set to a 'Filtered' enumeration value with bad status. Repeated\
          \ consecutive failures are omitted."
        required: false
        type: "boolean"
        x-exportParamName: "IncludeFilteredValues"
      - name: "maxCount"
        in: "query"
        description: "The maximum number of values to be returned. The default is\
          \ 1000."
        required: false
        type: "integer"
        x-exportParamName: "MaxCount"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'"
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d'."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Recorded values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "StreamSet"
      summary: "Updates multiple values for the specified streams."
      operationId: "StreamSet_UpdateValuesAdHoc"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - in: "body"
        name: "values"
        description: "The values to add or update."
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/StreamValues"
        x-exportParamName: "Values"
      - name: "bufferOption"
        in: "query"
        description: "The desired AFBufferOption. The default is 'BufferIfPossible'."
        required: false
        type: "string"
        x-exportParamName: "BufferOption"
      - name: "updateOption"
        in: "query"
        description: "The desired AFUpdateOption. The default is 'Replace'."
        required: false
        type: "string"
        x-exportParamName: "UpdateOption"
      responses:
        200:
          description: "All updates executed successfully."
          schema:
            $ref: "#/definitions/Items[Items[Substatus]]"
        207:
          description: "The operation was a partial success. The response body contains\
            \ substatuses and errors in the same order as the supplied values."
          schema:
            $ref: "#/definitions/Items[Items[Substatus]]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/recordedattime:
    get:
      tags:
      - "StreamSet"
      summary: "Returns recorded values based on the passed time and retrieval mode."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetRecordedAtTimeAdHoc"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "time"
        in: "query"
        description: "The timestamp at which the values are desired."
        required: true
        type: "string"
        x-exportParamName: "Time"
      - name: "webId"
        in: "query"
        description: "The ID of a stream. Multiple streams may be specified with multiple\
          \ instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "retrievalMode"
        in: "query"
        description: "An optional value that determines the values to return when\
          \ values don't exist at the exact time specified. The default is 'Auto'."
        required: false
        type: "string"
        x-exportParamName: "RetrievalMode"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Recorded values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamValue]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/recordedattimes:
    get:
      tags:
      - "StreamSet"
      summary: "Returns recorded values of the specified streams at the specified\
        \ times."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetRecordedAtTimesAdHoc"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "time"
        in: "query"
        description: "The timestamp at which to retrieve a recorded value. Multiple\
          \ timestamps may be specified with multiple instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Time"
      - name: "webId"
        in: "query"
        description: "The ID of a stream. Multiple streams may be specified with multiple\
          \ instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "retrievalMode"
        in: "query"
        description: "An optional value that determines the values to return when\
          \ values don't exist at the exact time specified. The default is 'Auto'."
        required: false
        type: "string"
        x-exportParamName: "RetrievalMode"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'."
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Recorded values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamValues]"
        400:
          description: "The request was malformed."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "The request was cancelled."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/summary:
    get:
      tags:
      - "StreamSet"
      summary: "Returns summary values of the specified streams."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetSummariesAdHoc"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "query"
        description: "The ID of a stream. Multiple streams may be specified with multiple\
          \ instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "calculationBasis"
        in: "query"
        description: "Specifies the method of evaluating the data over the time range.\
          \ The default is 'TimeWeighted'."
        required: false
        type: "string"
        x-exportParamName: "CalculationBasis"
      - name: "endTime"
        in: "query"
        description: "An optional end time. The default is '*'. Note that if endTime\
          \ is earlier than startTime, the resulting values will be in time-descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "EndTime"
      - name: "filterExpression"
        in: "query"
        description: "A string containing a filter expression. Expression variables\
          \ are relative to the attribute. Use '.' to reference the containing attribute.\
          \ The default is no filtering."
        required: false
        type: "string"
        x-exportParamName: "FilterExpression"
      - name: "sampleInterval"
        in: "query"
        description: "A time span specifies how often the filter expression is evaluated\
          \ when computing the summary for an interval, if the sampleType is 'Interval'."
        required: false
        type: "string"
        x-exportParamName: "SampleInterval"
      - name: "sampleType"
        in: "query"
        description: "A flag which specifies one or more summaries to compute for\
          \ each interval over the time range. The default is 'ExpressionRecordedValues'."
        required: false
        type: "string"
        x-exportParamName: "SampleType"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "startTime"
        in: "query"
        description: "An optional start time. The default is '*-1d'."
        required: false
        type: "string"
        x-exportParamName: "StartTime"
      - name: "summaryDuration"
        in: "query"
        description: "The duration of each summary interval."
        required: false
        type: "string"
        x-exportParamName: "SummaryDuration"
      - name: "summaryType"
        in: "query"
        description: "Specifies the kinds of summaries to produce over the range.\
          \ The default is 'Total'. Multiple summary types may be specified by using\
          \ multiple instances of summaryType."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "SummaryType"
      - name: "timeType"
        in: "query"
        description: "Specifies how to calculate the timestamp for each interval.\
          \ The default is 'Auto'."
        required: false
        type: "string"
        x-exportParamName: "TimeType"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Summary values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamSummaries]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /streamsets/value:
    get:
      tags:
      - "StreamSet"
      summary: "Returns values of the specified streams."
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: "StreamSet_GetValuesAdHoc"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "query"
        description: "The ID of a stream. Multiple streams may be specified with multiple\
          \ instances of the parameter."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "sortField"
        in: "query"
        description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        required: false
        type: "string"
        x-exportParamName: "SortField"
      - name: "sortOrder"
        in: "query"
        description: "The order that the returned collection is sorted. The default\
          \ is 'Ascending'"
        required: false
        type: "string"
        x-exportParamName: "SortOrder"
      - name: "time"
        in: "query"
        description: "An AF time string, which is used as the time context to get\
          \ stream values if it is provided. By default, it is not specified, and\
          \ the default time context of the AF object will be used."
        required: false
        type: "string"
        x-exportParamName: "Time"
      - name: "timeZone"
        in: "query"
        description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        required: false
        type: "string"
        x-exportParamName: "TimeZone"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Summary values of the streams that meet the specified conditions."
          schema:
            $ref: "#/definitions/Items[StreamValue]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "StreamSet"
      summary: "Updates a single value for the specified streams."
      operationId: "StreamSet_UpdateValueAdHoc"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - in: "body"
        name: "values"
        description: "The values to add or update."
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/StreamValue"
        x-exportParamName: "Values"
      - name: "bufferOption"
        in: "query"
        description: "The desired AFBufferOption. The default is 'BufferIfPossible'."
        required: false
        type: "string"
        x-exportParamName: "BufferOption"
      - name: "updateOption"
        in: "query"
        description: "The desired AFUpdateOption. The default is 'Replace'."
        required: false
        type: "string"
        x-exportParamName: "UpdateOption"
      responses:
        200:
          description: "All updates executed successfully."
          schema:
            $ref: "#/definitions/Items[Substatus]"
        207:
          description: "The operation was a partial success. The response body contains\
            \ substatuses and errors in the same order as the supplied values."
          schema:
            $ref: "#/definitions/Items[Substatus]"
        409:
          description: "Unsupported operation on the given AF object."
          schema:
            $ref: "#/definitions/Errors"
  /system:
    get:
      tags:
      - "System"
      summary: "Get system links for this PI System Web API instance."
      operationId: "System_Landing"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters: []
      responses:
        200:
          description: "Links to top level collections and system information."
          schema:
            $ref: "#/definitions/SystemLanding"
  /system/cacheinstances:
    get:
      tags:
      - "System"
      summary: "Get AF cache instances currently in use by the system. These are caches\
        \ from which user requests are serviced. The number of instances depends on\
        \ the number of users connected to the service, the service's authentication\
        \ method, and the cache instance configuration."
      operationId: "System_CacheInstances"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters: []
      responses:
        200:
          description: "Cache instance information."
          schema:
            $ref: "#/definitions/Items[CacheInstance]"
  /system/configuration:
    get:
      tags:
      - "Configuration"
      summary: "Get the current system configuration."
      operationId: "Configuration_List"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters: []
      responses:
        200:
          description: "The current system configuration."
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
  /system/configuration/{key}:
    get:
      tags:
      - "Configuration"
      summary: "Get the value of a configuration item."
      description: "The response content may vary based on the configuration item's\
        \ data type."
      operationId: "Configuration_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of the configuration item."
        required: true
        type: "string"
        x-exportParamName: "Key"
      responses:
        200:
          description: "The value of the configuration item."
          schema:
            type: "object"
            properties: {}
        404:
          description: "The configuration item does not exist."
          schema:
            $ref: "#/definitions/Errors"
    delete:
      tags:
      - "Configuration"
      summary: "Delete a configuration item."
      operationId: "Configuration_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "key"
        in: "path"
        description: "The key of the configuration item to remove."
        required: true
        type: "string"
        x-exportParamName: "Key"
      responses:
        202:
          description: "The change has been accepted, and will take effect when the\
            \ service can cleanly restart."
        404:
          description: "The configuration item does not exist."
          schema:
            $ref: "#/definitions/Errors"
        500:
          description: "An internal error is preventing deletion of the configuration\
            \ item."
          schema:
            $ref: "#/definitions/Errors"
  /system/status:
    get:
      tags:
      - "System"
      summary: "Get information about this PI Web API instance. Examples of information\
        \ returned include the system uptime, the number of cache instances for this\
        \ PI System Web API instance, and the system run state."
      operationId: "System_Status"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters: []
      responses:
        200:
          description: "System Status."
          schema:
            $ref: "#/definitions/SystemStatus"
  /system/userinfo:
    get:
      tags:
      - "System"
      summary: "Get information about the Windows identity used to fulfill the request.\
        \ This depends on the service's authentication method and the credentials\
        \ passed by the client. The impersonation level of the Windows identity is\
        \ included."
      operationId: "System_UserInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters: []
      responses:
        200:
          description: "Information about the current user."
          schema:
            $ref: "#/definitions/UserInfo"
        204:
          description: "No identity is present."
          schema:
            $ref: "#/definitions/UserInfo"
  /system/versions:
    get:
      tags:
      - "System"
      summary: "Get the current versions of the PI Web API instance and all external\
        \ plugins."
      operationId: "System_Versions"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters: []
      responses:
        200:
          description: "A dictionary of assembly name-version information pairs."
          schema:
            type: "object"
            additionalProperties:
              $ref: "#/definitions/Version"
  /tablecategories:
    get:
      tags:
      - "TableCategory"
      summary: "Retrieve a table category by path."
      description: "This method returns a Table Category based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "TableCategory_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the target table category."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified table category."
          schema:
            $ref: "#/definitions/TableCategory"
  /tablecategories/{webId}:
    get:
      tags:
      - "TableCategory"
      summary: "Retrieve a table category."
      operationId: "TableCategory_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The id of the table category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified table category."
          schema:
            $ref: "#/definitions/TableCategory"
    delete:
      tags:
      - "TableCategory"
      summary: "Delete a table category."
      operationId: "TableCategory_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table category to delete."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The table category was deleted."
    patch:
      tags:
      - "TableCategory"
      summary: "Update a table category by replacing items in its definition."
      operationId: "TableCategory_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table category to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "tableCategory"
        description: "A partial table category containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/TableCategory"
        x-exportParamName: "TableCategory"
      responses:
        204:
          description: "The table category was updated."
  /tablecategories/{webId}/security:
    get:
      tags:
      - "TableCategory"
      summary: "Get the security information of the specified security item associated\
        \ with the table category for a specified user."
      operationId: "TableCategory_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table category for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /tablecategories/{webId}/securityentries:
    get:
      tags:
      - "TableCategory"
      summary: "Retrieve the security entries associated with the table category based\
        \ on the specified criteria. By default, all security entries for this table\
        \ category are returned."
      operationId: "TableCategory_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "TableCategory"
      summary: "Create a security entry owned by the table category."
      operationId: "TableCategory_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table category where the security entry will be\
          \ created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /tablecategories/{webId}/securityentries/{name}:
    get:
      tags:
      - "TableCategory"
      summary: "Retrieve the security entry associated with the table category with\
        \ the specified name."
      operationId: "TableCategory_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the table category."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "TableCategory"
      summary: "Update a security entry owned by the table category."
      operationId: "TableCategory_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the table category where the security entry will be\
          \ updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "TableCategory"
      summary: "Delete a security entry owned by the table category."
      operationId: "TableCategory_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the table category where the security entry will be\
          \ deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was deleted."
  /tables:
    get:
      tags:
      - "Table"
      summary: "Retrieve a table by path."
      operationId: "Table_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the table."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified table."
          schema:
            $ref: "#/definitions/Table"
  /tables/{webId}:
    get:
      tags:
      - "Table"
      summary: "Retrieve a table."
      operationId: "Table_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified table."
          schema:
            $ref: "#/definitions/Table"
    delete:
      tags:
      - "Table"
      summary: "Delete a table."
      operationId: "Table_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table to delete."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The table was deleted."
    patch:
      tags:
      - "Table"
      summary: "Update a table by replacing items in its definition."
      operationId: "Table_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table to update."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "table"
        description: "A partial table containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/Table"
        x-exportParamName: "Table"
      responses:
        204:
          description: "The table was updated."
  /tables/{webId}/categories:
    get:
      tags:
      - "Table"
      summary: "Get a table's categories."
      operationId: "Table_GetCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of categories."
          schema:
            $ref: "#/definitions/Items[TableCategory]"
  /tables/{webId}/data:
    get:
      tags:
      - "Table"
      summary: "Get the table's data."
      operationId: "Table_GetData"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      responses:
        200:
          description: "The data for the specified table."
          schema:
            $ref: "#/definitions/TableData"
    put:
      tags:
      - "Table"
      summary: "Update the table's data."
      operationId: "Table_UpdateData"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table on which to update the data."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "data"
        description: "The new table data definition."
        required: true
        schema:
          $ref: "#/definitions/TableData"
        x-exportParamName: "Data"
      responses:
        201:
          description: "The table data was updated."
  /tables/{webId}/security:
    get:
      tags:
      - "Table"
      summary: "Get the security information of the specified security item associated\
        \ with the table for a specified user."
      operationId: "Table_GetSecurity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table for the security to be checked."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "userIdentity"
        in: "query"
        description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "UserIdentity"
      - name: "forceRefresh"
        in: "query"
        description: "Indicates if the security cache should be refreshed before getting\
          \ security information. The default is 'false'."
        required: false
        type: "boolean"
        x-exportParamName: "ForceRefresh"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "Security rights."
          schema:
            $ref: "#/definitions/Items[SecurityRights]"
        400:
          description: "An invalid or local account is specified as the user identity."
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: "Access denied for the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
        409:
          description: "Unsupported when using Anonymous authentication method."
          schema:
            $ref: "#/definitions/Errors"
        502:
          description: "Failed to retrieve the specified user identity."
          schema:
            $ref: "#/definitions/Errors"
  /tables/{webId}/securityentries:
    get:
      tags:
      - "Table"
      summary: "Retrieve the security entries associated with the table based on the\
        \ specified criteria. By default, all security entries for this table are\
        \ returned."
      operationId: "Table_GetSecurityEntries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "nameFilter"
        in: "query"
        description: "The name query string used for filtering security entries. The\
          \ default is no filter."
        required: false
        type: "string"
        x-exportParamName: "NameFilter"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "A list of security entries matching the specified condition."
          schema:
            $ref: "#/definitions/Items[SecurityEntry]"
    post:
      tags:
      - "Table"
      summary: "Create a security entry owned by the table."
      operationId: "Table_CreateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the table where the security entry will be created."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The security entry was created. The response's Location header\
            \ is a link to the security entry."
  /tables/{webId}/securityentries/{name}:
    get:
      tags:
      - "Table"
      summary: "Retrieve the security entry associated with the table with the specified\
        \ name."
      operationId: "Table_GetSecurityEntryByName"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the table."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The security entry matching the specified condition."
          schema:
            $ref: "#/definitions/SecurityEntry"
        404:
          description: "The security entry with the specified name is not found."
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "Table"
      summary: "Update a security entry owned by the table."
      operationId: "Table_UpdateSecurityEntry"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the table where the security entry will be updated."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "securityEntry"
        description: "The new security entry definition. The full list of allow and\
          \ deny rights must be supplied or they will be removed."
        required: true
        schema:
          $ref: "#/definitions/SecurityEntry"
        x-exportParamName: "SecurityEntry"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was updated."
    delete:
      tags:
      - "Table"
      summary: "Delete a security entry owned by the table."
      operationId: "Table_DeleteSecurityEntry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "webId"
        in: "path"
        description: "The ID of the table where the security entry will be deleted."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "applyToChildren"
        in: "query"
        description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        required: false
        type: "boolean"
        x-exportParamName: "ApplyToChildren"
      responses:
        204:
          description: "The security entry was deleted."
  /timeruleplugins:
    get:
      tags:
      - "TimeRulePlugIn"
      summary: "Retrieve a Time Rule Plug-in by path."
      description: "This method returns a Time Rule Plug-in based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "TimeRulePlugIn_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the Time Rule Plug-in."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified Time Rule Plug-in."
          schema:
            $ref: "#/definitions/TimeRulePlugIn"
  /timeruleplugins/{webId}:
    get:
      tags:
      - "TimeRulePlugIn"
      summary: "Retrieve a Time Rule Plug-in."
      operationId: "TimeRulePlugIn_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Time Rule Plug-in."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified Time Rule Plug-in."
          schema:
            $ref: "#/definitions/TimeRulePlugIn"
  /timerules:
    get:
      tags:
      - "TimeRule"
      summary: "Retrieve a Time Rule by path."
      description: "This method returns a Time Rule based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: "TimeRule_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the Time Rule."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested Time Rule."
          schema:
            $ref: "#/definitions/TimeRule"
  /timerules/{webId}:
    get:
      tags:
      - "TimeRule"
      summary: "Retrieve a Time Rule."
      operationId: "TimeRule_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Time Rule."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The requested Time Rule."
          schema:
            $ref: "#/definitions/TimeRule"
    delete:
      tags:
      - "TimeRule"
      summary: "Delete a Time Rule."
      operationId: "TimeRule_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Time Rule."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The Time Rule was deleted."
    patch:
      tags:
      - "TimeRule"
      summary: "Update a Time Rule by replacing items in its definition."
      operationId: "TimeRule_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the Time Rule."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "timeRule"
        description: "A partial Time Rule containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/TimeRule"
        x-exportParamName: "TimeRule"
      responses:
        204:
          description: "The Time Rule was updated."
  /unitclasses:
    get:
      tags:
      - "UnitClass"
      summary: "Retrieve a unit class by path."
      operationId: "UnitClass_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the unit class."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified unit class."
          schema:
            $ref: "#/definitions/UnitClass"
  /unitclasses/{webId}:
    get:
      tags:
      - "UnitClass"
      summary: "Retrieve a unit class."
      operationId: "UnitClass_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the unit class."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified unit class."
          schema:
            $ref: "#/definitions/UnitClass"
    delete:
      tags:
      - "UnitClass"
      summary: "Delete a unit class."
      operationId: "UnitClass_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the unit class."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The unit class was deleted."
    patch:
      tags:
      - "UnitClass"
      summary: "Update a unit class."
      operationId: "UnitClass_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the unit class."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "unitClassDTO"
        description: "A partial unit class containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/UnitClass"
        x-exportParamName: "UnitClassDTO"
      responses:
        204:
          description: "The unit class was updated."
  /unitclasses/{webId}/canonicalunit:
    get:
      tags:
      - "UnitClass"
      summary: "Get the canonical unit of a unit class."
      operationId: "UnitClass_GetCanonicalUnit"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of unit class."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "the canonical unit of the specified unit class."
          schema:
            $ref: "#/definitions/Unit"
  /unitclasses/{webId}/units:
    get:
      tags:
      - "UnitClass"
      summary: "Get a list of all units belonging to the unit class."
      operationId: "UnitClass_GetUnits"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of unit class."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The list of units in the unit class."
          schema:
            $ref: "#/definitions/Unit"
    post:
      tags:
      - "UnitClass"
      summary: "Create a unit in the specified Unit Class."
      operationId: "UnitClass_CreateUnit"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the server."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "unitDTO"
        description: "The new unit definition."
        required: true
        schema:
          $ref: "#/definitions/Unit"
        x-exportParamName: "UnitDTO"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        201:
          description: "The unit was created. The response's Location header is a\
            \ link to the unit."
  /units:
    get:
      tags:
      - "Unit"
      summary: "Retrieve a unit by path."
      operationId: "Unit_GetByPath"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "path"
        in: "query"
        description: "The path to the unit."
        required: true
        type: "string"
        x-exportParamName: "Path"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified unit."
          schema:
            $ref: "#/definitions/Unit"
  /units/{webId}:
    get:
      tags:
      - "Unit"
      summary: "Retrieve a unit."
      operationId: "Unit_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the unit."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - name: "selectedFields"
        in: "query"
        description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        required: false
        type: "string"
        x-exportParamName: "SelectedFields"
      - name: "webIdType"
        in: "query"
        description: "Optional parameter. Used to specify the type of WebID. Useful\
          \ for URL brevity and other special cases. Default is the value of the configuration\
          \ item \"WebIDType\"."
        required: false
        type: "string"
        x-exportParamName: "WebIdType"
      responses:
        200:
          description: "The specified unit."
          schema:
            $ref: "#/definitions/Unit"
    delete:
      tags:
      - "Unit"
      summary: "Delete a unit."
      operationId: "Unit_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the unit."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      responses:
        204:
          description: "The unit was deleted."
    patch:
      tags:
      - "Unit"
      summary: "Update a unit."
      operationId: "Unit_Update"
      consumes:
      - "application/json"
      - "text/json"
      produces:
      - "application/json"
      - "text/json"
      - "text/html"
      - "application/x-ms-application"
      parameters:
      - name: "webId"
        in: "path"
        description: "The ID of the unit."
        required: true
        type: "string"
        x-exportParamName: "WebId"
      - in: "body"
        name: "unitDTO"
        description: "A partial unit containing the desired changes."
        required: true
        schema:
          $ref: "#/definitions/Unit"
        x-exportParamName: "UnitDTO"
      responses:
        204:
          description: "The unit was updated."
definitions:
  Ambiguous:
    type: "object"
    properties:
      Reason:
        type: "string"
        example: "The requested resource has multiple representations."
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
  Analysis:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1XsDqD5loBNH0erqeqJodtALAWDOFEb-U5xGEQwAVXYTCAA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "11853358-94bf-11e7-8443-00155d84c200"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MyAnalysis"
        x-required-post: true
      Description:
        type: "string"
        example: ""
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AnalysisRulePlugInName:
        type: "string"
        example: "PerformanceEquation"
      AutoCreated:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CategoryNames:
        type: "array"
        example:
        - "MyAnalysisCategory"
        items:
          type: "string"
      GroupId:
        type: "integer"
        format: "int32"
        example: 0
      HasNotification:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      HasTarget:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      HasTemplate:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsConfigured:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsTimeRuleDefinedByTemplate:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      MaximumQueueSize:
        type: "integer"
        format: "int32"
        example: 0
      OutputTime:
        type: "string"
        example: ""
      Priority:
        type: "string"
        example: "High"
      PublishResults:
        type: "boolean"
        example: false
      Status:
        type: "string"
        example: "Disabled"
      TargetWebId:
        type: "string"
        format: "webid"
        example: "I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg"
        x-disallow-post: true
      TemplateName:
        type: "string"
        example: ""
      TimeRulePlugInName:
        type: "string"
        example: "Periodic"
      Links:
        $ref: "#/definitions/AnalysisLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]"
      Status: "Disabled"
      IsTimeRuleDefinedByTemplate: false
      Description: ""
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      HasNotification: false
      Priority: "High"
      HasTarget: true
      OutputTime: ""
      HasTemplate: false
      PublishResults: false
      Name: "MyAnalysis"
      GroupId: 0
      TargetWebId: "I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg"
      CategoryNames:
      - "MyAnalysisCategory"
      AutoCreated: false
      AnalysisRulePlugInName: "PerformanceEquation"
      WebId: "I1XsDqD5loBNH0erqeqJodtALAWDOFEb-U5xGEQwAVXYTCAA"
      TimeRulePlugInName: "Periodic"
      TemplateName: ""
      Links:
        Target: "Target"
        SecurityEntries: "SecurityEntries"
        TimeRulePlugIn: "TimeRulePlugIn"
        Categories: "Categories"
        Database: "Database"
        Self: "Self"
        Security: "Security"
        AnalysisRule: "AnalysisRule"
        TimeRule: "TimeRule"
        Template: "Template"
        AnalysisRulePlugIn: "AnalysisRulePlugIn"
      Id: "11853358-94bf-11e7-8443-00155d84c200"
      MaximumQueueSize: 0
      IsConfigured: false
  AnalysisCategory:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1XCDqD5loBNH0erqeqJodtALAoko2-UoOVEibhTWQCk1MDw"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "f9364aa2-0e4a-4854-9b85-35900a4d4c0f"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "CategoryName"
        x-required-post: true
      Description:
        type: "string"
        example: "Relative energy use per ton of process feed."
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\Database\\CategoriesAnalysis[CategoryName]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/AnalysisCategoryLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\Database\\CategoriesAnalysis[CategoryName]"
      Description: "Relative energy use per ton of process feed."
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1XCDqD5loBNH0erqeqJodtALAoko2-UoOVEibhTWQCk1MDw"
      Links:
        SecurityEntries: "SecurityEntries"
        Database: "Database"
        Self: "Self"
        Security: "Security"
      Id: "f9364aa2-0e4a-4854-9b85-35900a4d4c0f"
      Name: "CategoryName"
  AnalysisCategoryLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "analysiscategories/{webId}"
        x-link-optional: false
      Database:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "analysiscategories/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "analysiscategories/{webId}/securityentries"
        x-link-optional: false
    example:
      SecurityEntries: "SecurityEntries"
      Database: "Database"
      Self: "Self"
      Security: "Security"
  AnalysisLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "analyses/{webId}"
        x-link-optional: false
      Target:
        type: "string"
        x-link-path: "elements/{webId}"
        x-link-optional: true
      Database:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: true
      Categories:
        type: "string"
        x-link-path: "analyses/{webId}/categories"
        x-link-optional: false
      Template:
        type: "string"
        x-link-path: "analysistemplates/{webId}"
        x-link-optional: true
      AnalysisRule:
        type: "string"
        x-link-path: "analysisrules/{webId}"
        x-link-optional: true
      AnalysisRulePlugIn:
        type: "string"
        x-link-path: "analysisruleplugins/{webId}"
        x-link-optional: true
      TimeRule:
        type: "string"
        x-link-path: "timerules/{webId}"
        x-link-optional: true
      TimeRulePlugIn:
        type: "string"
        x-link-path: "timeruleplugins/{webId}"
        x-link-optional: true
      Security:
        type: "string"
        x-link-path: "analyses/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "analyses/{webId}/securityentries"
        x-link-optional: false
    example:
      Target: "Target"
      SecurityEntries: "SecurityEntries"
      TimeRulePlugIn: "TimeRulePlugIn"
      Categories: "Categories"
      Database: "Database"
      Self: "Self"
      Security: "Security"
      AnalysisRule: "AnalysisRule"
      TimeRule: "TimeRule"
      Template: "Template"
      AnalysisRulePlugIn: "AnalysisRulePlugIn"
  AnalysisRule:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1XRXDqD5loBNH0erqeqJodtALAfyWdysKU5xGEQwAVXYTCAAfyWdysKU5xGEQwAVXYTCAA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "ca9d257f-94c2-11e7-8443-00155d84c200"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "PerformanceEquation"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Description:
        type: "string"
        example: "Runs a performance equation."
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\\
          AnalysisRule"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ConfigString:
        type: "string"
        example: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
      DisplayString:
        type: "string"
        example: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      EditorType:
        type: "string"
        example: "OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      HasChildren:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsConfigured:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsInitializing:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      PlugInName:
        type: "string"
        example: "PerformanceEquation"
        x-disallow-patch: true
        x-required-post: true
      SupportedBehaviors:
        type: "array"
        example:
        - "SupportsRunningCase"
        - "SupportStatePassing"
        - "OutputCorrectAfterSkipping"
        items:
          type: "string"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      VariableMapping:
        type: "string"
        example: "b||Attribute1;c||Attribute2"
      Links:
        $ref: "#/definitions/AnalysisRuleLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\AnalysisRule"
      ConfigString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
      Description: "Runs a performance equation."
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      VariableMapping: "b||Attribute1;c||Attribute2"
      EditorType: "OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor"
      Name: "PerformanceEquation"
      HasChildren: false
      WebId: "I1XRXDqD5loBNH0erqeqJodtALAfyWdysKU5xGEQwAVXYTCAAfyWdysKU5xGEQwAVXYTCAA"
      DisplayString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
      SupportedBehaviors:
      - "SupportsRunningCase"
      - "SupportStatePassing"
      - "OutputCorrectAfterSkipping"
      Links:
        AnalysisTemplate: "AnalysisTemplate"
        Parent: "Parent"
        Analysis: "Analysis"
        AnalysisRules: "AnalysisRules"
        Self: "Self"
        PlugIn: "PlugIn"
      IsInitializing: false
      Id: "ca9d257f-94c2-11e7-8443-00155d84c200"
      PlugInName: "PerformanceEquation"
      IsConfigured: false
  AnalysisRuleLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "analysisrules/{webId}"
        x-link-optional: false
      AnalysisRules:
        type: "string"
        x-link-path: "analysisrules/{webId}/analysisrules"
        x-link-optional: false
      Analysis:
        type: "string"
        x-link-path: "analyses/{webId}"
        x-link-optional: true
      AnalysisTemplate:
        type: "string"
        x-link-path: "analysistemplates/{webId}"
        x-link-optional: true
      Parent:
        type: "string"
        x-link-path: "analysisrules/{webId}"
        x-link-optional: true
      PlugIn:
        type: "string"
        x-link-path: "analysisruleplugins/{webId}"
        x-link-optional: true
    example:
      AnalysisTemplate: "AnalysisTemplate"
      Parent: "Parent"
      Analysis: "Analysis"
      AnalysisRules: "AnalysisRules"
      Self: "Self"
      PlugIn: "PlugIn"
  AnalysisRulePlugIn:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1XPDqD5loBNH0erqeqJodtALABWwqmmFvekaFShbb-52MAw"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "9a2a6c05-6f61-467a-854a-16dbfb9d8c03"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Imbalance"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Description:
        type: "string"
        example: "Calculates simple material imbalances on nodes of a model."
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\PlugInsAnalysisRule[Imbalance]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AssemblyFileName:
        type: "string"
        example: "OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AssemblyID:
        type: "string"
        format: "uuid"
        example: "1acd00c2-79d0-4818-a03c-0616c4513750"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AssemblyLoadProperties:
        type: "array"
        example:
        - "None"
        items:
          type: "string"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AssemblyTime:
        type: "string"
        format: "date-time"
        example: "2016-05-25T14:01:07Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CompatibilityVersion:
        type: "integer"
        format: "int32"
        example: 2
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsBrowsable:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsNonEditableConfig:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      LoadedAssemblyTime:
        type: "string"
        format: "date-time"
        example: "1970-01-01T00:00:00Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      LoadedVersion:
        type: "string"
        example: ""
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Version:
        type: "string"
        example: "2.8.5.7552"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/AnalysisRulePlugInLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\PlugInsAnalysisRule[Imbalance]"
      AssemblyTime: "2016-05-25T14:01:07Z"
      Description: "Calculates simple material imbalances on nodes of a model."
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      LoadedAssemblyTime: "1970-01-01T00:00:00Z"
      IsBrowsable: true
      Name: "Imbalance"
      IsNonEditableConfig: false
      LoadedVersion: ""
      Version: "2.8.5.7552"
      WebId: "I1XPDqD5loBNH0erqeqJodtALABWwqmmFvekaFShbb-52MAw"
      AssemblyID: "1acd00c2-79d0-4818-a03c-0616c4513750"
      AssemblyLoadProperties:
      - "None"
      CompatibilityVersion: 2
      Links:
        Self: "Self"
        AssetServer: "AssetServer"
      Id: "9a2a6c05-6f61-467a-854a-16dbfb9d8c03"
      AssemblyFileName: "OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll"
  AnalysisRulePlugInLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "analysisruleplugins/{webId}"
        x-link-optional: false
      AssetServer:
        type: "string"
        x-link-path: "assetservers/{webId}"
        x-link-optional: false
    example:
      Self: "Self"
      AssetServer: "AssetServer"
  AnalysisTemplate:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1XTG_auSSsvuECG8ad_p8b25QEZgtYQY_J06YnELl5cALiA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "612d9811-3f06-4e27-989c-42e5e5c00b88"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MyAnalysisTemplate"
        x-required-post: true
      Description:
        type: "string"
        example: ""
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\AnalysisTemplates[MyAnalysisTemplate]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AnalysisRulePlugInName:
        type: "string"
        example: "PerformanceEquation"
      CategoryNames:
        type: "array"
        example:
        - "MyAnalysisCategory"
        items:
          type: "string"
      CreateEnabled:
        type: "boolean"
        example: true
      GroupId:
        type: "integer"
        format: "int32"
        example: 0
      HasNotificationTemplate:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      HasTarget:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      OutputTime:
        type: "string"
        example: ""
      TargetName:
        type: "string"
        example: "MyElementTemplate"
      TimeRulePlugInName:
        type: "string"
        example: "Periodic"
      Links:
        $ref: "#/definitions/AnalysisTemplateLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\AnalysisTemplates[MyAnalysisTemplate]"
      Description: ""
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      HasTarget: false
      OutputTime: ""
      HasNotificationTemplate: false
      TargetName: "MyElementTemplate"
      Name: "MyAnalysisTemplate"
      GroupId: 0
      CreateEnabled: true
      CategoryNames:
      - "MyAnalysisCategory"
      AnalysisRulePlugInName: "PerformanceEquation"
      WebId: "I1XTG_auSSsvuECG8ad_p8b25QEZgtYQY_J06YnELl5cALiA"
      TimeRulePlugInName: "Periodic"
      Links:
        Target: "Target"
        SecurityEntries: "SecurityEntries"
        TimeRulePlugIn: "TimeRulePlugIn"
        Categories: "Categories"
        Database: "Database"
        Self: "Self"
        Security: "Security"
        AnalysisRule: "AnalysisRule"
        TimeRule: "TimeRule"
        AnalysisRulePlugIn: "AnalysisRulePlugIn"
      Id: "612d9811-3f06-4e27-989c-42e5e5c00b88"
  AnalysisTemplateLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "analysistemplates/{webId}"
        x-link-optional: false
      Database:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: false
      Categories:
        type: "string"
        x-link-path: "analysistemplates/{webId}/categories"
        x-link-optional: false
      AnalysisRule:
        type: "string"
        x-link-path: "analysisrules/{webId}"
        x-link-optional: true
      AnalysisRulePlugIn:
        type: "string"
        x-link-path: "analysisruleplugins/{webId}"
        x-link-optional: true
      TimeRule:
        type: "string"
        x-link-path: "timerules/{webId}"
        x-link-optional: true
      TimeRulePlugIn:
        type: "string"
        x-link-path: "timeruleplugins/{webId}"
        x-link-optional: true
      Target:
        type: "string"
        x-link-path: "elementtemplates/{webId}"
        x-link-optional: true
      Security:
        type: "string"
        x-link-path: "analysistemplates/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "analysistemplates/{webId}/securityentries"
        x-link-optional: false
    example:
      Target: "Target"
      SecurityEntries: "SecurityEntries"
      TimeRulePlugIn: "TimeRulePlugIn"
      Categories: "Categories"
      Database: "Database"
      Self: "Self"
      Security: "Security"
      AnalysisRule: "AnalysisRule"
      TimeRule: "TimeRule"
      AnalysisRulePlugIn: "AnalysisRulePlugIn"
  Annotation:
    type: "object"
    properties:
      Id:
        type: "string"
        format: "uuid"
        example: "512B6616-CE39-4F70-9048-8C6A025FB592"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Temperature Annotation"
        x-required-post: true
      Description:
        type: "string"
        example: "Signifies a spike in temperature."
      Value:
        type: "object"
        example: "The temperature spiked because of a malfunction with a unit in our\
          \ west plant."
        properties: {}
      Creator:
        type: "string"
        example: "MyDomain\\UserA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CreationDate:
        type: "string"
        format: "date-time"
        example: "2016-06-21T14:45:50.2988321Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Modifier:
        type: "string"
        example: "MyDomain\\UserA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ModifyDate:
        type: "string"
        format: "date-time"
        example: "2016-06-21T14:45:50.2988321Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/AnnotationLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      CreationDate: "2016-06-21T14:45:50.2988321Z"
      Description: "Signifies a spike in temperature."
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      ModifyDate: "2016-06-21T14:45:50.2988321Z"
      Value: "The temperature spiked because of a malfunction with a unit in our west\
        \ plant."
      Links:
        MediaData: "MediaData"
        Owner: "Owner"
        MediaMetadata: "MediaMetadata"
        Self: "Self"
      Id: "512B6616-CE39-4F70-9048-8C6A025FB592"
      Creator: "MyDomain\\UserA"
      Modifier: "MyDomain\\UserA"
      Name: "Temperature Annotation"
  AnnotationLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-optional: false
      Owner:
        type: "string"
        x-link-optional: false
      MediaData:
        type: "string"
        x-link-path: "eventframes/{webId}/annotations/{id}/attachment/media/mediadata"
        x-link-optional: true
      MediaMetadata:
        type: "string"
        x-link-path: "eventframes/{webId}/annotations/{id}/attachment/media/metadata"
        x-link-optional: true
    example:
      MediaData: "MediaData"
      Owner: "Owner"
      MediaMetadata: "MediaMetadata"
      Self: "Self"
  AssetDatabase:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1RDDqD5loBNH0erqeqJodtALAquulo6433EKdHra7fsmL0g"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "a3a5ebaa-37ae-42dc-9d1e-b6bb7ec98bd2"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MyDatabase"
        x-required-post: true
      Description:
        type: "string"
        example: "PI BI Project Asset Model"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ExtendedProperties:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Value"
      Links:
        $ref: "#/definitions/AssetDatabaseLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase"
      Description: "PI BI Project Asset Model"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1RDDqD5loBNH0erqeqJodtALAquulo6433EKdHra7fsmL0g"
      Links:
        ElementTemplates: "ElementTemplates"
        AnalysisTemplates: "AnalysisTemplates"
        ElementCategories: "ElementCategories"
        Self: "Self"
        Elements: "Elements"
        Security: "Security"
        AssetServer: "AssetServer"
        EnumerationSets: "EnumerationSets"
        SecurityEntries: "SecurityEntries"
        AnalysisCategories: "AnalysisCategories"
        EventFrames: "EventFrames"
        Tables: "Tables"
        TableCategories: "TableCategories"
        AttributeCategories: "AttributeCategories"
      Id: "a3a5ebaa-37ae-42dc-9d1e-b6bb7ec98bd2"
      ExtendedProperties:
        key:
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Exception:
            Errors:
            - "An error has occurred."
      Name: "MyDatabase"
  AssetDatabaseLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: false
      Elements:
        type: "string"
        x-link-path: "assetdatabases/{webId}/elements"
        x-link-optional: false
      ElementTemplates:
        type: "string"
        x-link-path: "assetdatabases/{webId}/elementtemplates"
        x-link-optional: false
      EventFrames:
        type: "string"
        x-link-path: "assetdatabases/{webId}/eventframes"
        x-link-optional: false
      AssetServer:
        type: "string"
        x-link-path: "assetservers/{webId}"
        x-link-optional: false
      ElementCategories:
        type: "string"
        x-link-path: "assetdatabases/{webId}/elementcategories"
        x-link-optional: false
      AttributeCategories:
        type: "string"
        x-link-path: "assetdatabases/{webId}/attributecategories"
        x-link-optional: false
      TableCategories:
        type: "string"
        x-link-path: "assetdatabases/{webId}/tablecategories"
        x-link-optional: false
      AnalysisCategories:
        type: "string"
        x-link-path: "assetdatabases/{webId}/analysiscategories"
        x-link-optional: false
      AnalysisTemplates:
        type: "string"
        x-link-path: "assetdatabases/{webId}/analysistemplates"
        x-link-optional: false
      EnumerationSets:
        type: "string"
        x-link-path: "assetdatabases/{webId}/enumerationsets"
        x-link-optional: false
      Tables:
        type: "string"
        x-link-path: "assetdatabases/{webId}/tables"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "assetdatabases/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "assetdatabases/{webId}/securityentries"
        x-link-optional: false
    example:
      ElementTemplates: "ElementTemplates"
      AnalysisTemplates: "AnalysisTemplates"
      ElementCategories: "ElementCategories"
      Self: "Self"
      Elements: "Elements"
      Security: "Security"
      AssetServer: "AssetServer"
      EnumerationSets: "EnumerationSets"
      SecurityEntries: "SecurityEntries"
      AnalysisCategories: "AnalysisCategories"
      EventFrames: "EventFrames"
      Tables: "Tables"
      TableCategories: "TableCategories"
      AttributeCategories: "AttributeCategories"
  AssetServer:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1RSDqD5loBNH0erqeqJodtALA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "96f9a00e-4d80-471f-aba9-ea89a1db402c"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MyAssetServer"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Description:
        type: "string"
        example: "Sample Description"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsConnected:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ServerVersion:
        type: "string"
        example: "2.5.0.5039"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ServerTime:
        type: "string"
        format: "date-time"
        example: "2014-07-22T14:00:00Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ExtendedProperties:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Value"
      Links:
        $ref: "#/definitions/AssetServerLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer"
      Description: "Sample Description"
      ServerVersion: "2.5.0.5039"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1RSDqD5loBNH0erqeqJodtALA"
      Links:
        SecurityEntries: "SecurityEntries"
        Databases: "Databases"
        UnitClasses: "UnitClasses"
        SecurityIdentities: "SecurityIdentities"
        AnalysisRulePlugIns: "AnalysisRulePlugIns"
        NotificationContactTemplates: "NotificationContactTemplates"
        SecurityMappings: "SecurityMappings"
        Self: "Self"
        TimeRulePlugIns: "TimeRulePlugIns"
        Security: "Security"
      Id: "96f9a00e-4d80-471f-aba9-ea89a1db402c"
      ServerTime: "2014-07-22T14:00:00Z"
      ExtendedProperties:
        key:
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Exception:
            Errors:
            - "An error has occurred."
      Name: "MyAssetServer"
      IsConnected: true
  AssetServerLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "assetservers/{webId}"
        x-link-optional: false
      Databases:
        type: "string"
        x-link-path: "assetservers/{webId}/assetdatabases"
        x-link-optional: false
      NotificationContactTemplates:
        type: "string"
        x-link-path: "assetservers/{webId}/notificationcontacttemplates"
        x-link-optional: false
      SecurityIdentities:
        type: "string"
        x-link-path: "assetservers/{webId}/securityidentities"
        x-link-optional: false
      SecurityMappings:
        type: "string"
        x-link-path: "assetservers/{webId}/securitymappings"
        x-link-optional: false
      UnitClasses:
        type: "string"
        x-link-path: "assetservers/{webId}/unitclasses"
        x-link-optional: false
      AnalysisRulePlugIns:
        type: "string"
        x-link-path: "assetservers/{webId}/analysisruleplugins"
        x-link-optional: false
      TimeRulePlugIns:
        type: "string"
        x-link-path: "assetservers/{webId}/timeruleplugins"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "assetservers/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "assetservers/{webId}/securityentries"
        x-link-optional: false
    example:
      SecurityEntries: "SecurityEntries"
      Databases: "Databases"
      UnitClasses: "UnitClasses"
      SecurityIdentities: "SecurityIdentities"
      AnalysisRulePlugIns: "AnalysisRulePlugIns"
      NotificationContactTemplates: "NotificationContactTemplates"
      SecurityMappings: "SecurityMappings"
      Self: "Self"
      TimeRulePlugIns: "TimeRulePlugIns"
      Security: "Security"
  Attribute:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "75de231b-b591-49b1-b138-e725a77165c2"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Water"
        x-required-post: true
      Description:
        type: "string"
        example: "2008 Water Use"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName|Water(2008)"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Type:
        type: "string"
        example: "Int32"
      TypeQualifier:
        type: "string"
        example: ""
      DefaultUnitsName:
        type: "string"
        example: "liter"
      DisplayDigits:
        type: "integer"
        example: -5
      DataReferencePlugIn:
        type: "string"
        example: "Table Lookup"
      ConfigString:
        type: "string"
        example: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] = '%Element%'"
      IsConfigurationItem:
        type: "boolean"
        example: false
      IsExcluded:
        type: "boolean"
        example: false
        x-disallow-post: true
      IsHidden:
        type: "boolean"
        example: false
      IsManualDataEntry:
        type: "boolean"
        example: false
      HasChildren:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CategoryNames:
        type: "array"
        example:
        - "Energy Savings Targets"
        items:
          type: "string"
      Step:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      TraitName:
        type: "string"
        example: "LimitLoLo"
      DefaultUnitsNameAbbreviation:
        type: "string"
        example: "L"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Span:
        type: "number"
        example: 100.0
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Zero:
        type: "number"
        example: 0.0
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/AttributeLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
        MachineName|Water(2008)"
      IsManualDataEntry: false
      ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] =\
        \ '%Element%'"
      IsHidden: false
      Zero: 0.0
      Description: "2008 Water Use"
      DefaultUnitsName: "liter"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      DisplayDigits: -5
      DefaultUnitsNameAbbreviation: "L"
      Step: false
      Span: 100.0
      Name: "Water"
      IsExcluded: false
      HasChildren: false
      Type: "Int32"
      TraitName: "LimitLoLo"
      CategoryNames:
      - "Energy Savings Targets"
      WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
      IsConfigurationItem: false
      Links:
        PlotData: "PlotData"
        EnumerationSet: "EnumerationSet"
        Parent: "Parent"
        Categories: "Categories"
        Element: "Element"
        Attributes: "Attributes"
        Self: "Self"
        Point: "Point"
        EventFrame: "EventFrame"
        Template: "Template"
        SummaryData: "SummaryData"
        Value: "Value"
        EndValue: "EndValue"
        Trait: "Trait"
        InterpolatedData: "InterpolatedData"
        EnumerationValues: "EnumerationValues"
        RecordedData: "RecordedData"
      Id: "75de231b-b591-49b1-b138-e725a77165c2"
      DataReferencePlugIn: "Table Lookup"
      TypeQualifier: ""
  AttributeCategory:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1ACDqD5loBNH0erqeqJodtALAofQgBVRE3E-0dk03Hqa1ng"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "0520f4a1-4454-4fdc-b476-4d371ea6b59e"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "CategoryName"
        x-required-post: true
      Description:
        type: "string"
        example: "Relative energy use per ton of process feed."
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\Database\\CategoriesAttribute[CategoryName]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/AttributeCategoryLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\Database\\CategoriesAttribute[CategoryName]"
      Description: "Relative energy use per ton of process feed."
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1ACDqD5loBNH0erqeqJodtALAofQgBVRE3E-0dk03Hqa1ng"
      Links:
        SecurityEntries: "SecurityEntries"
        Database: "Database"
        Self: "Self"
        Security: "Security"
      Id: "0520f4a1-4454-4fdc-b476-4d371ea6b59e"
      Name: "CategoryName"
  AttributeCategoryLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "attributecategories/{webId}"
        x-link-optional: false
      Database:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "attributecategories/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "attributecategories/{webId}/securityentries"
        x-link-optional: false
    example:
      SecurityEntries: "SecurityEntries"
      Database: "Database"
      Self: "Self"
      Security: "Security"
  AttributeLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "attributes/{webId}"
        x-link-optional: false
      Attributes:
        type: "string"
        x-link-path: "attributes/{webId}/attributes"
        x-link-optional: false
      Element:
        type: "string"
        x-link-path: "elements/{webId}"
        x-link-optional: true
      EventFrame:
        type: "string"
        x-link-path: "eventframes/{webId}"
        x-link-optional: true
      Parent:
        type: "string"
        x-link-path: "attributes/{webId}"
        x-link-optional: true
      Template:
        type: "string"
        x-link-path: "attributetemplates/{webId}"
        x-link-optional: true
      InterpolatedData:
        type: "string"
        x-link-path: "streams/{webId}/interpolated"
        x-link-optional: false
      RecordedData:
        type: "string"
        x-link-path: "streams/{webId}/recorded"
        x-link-optional: false
      PlotData:
        type: "string"
        x-link-path: "streams/{webId}/plot"
        x-link-optional: false
      SummaryData:
        type: "string"
        x-link-path: "streams/{webId}/summary"
        x-link-optional: false
      Value:
        type: "string"
        x-link-optional: false
      EndValue:
        type: "string"
        x-link-path: "streams/{webId}/end"
        x-link-optional: false
      Point:
        type: "string"
        x-link-path: "points/{webId}"
        x-link-optional: true
      Categories:
        type: "string"
        x-link-path: "attributes/{webId}/categories"
        x-link-optional: false
      EnumerationSet:
        type: "string"
        x-link-path: "enumerationsets/{webId}"
        x-link-optional: true
      EnumerationValues:
        type: "string"
        x-link-path: "enumerationsets/{webId}/enumerationvalues"
        x-link-optional: true
      Trait:
        type: "string"
        x-link-path: "attributetraits/{name}"
        x-link-optional: true
    example:
      PlotData: "PlotData"
      EnumerationSet: "EnumerationSet"
      Parent: "Parent"
      Categories: "Categories"
      Element: "Element"
      Attributes: "Attributes"
      Self: "Self"
      Point: "Point"
      EventFrame: "EventFrame"
      Template: "Template"
      SummaryData: "SummaryData"
      Value: "Value"
      EndValue: "EndValue"
      Trait: "Trait"
      InterpolatedData: "InterpolatedData"
      EnumerationValues: "EnumerationValues"
      RecordedData: "RecordedData"
  AttributeTemplate:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1ATEG_auSSsvuECG8ad_p8b25QQkxqWDwIWU6zC4vmgpd4kgtSfQI9VdxUGA8fi1yf9DVg"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "23d027b5-5dd5-41c5-80f1-f8b5c9ff4356"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Water(2008)"
        x-required-post: true
      Description:
        type: "string"
        example: "2008 Water Use"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[MachineName]|Water(2008)"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Type:
        type: "string"
        example: "Int32"
      TypeQualifier:
        type: "string"
        example: ""
      DefaultUnitsName:
        type: "string"
        example: "liter"
      DefaultValue:
        type: "object"
        example: 0
        properties: {}
      DataReferencePlugIn:
        type: "string"
        example: "Table Lookup"
      ConfigString:
        type: "string"
        example: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] = '%Element%'"
      IsConfigurationItem:
        type: "boolean"
        example: false
      IsExcluded:
        type: "boolean"
        example: false
      IsHidden:
        type: "boolean"
        example: false
      IsManualDataEntry:
        type: "boolean"
        example: false
      HasChildren:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CategoryNames:
        type: "array"
        example:
        - "Energy Savings Targets"
        items:
          type: "string"
      TraitName:
        type: "string"
        example: "LimitLoLo"
      DefaultUnitsNameAbbreviation:
        type: "string"
        example: "L"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/AttributeTemplateLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[MachineName]|Water(2008)"
      IsManualDataEntry: false
      ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] =\
        \ '%Element%'"
      IsHidden: false
      Description: "2008 Water Use"
      DefaultUnitsName: "liter"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      DefaultUnitsNameAbbreviation: "L"
      Name: "Water(2008)"
      IsExcluded: false
      DefaultValue: 0
      HasChildren: false
      Type: "Int32"
      TraitName: "LimitLoLo"
      CategoryNames:
      - "Energy Savings Targets"
      WebId: "I1ATEG_auSSsvuECG8ad_p8b25QQkxqWDwIWU6zC4vmgpd4kgtSfQI9VdxUGA8fi1yf9DVg"
      IsConfigurationItem: false
      Links:
        AttributeTemplates: "AttributeTemplates"
        Parent: "Parent"
        Categories: "Categories"
        Self: "Self"
        Trait: "Trait"
        ElementTemplate: "ElementTemplate"
      Id: "23d027b5-5dd5-41c5-80f1-f8b5c9ff4356"
      DataReferencePlugIn: "Table Lookup"
      TypeQualifier: ""
  AttributeTemplateLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "attributetemplates/{webId}"
        x-link-optional: false
      AttributeTemplates:
        type: "string"
        x-link-path: "attributetemplates/{webId}/attributetemplates"
        x-link-optional: false
      ElementTemplate:
        type: "string"
        x-link-path: "elementtemplates/{webId}"
        x-link-optional: false
      Parent:
        type: "string"
        x-link-path: "attributetemplates/{webId}"
        x-link-optional: true
      Categories:
        type: "string"
        x-link-path: "attributetemplates/{webId}/categories"
        x-link-optional: false
      Trait:
        type: "string"
        x-link-path: "attributetraits/{name}"
        x-link-optional: true
    example:
      AttributeTemplates: "AttributeTemplates"
      Parent: "Parent"
      Categories: "Categories"
      Self: "Self"
      Trait: "Trait"
      ElementTemplate: "ElementTemplate"
  AttributeTrait:
    type: "object"
    properties:
      Name:
        type: "string"
        example: "LimitLoLo"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Abbreviation:
        type: "string"
        example: "LoLo"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AllowChildAttributes:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AllowDuplicates:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsAllowedOnRootAttribute:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsTypeInherited:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsUOMInherited:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      RequireNumeric:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      RequireString:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/AttributeTraitLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Abbreviation: "LoLo"
      RequireNumeric: true
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      IsTypeInherited: true
      Links:
        Self: "Self"
      IsAllowedOnRootAttribute: false
      AllowChildAttributes: false
      Name: "LimitLoLo"
      AllowDuplicates: false
      IsUOMInherited: true
      RequireString: false
  AttributeTraitLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "attributetraits/{name}"
        x-link-optional: false
    example:
      Self: "Self"
  CacheInstance:
    type: "object"
    properties:
      Id:
        type: "string"
        format: "uuid"
        example: "8a5033c9-b77f-431c-9820-c9f538d80dc6"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      LastRefreshTime:
        type: "string"
        format: "date-time"
        example: "2014-07-20T14:08:00Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      WillRefreshAfter:
        type: "string"
        format: "date-time"
        example: "2014-07-20T18:08:00Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ScheduledExpirationTime:
        type: "string"
        format: "date-time"
        example: "2014-07-20T23:08:00Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      User:
        type: "string"
        example: "MyDomain\\Username"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      WebException:
        $ref: "#/definitions/WebException"
    example:
      LastRefreshTime: "2014-07-20T14:08:00Z"
      User: "MyDomain\\Username"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WillRefreshAfter: "2014-07-20T18:08:00Z"
      ScheduledExpirationTime: "2014-07-20T23:08:00Z"
      Id: "8a5033c9-b77f-431c-9820-c9f538d80dc6"
  ChannelInstance:
    type: "object"
    properties:
      Id:
        type: "string"
      StartTime:
        type: "string"
      LastMessageSentTime:
        type: "string"
      SentMessageCount:
        type: "integer"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      LastMessageSentTime: "LastMessageSentTime"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      StartTime: "StartTime"
      Id: "Id"
      SentMessageCount: 0
  DataServer:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1DS1km7hQHxB0i6-VfC-9MwAA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "85bb49d6-f101-4807-baf9-57c2fbd33000"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MyPIServer"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Path:
        type: "string"
        format: "path"
        example: "\\\\PIServer[MyPIServer]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsConnected:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ServerVersion:
        type: "string"
        example: "3.4.390.18"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ServerTime:
        type: "string"
        format: "date-time"
        example: "2014-07-22T14:00:00Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/DataServerLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\PIServer[MyPIServer]"
      ServerVersion: "3.4.390.18"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1DS1km7hQHxB0i6-VfC-9MwAA"
      Links:
        EnumerationSets: "EnumerationSets"
        Points: "Points"
        Self: "Self"
      Id: "85bb49d6-f101-4807-baf9-57c2fbd33000"
      ServerTime: "2014-07-22T14:00:00Z"
      Name: "MyPIServer"
      IsConnected: true
  DataServerLicense:
    type: "object"
    properties:
      AmountLeft:
        type: "string"
        example: "85675"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AmountUsed:
        type: "string"
        example: "1325"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Component.Module"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      TotalAmount:
        type: "string"
        example: "10000"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/DataServerLicenseLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      AmountUsed: "1325"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Links:
        Parent: "Parent"
        Self: "Self"
      TotalAmount: "10000"
      AmountLeft: "85675"
      Name: "Component.Module"
  DataServerLicenseLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "dataservers/{webId}/license"
        x-link-optional: false
      Parent:
        type: "string"
        x-link-path: "dataservers/{webId}"
        x-link-optional: false
    example:
      Parent: "Parent"
      Self: "Self"
  DataServerLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "dataservers/{webId}"
        x-link-optional: false
      Points:
        type: "string"
        x-link-path: "dataservers/{webId}/points"
        x-link-optional: false
      EnumerationSets:
        type: "string"
        x-link-path: "dataservers/{webId}/enumerationsets"
        x-link-optional: false
    example:
      EnumerationSets: "EnumerationSets"
      Points: "Points"
      Self: "Self"
  Element:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "cbb28260-853d-11e4-80c5-00155d844304"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MachineName"
        x-required-post: true
      Description:
        type: "string"
        example: "Manufacturing Equipment MachineName"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      TemplateName:
        type: "string"
        example: "MachineName"
      HasChildren:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CategoryNames:
        type: "array"
        example:
        - "Equipment Assets"
        items:
          type: "string"
      ExtendedProperties:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Value"
      Links:
        $ref: "#/definitions/ElementLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
        MachineName"
      HasChildren: false
      Description: "Manufacturing Equipment MachineName"
      CategoryNames:
      - "Equipment Assets"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA"
      TemplateName: "MachineName"
      Links:
        PlotData: "PlotData"
        Parent: "Parent"
        Categories: "Categories"
        Attributes: "Attributes"
        Analyses: "Analyses"
        Self: "Self"
        Elements: "Elements"
        Security: "Security"
        Template: "Template"
        SecurityEntries: "SecurityEntries"
        NotificationRules: "NotificationRules"
        Database: "Database"
        SummaryData: "SummaryData"
        Value: "Value"
        EventFrames: "EventFrames"
        EndValue: "EndValue"
        DefaultAttribute: "DefaultAttribute"
        InterpolatedData: "InterpolatedData"
        RecordedData: "RecordedData"
      Id: "cbb28260-853d-11e4-80c5-00155d844304"
      ExtendedProperties:
        key:
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Exception:
            Errors:
            - "An error has occurred."
      Name: "MachineName"
  ElementCategory:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1ECDqD5loBNH0erqeqJodtALAQ_lRME1-QUKrnEUKhMgEUA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "3051f943-7e4d-4241-ab9c-450a84c80450"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "CategoryName"
        x-required-post: true
      Description:
        type: "string"
        example: "Relative energy use per ton of process feed."
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\Database\\CategoriesElement[CategoryName]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/ElementCategoryLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\Database\\CategoriesElement[CategoryName]"
      Description: "Relative energy use per ton of process feed."
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1ECDqD5loBNH0erqeqJodtALAQ_lRME1-QUKrnEUKhMgEUA"
      Links:
        SecurityEntries: "SecurityEntries"
        Database: "Database"
        Self: "Self"
        Security: "Security"
      Id: "3051f943-7e4d-4241-ab9c-450a84c80450"
      Name: "CategoryName"
  ElementCategoryLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "elementcategories/{webId}"
        x-link-optional: false
      Database:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "elementcategories/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "elementcategories/{webId}/securityentries"
        x-link-optional: false
    example:
      SecurityEntries: "SecurityEntries"
      Database: "Database"
      Self: "Self"
      Security: "Security"
  ElementLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "elements/{webId}"
        x-link-optional: false
      Analyses:
        type: "string"
        x-link-path: "elements/{webId}/analyses"
        x-link-optional: false
      Attributes:
        type: "string"
        x-link-path: "elements/{webId}/attributes"
        x-link-optional: false
      Elements:
        type: "string"
        x-link-path: "elements/{webId}/elements"
        x-link-optional: false
      Database:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: false
      Parent:
        type: "string"
        x-link-path: "elements/{webId}"
        x-link-optional: true
      Template:
        type: "string"
        x-link-path: "elementtemplates/{webId}"
        x-link-optional: true
      Categories:
        type: "string"
        x-link-path: "elements/{webId}/categories"
        x-link-optional: false
      DefaultAttribute:
        type: "string"
        x-link-path: "attributes/{webId}"
        x-link-optional: true
      EventFrames:
        type: "string"
        x-link-path: "elements/{webId}/eventframes"
        x-link-optional: false
      InterpolatedData:
        type: "string"
        x-link-path: "streamsets/{webId}/interpolated"
        x-link-optional: false
      RecordedData:
        type: "string"
        x-link-path: "streamsets/{webId}/recorded"
        x-link-optional: false
      PlotData:
        type: "string"
        x-link-path: "streamsets/{webId}/plot"
        x-link-optional: false
      SummaryData:
        type: "string"
        x-link-path: "streamsets/{webId}/summary"
        x-link-optional: false
      Value:
        type: "string"
        x-link-path: "streamsets/{webId}/value"
        x-link-optional: false
      EndValue:
        type: "string"
        x-link-path: "streamsets/{webId}/end"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "elements/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "elements/{webId}/securityentries"
        x-link-optional: false
      NotificationRules:
        type: "string"
        x-link-path: "elements/{webId}/notificationrules"
        x-link-optional: false
    example:
      PlotData: "PlotData"
      Parent: "Parent"
      Categories: "Categories"
      Attributes: "Attributes"
      Analyses: "Analyses"
      Self: "Self"
      Elements: "Elements"
      Security: "Security"
      Template: "Template"
      SecurityEntries: "SecurityEntries"
      NotificationRules: "NotificationRules"
      Database: "Database"
      SummaryData: "SummaryData"
      Value: "Value"
      EventFrames: "EventFrames"
      EndValue: "EndValue"
      DefaultAttribute: "DefaultAttribute"
      InterpolatedData: "InterpolatedData"
      RecordedData: "RecordedData"
  ElementTemplate:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1ETDqD5loBNH0erqeqJodtALAkpSYp6uykE2Ku0yChDU91g"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "a7989492-b2ab-4d90-8abb-4c8284353dd6"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MachineName"
        x-required-post: true
      Description:
        type: "string"
        example: "Manufacturing Machine MachineName"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[Boiler]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AllowElementToExtend:
        type: "boolean"
        example: false
      BaseTemplate:
        type: "string"
        example: "Equipment"
      InstanceType:
        type: "string"
        example: "Element"
      NamingPattern:
        type: "string"
        example: "%TEMPLATE%"
      CategoryNames:
        type: "array"
        example:
        - "Equipment Assets"
        items:
          type: "string"
      ExtendedProperties:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Value"
      Severity:
        type: "string"
        example: "None"
      CanBeAcknowledged:
        type: "boolean"
        example: false
      Links:
        $ref: "#/definitions/ElementTemplateLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[Boiler]"
      CanBeAcknowledged: false
      Description: "Manufacturing Machine MachineName"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      NamingPattern: "%TEMPLATE%"
      Severity: "None"
      BaseTemplate: "Equipment"
      ExtendedProperties:
        key:
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Exception:
            Errors:
            - "An error has occurred."
      Name: "MachineName"
      CategoryNames:
      - "Equipment Assets"
      WebId: "I1ETDqD5loBNH0erqeqJodtALAkpSYp6uykE2Ku0yChDU91g"
      Links:
        AttributeTemplates: "AttributeTemplates"
        SecurityEntries: "SecurityEntries"
        DerivedTemplates: "DerivedTemplates"
        Categories: "Categories"
        BaseTemplates: "BaseTemplates"
        AnalysisTemplates: "AnalysisTemplates"
        Database: "Database"
        Self: "Self"
        DefaultAttribute: "DefaultAttribute"
        BaseTemplate: "BaseTemplate"
        Security: "Security"
        NotificationRuleTemplates: "NotificationRuleTemplates"
      Id: "a7989492-b2ab-4d90-8abb-4c8284353dd6"
      AllowElementToExtend: false
      InstanceType: "Element"
  ElementTemplateLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "elementtemplates/{webId}"
        x-link-optional: false
      AnalysisTemplates:
        type: "string"
        x-link-path: "elementtemplates/{webId}/analysistemplates"
        x-link-optional: false
      AttributeTemplates:
        type: "string"
        x-link-path: "elementtemplates/{webId}/attributetemplates"
        x-link-optional: false
      Database:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: false
      Categories:
        type: "string"
        x-link-path: "elementtemplates/{webId}/categories"
        x-link-optional: false
      BaseTemplate:
        type: "string"
        x-link-path: "elementtemplates/{webId}"
        x-link-optional: true
      BaseTemplates:
        type: "string"
        x-link-path: "elementtemplates/{webId}/baseelementtemplates"
        x-link-optional: false
      DerivedTemplates:
        type: "string"
        x-link-path: "elementtemplates/{webId}/derivedelementtemplates"
        x-link-optional: false
      DefaultAttribute:
        type: "string"
        x-link-path: "attributetemplates/{webId}"
        x-link-optional: true
      NotificationRuleTemplates:
        type: "string"
        x-link-path: "elementtemplates/{webId}/notificationruletemplates"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "elementtemplates/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "elementtemplates/{webId}/securityentries"
        x-link-optional: false
    example:
      AttributeTemplates: "AttributeTemplates"
      SecurityEntries: "SecurityEntries"
      DerivedTemplates: "DerivedTemplates"
      Categories: "Categories"
      BaseTemplates: "BaseTemplates"
      AnalysisTemplates: "AnalysisTemplates"
      Database: "Database"
      Self: "Self"
      DefaultAttribute: "DefaultAttribute"
      BaseTemplate: "BaseTemplate"
      Security: "Security"
      NotificationRuleTemplates: "NotificationRuleTemplates"
  EnumerationSet:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1MSRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQ"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "8e77fc4f-ac91-4029-81d6-fb66bd01d431"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Model Number"
        x-required-post: true
      Description:
        type: "string"
        example: "Model numbers by brand of vehicle"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/EnumerationSetLinks"
      SerializeDescription:
        type: "boolean"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]"
      Description: "Model numbers by brand of vehicle"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1MSRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQ"
      Links:
        SecurityEntries: "SecurityEntries"
        DataServer: "DataServer"
        Database: "Database"
        Values: "Values"
        Self: "Self"
        Security: "Security"
      Id: "8e77fc4f-ac91-4029-81d6-fb66bd01d431"
      SerializeDescription: true
      Name: "Model Number"
  EnumerationSetLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "enumerationsets/{webId}"
        x-link-optional: false
      Database:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: true
      DataServer:
        type: "string"
        x-link-path: "dataservers/{webId}"
        x-link-optional: true
      Values:
        type: "string"
        x-link-path: "enumerationsets/{webId}/enumerationvalues"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "enumerationsets/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "enumerationsets/{webId}/securityentries"
        x-link-optional: false
    example:
      SecurityEntries: "SecurityEntries"
      DataServer: "DataServer"
      Database: "Database"
      Values: "Values"
      Self: "Self"
      Security: "Security"
  EnumerationValue:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1MVRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQlIYqmOlvs0ygEQnSeGSe7w"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "982a8694-6fe9-4cb3-a011-09d278649eef"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "CarBrand|Model3"
        x-required-post: true
      Description:
        type: "string"
        example: "Model Number of CarBrand"
      Value:
        type: "integer"
        format: "int32"
        example: 2005
        x-required-post: true
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]\\CarBrand|Model3"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Parent:
        type: "string"
        example: "CarBrand"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/EnumerationValueLinks"
      SerializeWebId:
        type: "boolean"
      SerializeId:
        type: "boolean"
      SerializeDescription:
        type: "boolean"
      SerializePath:
        type: "boolean"
      SerializeLinks:
        type: "boolean"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]\\CarBrand|Model3"
      SerializePath: true
      Description: "Model Number of CarBrand"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Parent: "CarBrand"
      SerializeId: true
      Name: "CarBrand|Model3"
      SerializeWebId: true
      WebId: "I1MVRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQlIYqmOlvs0ygEQnSeGSe7w"
      Value: 2005
      Links:
        EnumerationSet: "EnumerationSet"
        Parent: "Parent"
        Self: "Self"
      SerializeLinks: true
      Id: "982a8694-6fe9-4cb3-a011-09d278649eef"
      SerializeDescription: true
  EnumerationValueLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "enumerationvalues/{webId}"
        x-link-optional: false
      EnumerationSet:
        type: "string"
        x-link-path: "enumerationsets/{webId}"
        x-link-optional: false
      Parent:
        type: "string"
        x-link-path: "enumerationvalues/{webId}"
        x-link-optional: true
    example:
      EnumerationSet: "EnumerationSet"
      Parent: "Parent"
      Self: "Self"
  Errors:
    type: "object"
    properties:
      Errors:
        type: "array"
        example:
        - "An error has occurred."
        items:
          type: "string"
    example:
      Errors:
      - "An error has occurred."
  EventFrame:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "96f9a00e-4d80-471f-0000-00000004b002"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "EF20140725-001"
        x-required-post: true
      Description:
        type: "string"
        example: "Event Frame of Past Week"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      TemplateName:
        type: "string"
        example: "Template"
      HasChildren:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CategoryNames:
        type: "array"
        example:
        - "Processing Plant"
        items:
          type: "string"
      ExtendedProperties:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Value"
      StartTime:
        type: "string"
        format: "date-time"
        example: "2014-07-18T14:45:29Z"
      EndTime:
        type: "string"
        format: "date-time"
        example: "2014-07-25T14:45:29Z"
      Severity:
        type: "string"
        example: "None"
      AcknowledgedBy:
        type: "string"
        example: "MyDomain\\UserA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AcknowledgedDate:
        type: "string"
        format: "date-time"
        example: "2014-07-30T11:04:23Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanBeAcknowledged:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsAcknowledged:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsAnnotated:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsLocked:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AreValuesCaptured:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      RefElementWebIds:
        type: "array"
        example:
        - "I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag"
        items:
          type: "string"
      Security:
        $ref: "#/definitions/Security"
      Links:
        $ref: "#/definitions/EventFrameLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
      IsAcknowledged: true
      CanBeAcknowledged: true
      Description: "Event Frame of Past Week"
      AcknowledgedBy: "MyDomain\\UserA"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      EndTime: "2014-07-25T14:45:29Z"
      StartTime: "2014-07-18T14:45:29Z"
      IsLocked: false
      Severity: "None"
      Security:
        CanWrite: true
        Rights:
        - "Read"
        - "WriteData"
        CanReadData: true
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        HasAdmin: true
        CanWriteData: true
        CanDelete: true
        CanRead: true
        CanAnnotate: true
        CanExecute: true
        CanSubscribe: true
        CanSubscribeOthers: true
      ExtendedProperties:
        key:
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Exception:
            Errors:
            - "An error has occurred."
      Name: "EF20140725-001"
      IsAnnotated: false
      HasChildren: false
      AcknowledgedDate: "2014-07-30T11:04:23Z"
      CategoryNames:
      - "Processing Plant"
      AreValuesCaptured: false
      WebId: "I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg"
      TemplateName: "Template"
      Links:
        PlotData: "PlotData"
        PrimaryReferencedElement: "PrimaryReferencedElement"
        Parent: "Parent"
        Categories: "Categories"
        Attributes: "Attributes"
        ReferencedElements: "ReferencedElements"
        Self: "Self"
        Security: "Security"
        Template: "Template"
        SecurityEntries: "SecurityEntries"
        Annotations: "Annotations"
        Database: "Database"
        SummaryData: "SummaryData"
        Value: "Value"
        EventFrames: "EventFrames"
        EndValue: "EndValue"
        DefaultAttribute: "DefaultAttribute"
        InterpolatedData: "InterpolatedData"
        RecordedData: "RecordedData"
      Id: "96f9a00e-4d80-471f-0000-00000004b002"
      RefElementWebIds:
      - "I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag"
  EventFrameLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "eventframes/{webId}"
        x-link-optional: false
      Attributes:
        type: "string"
        x-link-path: "eventframes/{webId}/attributes"
        x-link-optional: false
      EventFrames:
        type: "string"
        x-link-path: "eventframes/{webId}/eventframes"
        x-link-optional: false
      Database:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: false
      ReferencedElements:
        type: "string"
        x-link-path: "eventframes/{webId}/referencedelements"
        x-link-optional: false
      PrimaryReferencedElement:
        type: "string"
        x-link-path: "elements/{webId}"
        x-link-optional: true
      Parent:
        type: "string"
        x-link-path: "eventframes/{webId}"
        x-link-optional: true
      Template:
        type: "string"
        x-link-path: "elementtemplates/{webId}"
        x-link-optional: true
      DefaultAttribute:
        type: "string"
        x-link-path: "attributes/{webId}"
        x-link-optional: true
      Categories:
        type: "string"
        x-link-path: "eventframes/{webId}/categories"
        x-link-optional: false
      Annotations:
        type: "string"
        x-link-path: "eventframes/{webId}/annotations"
        x-link-optional: true
      InterpolatedData:
        type: "string"
        x-link-path: "streamsets/{webId}/interpolated"
        x-link-optional: false
      RecordedData:
        type: "string"
        x-link-path: "streamsets/{webId}/recorded"
        x-link-optional: false
      PlotData:
        type: "string"
        x-link-path: "streamsets/{webId}/plot"
        x-link-optional: false
      SummaryData:
        type: "string"
        x-link-path: "streamsets/{webId}/summary"
        x-link-optional: false
      Value:
        type: "string"
        x-link-path: "streamsets/{webId}/value"
        x-link-optional: false
      EndValue:
        type: "string"
        x-link-path: "streamsets/{webId}/end"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "eventframes/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "eventframes/{webId}/securityentries"
        x-link-optional: false
    example:
      PlotData: "PlotData"
      PrimaryReferencedElement: "PrimaryReferencedElement"
      Parent: "Parent"
      Categories: "Categories"
      Attributes: "Attributes"
      ReferencedElements: "ReferencedElements"
      Self: "Self"
      Security: "Security"
      Template: "Template"
      SecurityEntries: "SecurityEntries"
      Annotations: "Annotations"
      Database: "Database"
      SummaryData: "SummaryData"
      Value: "Value"
      EventFrames: "EventFrames"
      EndValue: "EndValue"
      DefaultAttribute: "DefaultAttribute"
      InterpolatedData: "InterpolatedData"
      RecordedData: "RecordedData"
  ExtendedTimedValue:
    type: "object"
    properties:
      Annotations:
        type: "array"
        items:
          $ref: "#/definitions/StreamAnnotation"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Timestamp:
        type: "string"
        format: "date-time"
        example: "2014-07-22T14:00:00Z"
      UnitsAbbreviation:
        type: "string"
        example: "m"
      Good:
        type: "boolean"
        example: true
      Questionable:
        type: "boolean"
        example: false
      Substituted:
        type: "boolean"
        example: false
        x-disallow-post: true
      Annotated:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Value:
        type: "object"
        example: 12.3
        properties: {}
      Errors:
        type: "array"
        items:
          $ref: "#/definitions/PropertyError"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      WebException:
        $ref: "#/definitions/WebException"
    example:
      UnitsAbbreviation: "m"
      Annotated: false
      Errors:
      - Message:
        - "An error has occurred."
        FieldName: "Value"
      - Message:
        - "An error has occurred."
        FieldName: "Value"
      Annotations:
      - CreationDate: "2016-06-21T14:45:50.2988321Z"
        Description: "Signifies a spike in temperature."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        ModifyDate: "2016-06-21T14:45:50.2988321Z"
        Value: "The temperature spiked because of a malfunction with a unit in our\
          \ west plant."
        Id: "512B6616-CE39-4F70-9048-8C6A025FB592"
        Creator: "MyDomain\\UserA"
        Modifier: "MyDomain\\UserA"
        Name: "Temperature Annotation"
      - CreationDate: "2016-06-21T14:45:50.2988321Z"
        Description: "Signifies a spike in temperature."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        ModifyDate: "2016-06-21T14:45:50.2988321Z"
        Value: "The temperature spiked because of a malfunction with a unit in our\
          \ west plant."
        Id: "512B6616-CE39-4F70-9048-8C6A025FB592"
        Creator: "MyDomain\\UserA"
        Modifier: "MyDomain\\UserA"
        Name: "Temperature Annotation"
      Substituted: false
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Value: 12.3
      Good: true
      Timestamp: "2014-07-22T14:00:00Z"
      Questionable: false
  ExtendedTimedValues:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/ExtendedTimedValue"
        x-required-post: true
      UnitsAbbreviation:
        type: "string"
        x-disallow-post: true
      WebException:
        $ref: "#/definitions/WebException"
    example:
      UnitsAbbreviation: "UnitsAbbreviation"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Items:
      - UnitsAbbreviation: "m"
        Annotated: false
        Errors:
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        Annotations:
        - CreationDate: "2016-06-21T14:45:50.2988321Z"
          Description: "Signifies a spike in temperature."
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          ModifyDate: "2016-06-21T14:45:50.2988321Z"
          Value: "The temperature spiked because of a malfunction with a unit in our\
            \ west plant."
          Id: "512B6616-CE39-4F70-9048-8C6A025FB592"
          Creator: "MyDomain\\UserA"
          Modifier: "MyDomain\\UserA"
          Name: "Temperature Annotation"
        - CreationDate: "2016-06-21T14:45:50.2988321Z"
          Description: "Signifies a spike in temperature."
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          ModifyDate: "2016-06-21T14:45:50.2988321Z"
          Value: "The temperature spiked because of a malfunction with a unit in our\
            \ west plant."
          Id: "512B6616-CE39-4F70-9048-8C6A025FB592"
          Creator: "MyDomain\\UserA"
          Modifier: "MyDomain\\UserA"
          Name: "Temperature Annotation"
        Substituted: false
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value: 12.3
        Good: true
        Timestamp: "2014-07-22T14:00:00Z"
        Questionable: false
      - UnitsAbbreviation: "m"
        Annotated: false
        Errors:
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        Annotations:
        - CreationDate: "2016-06-21T14:45:50.2988321Z"
          Description: "Signifies a spike in temperature."
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          ModifyDate: "2016-06-21T14:45:50.2988321Z"
          Value: "The temperature spiked because of a malfunction with a unit in our\
            \ west plant."
          Id: "512B6616-CE39-4F70-9048-8C6A025FB592"
          Creator: "MyDomain\\UserA"
          Modifier: "MyDomain\\UserA"
          Name: "Temperature Annotation"
        - CreationDate: "2016-06-21T14:45:50.2988321Z"
          Description: "Signifies a spike in temperature."
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          ModifyDate: "2016-06-21T14:45:50.2988321Z"
          Value: "The temperature spiked because of a malfunction with a unit in our\
            \ west plant."
          Id: "512B6616-CE39-4F70-9048-8C6A025FB592"
          Creator: "MyDomain\\UserA"
          Modifier: "MyDomain\\UserA"
          Name: "Temperature Annotation"
        Substituted: false
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value: 12.3
        Good: true
        Timestamp: "2014-07-22T14:00:00Z"
        Questionable: false
  Item[Attribute]:
    type: "object"
    properties:
      Identifier:
        type: "string"
        example: "\\\\server\\path"
      IdentifierType:
        type: "string"
        example: "Path"
      Object:
        $ref: "#/definitions/Attribute"
      Exception:
        $ref: "#/definitions/Errors"
    example:
      Identifier: "\\\\server\\path"
      Object:
        Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName|Water(2008)"
        IsManualDataEntry: false
        ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
          \ = '%Element%'"
        IsHidden: false
        Zero: 0.0
        Description: "2008 Water Use"
        DefaultUnitsName: "liter"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        DisplayDigits: -5
        DefaultUnitsNameAbbreviation: "L"
        Step: false
        Span: 100.0
        Name: "Water"
        IsExcluded: false
        HasChildren: false
        Type: "Int32"
        TraitName: "LimitLoLo"
        CategoryNames:
        - "Energy Savings Targets"
        WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        IsConfigurationItem: false
        Links:
          PlotData: "PlotData"
          EnumerationSet: "EnumerationSet"
          Parent: "Parent"
          Categories: "Categories"
          Element: "Element"
          Attributes: "Attributes"
          Self: "Self"
          Point: "Point"
          EventFrame: "EventFrame"
          Template: "Template"
          SummaryData: "SummaryData"
          Value: "Value"
          EndValue: "EndValue"
          Trait: "Trait"
          InterpolatedData: "InterpolatedData"
          EnumerationValues: "EnumerationValues"
          RecordedData: "RecordedData"
        Id: "75de231b-b591-49b1-b138-e725a77165c2"
        DataReferencePlugIn: "Table Lookup"
        TypeQualifier: ""
      IdentifierType: "Path"
      Exception:
        Errors:
        - "An error has occurred."
  Item[Element]:
    type: "object"
    properties:
      Identifier:
        type: "string"
        example: "\\\\server\\path"
      IdentifierType:
        type: "string"
        example: "Path"
      Object:
        $ref: "#/definitions/Element"
      Exception:
        $ref: "#/definitions/Errors"
    example:
      Identifier: "\\\\server\\path"
      Object:
        Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName"
        HasChildren: false
        Description: "Manufacturing Equipment MachineName"
        CategoryNames:
        - "Equipment Assets"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA"
        TemplateName: "MachineName"
        Links:
          PlotData: "PlotData"
          Parent: "Parent"
          Categories: "Categories"
          Attributes: "Attributes"
          Analyses: "Analyses"
          Self: "Self"
          Elements: "Elements"
          Security: "Security"
          Template: "Template"
          SecurityEntries: "SecurityEntries"
          NotificationRules: "NotificationRules"
          Database: "Database"
          SummaryData: "SummaryData"
          Value: "Value"
          EventFrames: "EventFrames"
          EndValue: "EndValue"
          DefaultAttribute: "DefaultAttribute"
          InterpolatedData: "InterpolatedData"
          RecordedData: "RecordedData"
        Id: "cbb28260-853d-11e4-80c5-00155d844304"
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "MachineName"
      IdentifierType: "Path"
      Exception:
        Errors:
        - "An error has occurred."
  Item[EventFrame]:
    type: "object"
    properties:
      Identifier:
        type: "string"
        example: "\\\\server\\path"
      IdentifierType:
        type: "string"
        example: "Path"
      Object:
        $ref: "#/definitions/EventFrame"
      Exception:
        $ref: "#/definitions/Errors"
    example:
      Identifier: "\\\\server\\path"
      Object:
        Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
        IsAcknowledged: true
        CanBeAcknowledged: true
        Description: "Event Frame of Past Week"
        AcknowledgedBy: "MyDomain\\UserA"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        EndTime: "2014-07-25T14:45:29Z"
        StartTime: "2014-07-18T14:45:29Z"
        IsLocked: false
        Severity: "None"
        Security:
          CanWrite: true
          Rights:
          - "Read"
          - "WriteData"
          CanReadData: true
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          HasAdmin: true
          CanWriteData: true
          CanDelete: true
          CanRead: true
          CanAnnotate: true
          CanExecute: true
          CanSubscribe: true
          CanSubscribeOthers: true
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "EF20140725-001"
        IsAnnotated: false
        HasChildren: false
        AcknowledgedDate: "2014-07-30T11:04:23Z"
        CategoryNames:
        - "Processing Plant"
        AreValuesCaptured: false
        WebId: "I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg"
        TemplateName: "Template"
        Links:
          PlotData: "PlotData"
          PrimaryReferencedElement: "PrimaryReferencedElement"
          Parent: "Parent"
          Categories: "Categories"
          Attributes: "Attributes"
          ReferencedElements: "ReferencedElements"
          Self: "Self"
          Security: "Security"
          Template: "Template"
          SecurityEntries: "SecurityEntries"
          Annotations: "Annotations"
          Database: "Database"
          SummaryData: "SummaryData"
          Value: "Value"
          EventFrames: "EventFrames"
          EndValue: "EndValue"
          DefaultAttribute: "DefaultAttribute"
          InterpolatedData: "InterpolatedData"
          RecordedData: "RecordedData"
        Id: "96f9a00e-4d80-471f-0000-00000004b002"
        RefElementWebIds:
        - "I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag"
      IdentifierType: "Path"
      Exception:
        Errors:
        - "An error has occurred."
  Item[Point]:
    type: "object"
    properties:
      Identifier:
        type: "string"
        example: "\\\\server\\path"
      IdentifierType:
        type: "string"
        example: "Path"
      Object:
        $ref: "#/definitions/Point"
      Exception:
        $ref: "#/definitions/Errors"
    example:
      Identifier: "\\\\server\\path"
      Object:
        Path: "\\\\MyPIServer\\PointName"
        Zero: 0.0
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        DisplayDigits: -5
        Step: false
        Span: 100.0
        Name: "PointName"
        PointClass: "classic"
        WebId: "I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA"
        Descriptor: "12 Hour Sine Wave"
        PointType: "Float32"
        Future: false
        Links:
          PlotData: "PlotData"
          DataServer: "DataServer"
          Attributes: "Attributes"
          SummaryData: "SummaryData"
          Value: "Value"
          EndValue: "EndValue"
          Self: "Self"
          InterpolatedData: "InterpolatedData"
          RecordedData: "RecordedData"
        Id: 82
        DigitalSetName: ""
        EngineeringUnits: ""
      IdentifierType: "Path"
      Exception:
        Errors:
        - "An error has occurred."
  Items[Analysis]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Analysis"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]"
        Status: "Disabled"
        IsTimeRuleDefinedByTemplate: false
        Description: ""
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        HasNotification: false
        Priority: "High"
        HasTarget: true
        OutputTime: ""
        HasTemplate: false
        PublishResults: false
        Name: "MyAnalysis"
        GroupId: 0
        TargetWebId: "I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg"
        CategoryNames:
        - "MyAnalysisCategory"
        AutoCreated: false
        AnalysisRulePlugInName: "PerformanceEquation"
        WebId: "I1XsDqD5loBNH0erqeqJodtALAWDOFEb-U5xGEQwAVXYTCAA"
        TimeRulePlugInName: "Periodic"
        TemplateName: ""
        Links:
          Target: "Target"
          SecurityEntries: "SecurityEntries"
          TimeRulePlugIn: "TimeRulePlugIn"
          Categories: "Categories"
          Database: "Database"
          Self: "Self"
          Security: "Security"
          AnalysisRule: "AnalysisRule"
          TimeRule: "TimeRule"
          Template: "Template"
          AnalysisRulePlugIn: "AnalysisRulePlugIn"
        Id: "11853358-94bf-11e7-8443-00155d84c200"
        MaximumQueueSize: 0
        IsConfigured: false
      - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]"
        Status: "Disabled"
        IsTimeRuleDefinedByTemplate: false
        Description: ""
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        HasNotification: false
        Priority: "High"
        HasTarget: true
        OutputTime: ""
        HasTemplate: false
        PublishResults: false
        Name: "MyAnalysis"
        GroupId: 0
        TargetWebId: "I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg"
        CategoryNames:
        - "MyAnalysisCategory"
        AutoCreated: false
        AnalysisRulePlugInName: "PerformanceEquation"
        WebId: "I1XsDqD5loBNH0erqeqJodtALAWDOFEb-U5xGEQwAVXYTCAA"
        TimeRulePlugInName: "Periodic"
        TemplateName: ""
        Links:
          Target: "Target"
          SecurityEntries: "SecurityEntries"
          TimeRulePlugIn: "TimeRulePlugIn"
          Categories: "Categories"
          Database: "Database"
          Self: "Self"
          Security: "Security"
          AnalysisRule: "AnalysisRule"
          TimeRule: "TimeRule"
          Template: "Template"
          AnalysisRulePlugIn: "AnalysisRulePlugIn"
        Id: "11853358-94bf-11e7-8443-00155d84c200"
        MaximumQueueSize: 0
        IsConfigured: false
  Items[AnalysisCategory]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/AnalysisCategory"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\Database\\CategoriesAnalysis[CategoryName]"
        Description: "Relative energy use per ton of process feed."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1XCDqD5loBNH0erqeqJodtALAoko2-UoOVEibhTWQCk1MDw"
        Links:
          SecurityEntries: "SecurityEntries"
          Database: "Database"
          Self: "Self"
          Security: "Security"
        Id: "f9364aa2-0e4a-4854-9b85-35900a4d4c0f"
        Name: "CategoryName"
      - Path: "\\\\MyAssetServer\\Database\\CategoriesAnalysis[CategoryName]"
        Description: "Relative energy use per ton of process feed."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1XCDqD5loBNH0erqeqJodtALAoko2-UoOVEibhTWQCk1MDw"
        Links:
          SecurityEntries: "SecurityEntries"
          Database: "Database"
          Self: "Self"
          Security: "Security"
        Id: "f9364aa2-0e4a-4854-9b85-35900a4d4c0f"
        Name: "CategoryName"
  Items[AnalysisRule]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/AnalysisRule"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\AnalysisRule"
        ConfigString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
        Description: "Runs a performance equation."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        VariableMapping: "b||Attribute1;c||Attribute2"
        EditorType: "OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor"
        Name: "PerformanceEquation"
        HasChildren: false
        WebId: "I1XRXDqD5loBNH0erqeqJodtALAfyWdysKU5xGEQwAVXYTCAAfyWdysKU5xGEQwAVXYTCAA"
        DisplayString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
        SupportedBehaviors:
        - "SupportsRunningCase"
        - "SupportStatePassing"
        - "OutputCorrectAfterSkipping"
        Links:
          AnalysisTemplate: "AnalysisTemplate"
          Parent: "Parent"
          Analysis: "Analysis"
          AnalysisRules: "AnalysisRules"
          Self: "Self"
          PlugIn: "PlugIn"
        IsInitializing: false
        Id: "ca9d257f-94c2-11e7-8443-00155d84c200"
        PlugInName: "PerformanceEquation"
        IsConfigured: false
      - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\AnalysisRule"
        ConfigString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
        Description: "Runs a performance equation."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        VariableMapping: "b||Attribute1;c||Attribute2"
        EditorType: "OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor"
        Name: "PerformanceEquation"
        HasChildren: false
        WebId: "I1XRXDqD5loBNH0erqeqJodtALAfyWdysKU5xGEQwAVXYTCAAfyWdysKU5xGEQwAVXYTCAA"
        DisplayString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
        SupportedBehaviors:
        - "SupportsRunningCase"
        - "SupportStatePassing"
        - "OutputCorrectAfterSkipping"
        Links:
          AnalysisTemplate: "AnalysisTemplate"
          Parent: "Parent"
          Analysis: "Analysis"
          AnalysisRules: "AnalysisRules"
          Self: "Self"
          PlugIn: "PlugIn"
        IsInitializing: false
        Id: "ca9d257f-94c2-11e7-8443-00155d84c200"
        PlugInName: "PerformanceEquation"
        IsConfigured: false
  Items[AnalysisRulePlugIn]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/AnalysisRulePlugIn"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\PlugInsAnalysisRule[Imbalance]"
        AssemblyTime: "2016-05-25T14:01:07Z"
        Description: "Calculates simple material imbalances on nodes of a model."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        LoadedAssemblyTime: "1970-01-01T00:00:00Z"
        IsBrowsable: true
        Name: "Imbalance"
        IsNonEditableConfig: false
        LoadedVersion: ""
        Version: "2.8.5.7552"
        WebId: "I1XPDqD5loBNH0erqeqJodtALABWwqmmFvekaFShbb-52MAw"
        AssemblyID: "1acd00c2-79d0-4818-a03c-0616c4513750"
        AssemblyLoadProperties:
        - "None"
        CompatibilityVersion: 2
        Links:
          Self: "Self"
          AssetServer: "AssetServer"
        Id: "9a2a6c05-6f61-467a-854a-16dbfb9d8c03"
        AssemblyFileName: "OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll"
      - Path: "\\\\MyAssetServer\\PlugInsAnalysisRule[Imbalance]"
        AssemblyTime: "2016-05-25T14:01:07Z"
        Description: "Calculates simple material imbalances on nodes of a model."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        LoadedAssemblyTime: "1970-01-01T00:00:00Z"
        IsBrowsable: true
        Name: "Imbalance"
        IsNonEditableConfig: false
        LoadedVersion: ""
        Version: "2.8.5.7552"
        WebId: "I1XPDqD5loBNH0erqeqJodtALABWwqmmFvekaFShbb-52MAw"
        AssemblyID: "1acd00c2-79d0-4818-a03c-0616c4513750"
        AssemblyLoadProperties:
        - "None"
        CompatibilityVersion: 2
        Links:
          Self: "Self"
          AssetServer: "AssetServer"
        Id: "9a2a6c05-6f61-467a-854a-16dbfb9d8c03"
        AssemblyFileName: "OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll"
  Items[AnalysisTemplate]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/AnalysisTemplate"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\AnalysisTemplates[MyAnalysisTemplate]"
        Description: ""
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        HasTarget: false
        OutputTime: ""
        HasNotificationTemplate: false
        TargetName: "MyElementTemplate"
        Name: "MyAnalysisTemplate"
        GroupId: 0
        CreateEnabled: true
        CategoryNames:
        - "MyAnalysisCategory"
        AnalysisRulePlugInName: "PerformanceEquation"
        WebId: "I1XTG_auSSsvuECG8ad_p8b25QEZgtYQY_J06YnELl5cALiA"
        TimeRulePlugInName: "Periodic"
        Links:
          Target: "Target"
          SecurityEntries: "SecurityEntries"
          TimeRulePlugIn: "TimeRulePlugIn"
          Categories: "Categories"
          Database: "Database"
          Self: "Self"
          Security: "Security"
          AnalysisRule: "AnalysisRule"
          TimeRule: "TimeRule"
          AnalysisRulePlugIn: "AnalysisRulePlugIn"
        Id: "612d9811-3f06-4e27-989c-42e5e5c00b88"
      - Path: "\\\\MyAssetServer\\MyDatabase\\AnalysisTemplates[MyAnalysisTemplate]"
        Description: ""
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        HasTarget: false
        OutputTime: ""
        HasNotificationTemplate: false
        TargetName: "MyElementTemplate"
        Name: "MyAnalysisTemplate"
        GroupId: 0
        CreateEnabled: true
        CategoryNames:
        - "MyAnalysisCategory"
        AnalysisRulePlugInName: "PerformanceEquation"
        WebId: "I1XTG_auSSsvuECG8ad_p8b25QEZgtYQY_J06YnELl5cALiA"
        TimeRulePlugInName: "Periodic"
        Links:
          Target: "Target"
          SecurityEntries: "SecurityEntries"
          TimeRulePlugIn: "TimeRulePlugIn"
          Categories: "Categories"
          Database: "Database"
          Self: "Self"
          Security: "Security"
          AnalysisRule: "AnalysisRule"
          TimeRule: "TimeRule"
          AnalysisRulePlugIn: "AnalysisRulePlugIn"
        Id: "612d9811-3f06-4e27-989c-42e5e5c00b88"
  Items[Annotation]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Annotation"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - CreationDate: "2016-06-21T14:45:50.2988321Z"
        Description: "Signifies a spike in temperature."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        ModifyDate: "2016-06-21T14:45:50.2988321Z"
        Value: "The temperature spiked because of a malfunction with a unit in our\
          \ west plant."
        Links:
          MediaData: "MediaData"
          Owner: "Owner"
          MediaMetadata: "MediaMetadata"
          Self: "Self"
        Id: "512B6616-CE39-4F70-9048-8C6A025FB592"
        Creator: "MyDomain\\UserA"
        Modifier: "MyDomain\\UserA"
        Name: "Temperature Annotation"
      - CreationDate: "2016-06-21T14:45:50.2988321Z"
        Description: "Signifies a spike in temperature."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        ModifyDate: "2016-06-21T14:45:50.2988321Z"
        Value: "The temperature spiked because of a malfunction with a unit in our\
          \ west plant."
        Links:
          MediaData: "MediaData"
          Owner: "Owner"
          MediaMetadata: "MediaMetadata"
          Self: "Self"
        Id: "512B6616-CE39-4F70-9048-8C6A025FB592"
        Creator: "MyDomain\\UserA"
        Modifier: "MyDomain\\UserA"
        Name: "Temperature Annotation"
  Items[AssetDatabase]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/AssetDatabase"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase"
        Description: "PI BI Project Asset Model"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1RDDqD5loBNH0erqeqJodtALAquulo6433EKdHra7fsmL0g"
        Links:
          ElementTemplates: "ElementTemplates"
          AnalysisTemplates: "AnalysisTemplates"
          ElementCategories: "ElementCategories"
          Self: "Self"
          Elements: "Elements"
          Security: "Security"
          AssetServer: "AssetServer"
          EnumerationSets: "EnumerationSets"
          SecurityEntries: "SecurityEntries"
          AnalysisCategories: "AnalysisCategories"
          EventFrames: "EventFrames"
          Tables: "Tables"
          TableCategories: "TableCategories"
          AttributeCategories: "AttributeCategories"
        Id: "a3a5ebaa-37ae-42dc-9d1e-b6bb7ec98bd2"
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "MyDatabase"
      - Path: "\\\\MyAssetServer\\MyDatabase"
        Description: "PI BI Project Asset Model"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1RDDqD5loBNH0erqeqJodtALAquulo6433EKdHra7fsmL0g"
        Links:
          ElementTemplates: "ElementTemplates"
          AnalysisTemplates: "AnalysisTemplates"
          ElementCategories: "ElementCategories"
          Self: "Self"
          Elements: "Elements"
          Security: "Security"
          AssetServer: "AssetServer"
          EnumerationSets: "EnumerationSets"
          SecurityEntries: "SecurityEntries"
          AnalysisCategories: "AnalysisCategories"
          EventFrames: "EventFrames"
          Tables: "Tables"
          TableCategories: "TableCategories"
          AttributeCategories: "AttributeCategories"
        Id: "a3a5ebaa-37ae-42dc-9d1e-b6bb7ec98bd2"
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "MyDatabase"
  Items[AssetServer]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/AssetServer"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer"
        Description: "Sample Description"
        ServerVersion: "2.5.0.5039"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1RSDqD5loBNH0erqeqJodtALA"
        Links:
          SecurityEntries: "SecurityEntries"
          Databases: "Databases"
          UnitClasses: "UnitClasses"
          SecurityIdentities: "SecurityIdentities"
          AnalysisRulePlugIns: "AnalysisRulePlugIns"
          NotificationContactTemplates: "NotificationContactTemplates"
          SecurityMappings: "SecurityMappings"
          Self: "Self"
          TimeRulePlugIns: "TimeRulePlugIns"
          Security: "Security"
        Id: "96f9a00e-4d80-471f-aba9-ea89a1db402c"
        ServerTime: "2014-07-22T14:00:00Z"
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "MyAssetServer"
        IsConnected: true
      - Path: "\\\\MyAssetServer"
        Description: "Sample Description"
        ServerVersion: "2.5.0.5039"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1RSDqD5loBNH0erqeqJodtALA"
        Links:
          SecurityEntries: "SecurityEntries"
          Databases: "Databases"
          UnitClasses: "UnitClasses"
          SecurityIdentities: "SecurityIdentities"
          AnalysisRulePlugIns: "AnalysisRulePlugIns"
          NotificationContactTemplates: "NotificationContactTemplates"
          SecurityMappings: "SecurityMappings"
          Self: "Self"
          TimeRulePlugIns: "TimeRulePlugIns"
          Security: "Security"
        Id: "96f9a00e-4d80-471f-aba9-ea89a1db402c"
        ServerTime: "2014-07-22T14:00:00Z"
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "MyAssetServer"
        IsConnected: true
  Items[Attribute]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Attribute"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName|Water(2008)"
        IsManualDataEntry: false
        ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
          \ = '%Element%'"
        IsHidden: false
        Zero: 0.0
        Description: "2008 Water Use"
        DefaultUnitsName: "liter"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        DisplayDigits: -5
        DefaultUnitsNameAbbreviation: "L"
        Step: false
        Span: 100.0
        Name: "Water"
        IsExcluded: false
        HasChildren: false
        Type: "Int32"
        TraitName: "LimitLoLo"
        CategoryNames:
        - "Energy Savings Targets"
        WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        IsConfigurationItem: false
        Links:
          PlotData: "PlotData"
          EnumerationSet: "EnumerationSet"
          Parent: "Parent"
          Categories: "Categories"
          Element: "Element"
          Attributes: "Attributes"
          Self: "Self"
          Point: "Point"
          EventFrame: "EventFrame"
          Template: "Template"
          SummaryData: "SummaryData"
          Value: "Value"
          EndValue: "EndValue"
          Trait: "Trait"
          InterpolatedData: "InterpolatedData"
          EnumerationValues: "EnumerationValues"
          RecordedData: "RecordedData"
        Id: "75de231b-b591-49b1-b138-e725a77165c2"
        DataReferencePlugIn: "Table Lookup"
        TypeQualifier: ""
      - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName|Water(2008)"
        IsManualDataEntry: false
        ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
          \ = '%Element%'"
        IsHidden: false
        Zero: 0.0
        Description: "2008 Water Use"
        DefaultUnitsName: "liter"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        DisplayDigits: -5
        DefaultUnitsNameAbbreviation: "L"
        Step: false
        Span: 100.0
        Name: "Water"
        IsExcluded: false
        HasChildren: false
        Type: "Int32"
        TraitName: "LimitLoLo"
        CategoryNames:
        - "Energy Savings Targets"
        WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        IsConfigurationItem: false
        Links:
          PlotData: "PlotData"
          EnumerationSet: "EnumerationSet"
          Parent: "Parent"
          Categories: "Categories"
          Element: "Element"
          Attributes: "Attributes"
          Self: "Self"
          Point: "Point"
          EventFrame: "EventFrame"
          Template: "Template"
          SummaryData: "SummaryData"
          Value: "Value"
          EndValue: "EndValue"
          Trait: "Trait"
          InterpolatedData: "InterpolatedData"
          EnumerationValues: "EnumerationValues"
          RecordedData: "RecordedData"
        Id: "75de231b-b591-49b1-b138-e725a77165c2"
        DataReferencePlugIn: "Table Lookup"
        TypeQualifier: ""
  Items[AttributeCategory]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/AttributeCategory"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\Database\\CategoriesAttribute[CategoryName]"
        Description: "Relative energy use per ton of process feed."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1ACDqD5loBNH0erqeqJodtALAofQgBVRE3E-0dk03Hqa1ng"
        Links:
          SecurityEntries: "SecurityEntries"
          Database: "Database"
          Self: "Self"
          Security: "Security"
        Id: "0520f4a1-4454-4fdc-b476-4d371ea6b59e"
        Name: "CategoryName"
      - Path: "\\\\MyAssetServer\\Database\\CategoriesAttribute[CategoryName]"
        Description: "Relative energy use per ton of process feed."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1ACDqD5loBNH0erqeqJodtALAofQgBVRE3E-0dk03Hqa1ng"
        Links:
          SecurityEntries: "SecurityEntries"
          Database: "Database"
          Self: "Self"
          Security: "Security"
        Id: "0520f4a1-4454-4fdc-b476-4d371ea6b59e"
        Name: "CategoryName"
  Items[AttributeTemplate]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/AttributeTemplate"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[MachineName]|Water(2008)"
        IsManualDataEntry: false
        ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
          \ = '%Element%'"
        IsHidden: false
        Description: "2008 Water Use"
        DefaultUnitsName: "liter"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        DefaultUnitsNameAbbreviation: "L"
        Name: "Water(2008)"
        IsExcluded: false
        DefaultValue: 0
        HasChildren: false
        Type: "Int32"
        TraitName: "LimitLoLo"
        CategoryNames:
        - "Energy Savings Targets"
        WebId: "I1ATEG_auSSsvuECG8ad_p8b25QQkxqWDwIWU6zC4vmgpd4kgtSfQI9VdxUGA8fi1yf9DVg"
        IsConfigurationItem: false
        Links:
          AttributeTemplates: "AttributeTemplates"
          Parent: "Parent"
          Categories: "Categories"
          Self: "Self"
          Trait: "Trait"
          ElementTemplate: "ElementTemplate"
        Id: "23d027b5-5dd5-41c5-80f1-f8b5c9ff4356"
        DataReferencePlugIn: "Table Lookup"
        TypeQualifier: ""
      - Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[MachineName]|Water(2008)"
        IsManualDataEntry: false
        ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
          \ = '%Element%'"
        IsHidden: false
        Description: "2008 Water Use"
        DefaultUnitsName: "liter"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        DefaultUnitsNameAbbreviation: "L"
        Name: "Water(2008)"
        IsExcluded: false
        DefaultValue: 0
        HasChildren: false
        Type: "Int32"
        TraitName: "LimitLoLo"
        CategoryNames:
        - "Energy Savings Targets"
        WebId: "I1ATEG_auSSsvuECG8ad_p8b25QQkxqWDwIWU6zC4vmgpd4kgtSfQI9VdxUGA8fi1yf9DVg"
        IsConfigurationItem: false
        Links:
          AttributeTemplates: "AttributeTemplates"
          Parent: "Parent"
          Categories: "Categories"
          Self: "Self"
          Trait: "Trait"
          ElementTemplate: "ElementTemplate"
        Id: "23d027b5-5dd5-41c5-80f1-f8b5c9ff4356"
        DataReferencePlugIn: "Table Lookup"
        TypeQualifier: ""
  Items[AttributeTrait]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/AttributeTrait"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Abbreviation: "LoLo"
        RequireNumeric: true
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        IsTypeInherited: true
        Links:
          Self: "Self"
        IsAllowedOnRootAttribute: false
        AllowChildAttributes: false
        Name: "LimitLoLo"
        AllowDuplicates: false
        IsUOMInherited: true
        RequireString: false
      - Abbreviation: "LoLo"
        RequireNumeric: true
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        IsTypeInherited: true
        Links:
          Self: "Self"
        IsAllowedOnRootAttribute: false
        AllowChildAttributes: false
        Name: "LimitLoLo"
        AllowDuplicates: false
        IsUOMInherited: true
        RequireString: false
  Items[CacheInstance]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/CacheInstance"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - LastRefreshTime: "2014-07-20T14:08:00Z"
        User: "MyDomain\\Username"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WillRefreshAfter: "2014-07-20T18:08:00Z"
        ScheduledExpirationTime: "2014-07-20T23:08:00Z"
        Id: "8a5033c9-b77f-431c-9820-c9f538d80dc6"
      - LastRefreshTime: "2014-07-20T14:08:00Z"
        User: "MyDomain\\Username"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WillRefreshAfter: "2014-07-20T18:08:00Z"
        ScheduledExpirationTime: "2014-07-20T23:08:00Z"
        Id: "8a5033c9-b77f-431c-9820-c9f538d80dc6"
  Items[ChannelInstance]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/ChannelInstance"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - LastMessageSentTime: "LastMessageSentTime"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        StartTime: "StartTime"
        Id: "Id"
        SentMessageCount: 0
      - LastMessageSentTime: "LastMessageSentTime"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        StartTime: "StartTime"
        Id: "Id"
        SentMessageCount: 0
  Items[DataServer]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/DataServer"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\PIServer[MyPIServer]"
        ServerVersion: "3.4.390.18"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1DS1km7hQHxB0i6-VfC-9MwAA"
        Links:
          EnumerationSets: "EnumerationSets"
          Points: "Points"
          Self: "Self"
        Id: "85bb49d6-f101-4807-baf9-57c2fbd33000"
        ServerTime: "2014-07-22T14:00:00Z"
        Name: "MyPIServer"
        IsConnected: true
      - Path: "\\\\PIServer[MyPIServer]"
        ServerVersion: "3.4.390.18"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1DS1km7hQHxB0i6-VfC-9MwAA"
        Links:
          EnumerationSets: "EnumerationSets"
          Points: "Points"
          Self: "Self"
        Id: "85bb49d6-f101-4807-baf9-57c2fbd33000"
        ServerTime: "2014-07-22T14:00:00Z"
        Name: "MyPIServer"
        IsConnected: true
  Items[Element]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Element"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName"
        HasChildren: false
        Description: "Manufacturing Equipment MachineName"
        CategoryNames:
        - "Equipment Assets"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA"
        TemplateName: "MachineName"
        Links:
          PlotData: "PlotData"
          Parent: "Parent"
          Categories: "Categories"
          Attributes: "Attributes"
          Analyses: "Analyses"
          Self: "Self"
          Elements: "Elements"
          Security: "Security"
          Template: "Template"
          SecurityEntries: "SecurityEntries"
          NotificationRules: "NotificationRules"
          Database: "Database"
          SummaryData: "SummaryData"
          Value: "Value"
          EventFrames: "EventFrames"
          EndValue: "EndValue"
          DefaultAttribute: "DefaultAttribute"
          InterpolatedData: "InterpolatedData"
          RecordedData: "RecordedData"
        Id: "cbb28260-853d-11e4-80c5-00155d844304"
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "MachineName"
      - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName"
        HasChildren: false
        Description: "Manufacturing Equipment MachineName"
        CategoryNames:
        - "Equipment Assets"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA"
        TemplateName: "MachineName"
        Links:
          PlotData: "PlotData"
          Parent: "Parent"
          Categories: "Categories"
          Attributes: "Attributes"
          Analyses: "Analyses"
          Self: "Self"
          Elements: "Elements"
          Security: "Security"
          Template: "Template"
          SecurityEntries: "SecurityEntries"
          NotificationRules: "NotificationRules"
          Database: "Database"
          SummaryData: "SummaryData"
          Value: "Value"
          EventFrames: "EventFrames"
          EndValue: "EndValue"
          DefaultAttribute: "DefaultAttribute"
          InterpolatedData: "InterpolatedData"
          RecordedData: "RecordedData"
        Id: "cbb28260-853d-11e4-80c5-00155d844304"
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "MachineName"
  Items[ElementCategory]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/ElementCategory"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\Database\\CategoriesElement[CategoryName]"
        Description: "Relative energy use per ton of process feed."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1ECDqD5loBNH0erqeqJodtALAQ_lRME1-QUKrnEUKhMgEUA"
        Links:
          SecurityEntries: "SecurityEntries"
          Database: "Database"
          Self: "Self"
          Security: "Security"
        Id: "3051f943-7e4d-4241-ab9c-450a84c80450"
        Name: "CategoryName"
      - Path: "\\\\MyAssetServer\\Database\\CategoriesElement[CategoryName]"
        Description: "Relative energy use per ton of process feed."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1ECDqD5loBNH0erqeqJodtALAQ_lRME1-QUKrnEUKhMgEUA"
        Links:
          SecurityEntries: "SecurityEntries"
          Database: "Database"
          Self: "Self"
          Security: "Security"
        Id: "3051f943-7e4d-4241-ab9c-450a84c80450"
        Name: "CategoryName"
  Items[ElementTemplate]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/ElementTemplate"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[Boiler]"
        CanBeAcknowledged: false
        Description: "Manufacturing Machine MachineName"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        NamingPattern: "%TEMPLATE%"
        Severity: "None"
        BaseTemplate: "Equipment"
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "MachineName"
        CategoryNames:
        - "Equipment Assets"
        WebId: "I1ETDqD5loBNH0erqeqJodtALAkpSYp6uykE2Ku0yChDU91g"
        Links:
          AttributeTemplates: "AttributeTemplates"
          SecurityEntries: "SecurityEntries"
          DerivedTemplates: "DerivedTemplates"
          Categories: "Categories"
          BaseTemplates: "BaseTemplates"
          AnalysisTemplates: "AnalysisTemplates"
          Database: "Database"
          Self: "Self"
          DefaultAttribute: "DefaultAttribute"
          BaseTemplate: "BaseTemplate"
          Security: "Security"
          NotificationRuleTemplates: "NotificationRuleTemplates"
        Id: "a7989492-b2ab-4d90-8abb-4c8284353dd6"
        AllowElementToExtend: false
        InstanceType: "Element"
      - Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[Boiler]"
        CanBeAcknowledged: false
        Description: "Manufacturing Machine MachineName"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        NamingPattern: "%TEMPLATE%"
        Severity: "None"
        BaseTemplate: "Equipment"
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "MachineName"
        CategoryNames:
        - "Equipment Assets"
        WebId: "I1ETDqD5loBNH0erqeqJodtALAkpSYp6uykE2Ku0yChDU91g"
        Links:
          AttributeTemplates: "AttributeTemplates"
          SecurityEntries: "SecurityEntries"
          DerivedTemplates: "DerivedTemplates"
          Categories: "Categories"
          BaseTemplates: "BaseTemplates"
          AnalysisTemplates: "AnalysisTemplates"
          Database: "Database"
          Self: "Self"
          DefaultAttribute: "DefaultAttribute"
          BaseTemplate: "BaseTemplate"
          Security: "Security"
          NotificationRuleTemplates: "NotificationRuleTemplates"
        Id: "a7989492-b2ab-4d90-8abb-4c8284353dd6"
        AllowElementToExtend: false
        InstanceType: "Element"
  Items[EnumerationSet]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/EnumerationSet"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]"
        Description: "Model numbers by brand of vehicle"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1MSRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQ"
        Links:
          SecurityEntries: "SecurityEntries"
          DataServer: "DataServer"
          Database: "Database"
          Values: "Values"
          Self: "Self"
          Security: "Security"
        Id: "8e77fc4f-ac91-4029-81d6-fb66bd01d431"
        SerializeDescription: true
        Name: "Model Number"
      - Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]"
        Description: "Model numbers by brand of vehicle"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1MSRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQ"
        Links:
          SecurityEntries: "SecurityEntries"
          DataServer: "DataServer"
          Database: "Database"
          Values: "Values"
          Self: "Self"
          Security: "Security"
        Id: "8e77fc4f-ac91-4029-81d6-fb66bd01d431"
        SerializeDescription: true
        Name: "Model Number"
  Items[EnumerationValue]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/EnumerationValue"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]\\CarBrand|Model3"
        SerializePath: true
        Description: "Model Number of CarBrand"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Parent: "CarBrand"
        SerializeId: true
        Name: "CarBrand|Model3"
        SerializeWebId: true
        WebId: "I1MVRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQlIYqmOlvs0ygEQnSeGSe7w"
        Value: 2005
        Links:
          EnumerationSet: "EnumerationSet"
          Parent: "Parent"
          Self: "Self"
        SerializeLinks: true
        Id: "982a8694-6fe9-4cb3-a011-09d278649eef"
        SerializeDescription: true
      - Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]\\CarBrand|Model3"
        SerializePath: true
        Description: "Model Number of CarBrand"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Parent: "CarBrand"
        SerializeId: true
        Name: "CarBrand|Model3"
        SerializeWebId: true
        WebId: "I1MVRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQlIYqmOlvs0ygEQnSeGSe7w"
        Value: 2005
        Links:
          EnumerationSet: "EnumerationSet"
          Parent: "Parent"
          Self: "Self"
        SerializeLinks: true
        Id: "982a8694-6fe9-4cb3-a011-09d278649eef"
        SerializeDescription: true
  Items[EventFrame]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/EventFrame"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
        IsAcknowledged: true
        CanBeAcknowledged: true
        Description: "Event Frame of Past Week"
        AcknowledgedBy: "MyDomain\\UserA"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        EndTime: "2014-07-25T14:45:29Z"
        StartTime: "2014-07-18T14:45:29Z"
        IsLocked: false
        Severity: "None"
        Security:
          CanWrite: true
          Rights:
          - "Read"
          - "WriteData"
          CanReadData: true
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          HasAdmin: true
          CanWriteData: true
          CanDelete: true
          CanRead: true
          CanAnnotate: true
          CanExecute: true
          CanSubscribe: true
          CanSubscribeOthers: true
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "EF20140725-001"
        IsAnnotated: false
        HasChildren: false
        AcknowledgedDate: "2014-07-30T11:04:23Z"
        CategoryNames:
        - "Processing Plant"
        AreValuesCaptured: false
        WebId: "I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg"
        TemplateName: "Template"
        Links:
          PlotData: "PlotData"
          PrimaryReferencedElement: "PrimaryReferencedElement"
          Parent: "Parent"
          Categories: "Categories"
          Attributes: "Attributes"
          ReferencedElements: "ReferencedElements"
          Self: "Self"
          Security: "Security"
          Template: "Template"
          SecurityEntries: "SecurityEntries"
          Annotations: "Annotations"
          Database: "Database"
          SummaryData: "SummaryData"
          Value: "Value"
          EventFrames: "EventFrames"
          EndValue: "EndValue"
          DefaultAttribute: "DefaultAttribute"
          InterpolatedData: "InterpolatedData"
          RecordedData: "RecordedData"
        Id: "96f9a00e-4d80-471f-0000-00000004b002"
        RefElementWebIds:
        - "I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag"
      - Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
        IsAcknowledged: true
        CanBeAcknowledged: true
        Description: "Event Frame of Past Week"
        AcknowledgedBy: "MyDomain\\UserA"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        EndTime: "2014-07-25T14:45:29Z"
        StartTime: "2014-07-18T14:45:29Z"
        IsLocked: false
        Severity: "None"
        Security:
          CanWrite: true
          Rights:
          - "Read"
          - "WriteData"
          CanReadData: true
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          HasAdmin: true
          CanWriteData: true
          CanDelete: true
          CanRead: true
          CanAnnotate: true
          CanExecute: true
          CanSubscribe: true
          CanSubscribeOthers: true
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - "An error has occurred."
        Name: "EF20140725-001"
        IsAnnotated: false
        HasChildren: false
        AcknowledgedDate: "2014-07-30T11:04:23Z"
        CategoryNames:
        - "Processing Plant"
        AreValuesCaptured: false
        WebId: "I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg"
        TemplateName: "Template"
        Links:
          PlotData: "PlotData"
          PrimaryReferencedElement: "PrimaryReferencedElement"
          Parent: "Parent"
          Categories: "Categories"
          Attributes: "Attributes"
          ReferencedElements: "ReferencedElements"
          Self: "Self"
          Security: "Security"
          Template: "Template"
          SecurityEntries: "SecurityEntries"
          Annotations: "Annotations"
          Database: "Database"
          SummaryData: "SummaryData"
          Value: "Value"
          EventFrames: "EventFrames"
          EndValue: "EndValue"
          DefaultAttribute: "DefaultAttribute"
          InterpolatedData: "InterpolatedData"
          RecordedData: "RecordedData"
        Id: "96f9a00e-4d80-471f-0000-00000004b002"
        RefElementWebIds:
        - "I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag"
  Items[Item[Attribute]]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Item[Attribute]"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Identifier: "\\\\server\\path"
        Object:
          Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
            MachineName|Water(2008)"
          IsManualDataEntry: false
          ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
            \ = '%Element%'"
          IsHidden: false
          Zero: 0.0
          Description: "2008 Water Use"
          DefaultUnitsName: "liter"
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          DisplayDigits: -5
          DefaultUnitsNameAbbreviation: "L"
          Step: false
          Span: 100.0
          Name: "Water"
          IsExcluded: false
          HasChildren: false
          Type: "Int32"
          TraitName: "LimitLoLo"
          CategoryNames:
          - "Energy Savings Targets"
          WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
          IsConfigurationItem: false
          Links:
            PlotData: "PlotData"
            EnumerationSet: "EnumerationSet"
            Parent: "Parent"
            Categories: "Categories"
            Element: "Element"
            Attributes: "Attributes"
            Self: "Self"
            Point: "Point"
            EventFrame: "EventFrame"
            Template: "Template"
            SummaryData: "SummaryData"
            Value: "Value"
            EndValue: "EndValue"
            Trait: "Trait"
            InterpolatedData: "InterpolatedData"
            EnumerationValues: "EnumerationValues"
            RecordedData: "RecordedData"
          Id: "75de231b-b591-49b1-b138-e725a77165c2"
          DataReferencePlugIn: "Table Lookup"
          TypeQualifier: ""
        IdentifierType: "Path"
        Exception:
          Errors:
          - "An error has occurred."
      - Identifier: "\\\\server\\path"
        Object:
          Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
            MachineName|Water(2008)"
          IsManualDataEntry: false
          ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
            \ = '%Element%'"
          IsHidden: false
          Zero: 0.0
          Description: "2008 Water Use"
          DefaultUnitsName: "liter"
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          DisplayDigits: -5
          DefaultUnitsNameAbbreviation: "L"
          Step: false
          Span: 100.0
          Name: "Water"
          IsExcluded: false
          HasChildren: false
          Type: "Int32"
          TraitName: "LimitLoLo"
          CategoryNames:
          - "Energy Savings Targets"
          WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
          IsConfigurationItem: false
          Links:
            PlotData: "PlotData"
            EnumerationSet: "EnumerationSet"
            Parent: "Parent"
            Categories: "Categories"
            Element: "Element"
            Attributes: "Attributes"
            Self: "Self"
            Point: "Point"
            EventFrame: "EventFrame"
            Template: "Template"
            SummaryData: "SummaryData"
            Value: "Value"
            EndValue: "EndValue"
            Trait: "Trait"
            InterpolatedData: "InterpolatedData"
            EnumerationValues: "EnumerationValues"
            RecordedData: "RecordedData"
          Id: "75de231b-b591-49b1-b138-e725a77165c2"
          DataReferencePlugIn: "Table Lookup"
          TypeQualifier: ""
        IdentifierType: "Path"
        Exception:
          Errors:
          - "An error has occurred."
  Items[Item[Element]]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Item[Element]"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Identifier: "\\\\server\\path"
        Object:
          Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
            MachineName"
          HasChildren: false
          Description: "Manufacturing Equipment MachineName"
          CategoryNames:
          - "Equipment Assets"
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          WebId: "I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA"
          TemplateName: "MachineName"
          Links:
            PlotData: "PlotData"
            Parent: "Parent"
            Categories: "Categories"
            Attributes: "Attributes"
            Analyses: "Analyses"
            Self: "Self"
            Elements: "Elements"
            Security: "Security"
            Template: "Template"
            SecurityEntries: "SecurityEntries"
            NotificationRules: "NotificationRules"
            Database: "Database"
            SummaryData: "SummaryData"
            Value: "Value"
            EventFrames: "EventFrames"
            EndValue: "EndValue"
            DefaultAttribute: "DefaultAttribute"
            InterpolatedData: "InterpolatedData"
            RecordedData: "RecordedData"
          Id: "cbb28260-853d-11e4-80c5-00155d844304"
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - "An error has occurred."
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - "An error has occurred."
          Name: "MachineName"
        IdentifierType: "Path"
        Exception:
          Errors:
          - "An error has occurred."
      - Identifier: "\\\\server\\path"
        Object:
          Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
            MachineName"
          HasChildren: false
          Description: "Manufacturing Equipment MachineName"
          CategoryNames:
          - "Equipment Assets"
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          WebId: "I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA"
          TemplateName: "MachineName"
          Links:
            PlotData: "PlotData"
            Parent: "Parent"
            Categories: "Categories"
            Attributes: "Attributes"
            Analyses: "Analyses"
            Self: "Self"
            Elements: "Elements"
            Security: "Security"
            Template: "Template"
            SecurityEntries: "SecurityEntries"
            NotificationRules: "NotificationRules"
            Database: "Database"
            SummaryData: "SummaryData"
            Value: "Value"
            EventFrames: "EventFrames"
            EndValue: "EndValue"
            DefaultAttribute: "DefaultAttribute"
            InterpolatedData: "InterpolatedData"
            RecordedData: "RecordedData"
          Id: "cbb28260-853d-11e4-80c5-00155d844304"
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - "An error has occurred."
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - "An error has occurred."
          Name: "MachineName"
        IdentifierType: "Path"
        Exception:
          Errors:
          - "An error has occurred."
  Items[Item[EventFrame]]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Item[EventFrame]"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Identifier: "\\\\server\\path"
        Object:
          Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
          IsAcknowledged: true
          CanBeAcknowledged: true
          Description: "Event Frame of Past Week"
          AcknowledgedBy: "MyDomain\\UserA"
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          EndTime: "2014-07-25T14:45:29Z"
          StartTime: "2014-07-18T14:45:29Z"
          IsLocked: false
          Severity: "None"
          Security:
            CanWrite: true
            Rights:
            - "Read"
            - "WriteData"
            CanReadData: true
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            HasAdmin: true
            CanWriteData: true
            CanDelete: true
            CanRead: true
            CanAnnotate: true
            CanExecute: true
            CanSubscribe: true
            CanSubscribeOthers: true
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - "An error has occurred."
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - "An error has occurred."
          Name: "EF20140725-001"
          IsAnnotated: false
          HasChildren: false
          AcknowledgedDate: "2014-07-30T11:04:23Z"
          CategoryNames:
          - "Processing Plant"
          AreValuesCaptured: false
          WebId: "I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg"
          TemplateName: "Template"
          Links:
            PlotData: "PlotData"
            PrimaryReferencedElement: "PrimaryReferencedElement"
            Parent: "Parent"
            Categories: "Categories"
            Attributes: "Attributes"
            ReferencedElements: "ReferencedElements"
            Self: "Self"
            Security: "Security"
            Template: "Template"
            SecurityEntries: "SecurityEntries"
            Annotations: "Annotations"
            Database: "Database"
            SummaryData: "SummaryData"
            Value: "Value"
            EventFrames: "EventFrames"
            EndValue: "EndValue"
            DefaultAttribute: "DefaultAttribute"
            InterpolatedData: "InterpolatedData"
            RecordedData: "RecordedData"
          Id: "96f9a00e-4d80-471f-0000-00000004b002"
          RefElementWebIds:
          - "I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag"
        IdentifierType: "Path"
        Exception:
          Errors:
          - "An error has occurred."
      - Identifier: "\\\\server\\path"
        Object:
          Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
          IsAcknowledged: true
          CanBeAcknowledged: true
          Description: "Event Frame of Past Week"
          AcknowledgedBy: "MyDomain\\UserA"
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          EndTime: "2014-07-25T14:45:29Z"
          StartTime: "2014-07-18T14:45:29Z"
          IsLocked: false
          Severity: "None"
          Security:
            CanWrite: true
            Rights:
            - "Read"
            - "WriteData"
            CanReadData: true
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            HasAdmin: true
            CanWriteData: true
            CanDelete: true
            CanRead: true
            CanAnnotate: true
            CanExecute: true
            CanSubscribe: true
            CanSubscribeOthers: true
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - "An error has occurred."
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - "An error has occurred."
          Name: "EF20140725-001"
          IsAnnotated: false
          HasChildren: false
          AcknowledgedDate: "2014-07-30T11:04:23Z"
          CategoryNames:
          - "Processing Plant"
          AreValuesCaptured: false
          WebId: "I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg"
          TemplateName: "Template"
          Links:
            PlotData: "PlotData"
            PrimaryReferencedElement: "PrimaryReferencedElement"
            Parent: "Parent"
            Categories: "Categories"
            Attributes: "Attributes"
            ReferencedElements: "ReferencedElements"
            Self: "Self"
            Security: "Security"
            Template: "Template"
            SecurityEntries: "SecurityEntries"
            Annotations: "Annotations"
            Database: "Database"
            SummaryData: "SummaryData"
            Value: "Value"
            EventFrames: "EventFrames"
            EndValue: "EndValue"
            DefaultAttribute: "DefaultAttribute"
            InterpolatedData: "InterpolatedData"
            RecordedData: "RecordedData"
          Id: "96f9a00e-4d80-471f-0000-00000004b002"
          RefElementWebIds:
          - "I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag"
        IdentifierType: "Path"
        Exception:
          Errors:
          - "An error has occurred."
  Items[Item[Point]]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Item[Point]"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Identifier: "\\\\server\\path"
        Object:
          Path: "\\\\MyPIServer\\PointName"
          Zero: 0.0
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          DisplayDigits: -5
          Step: false
          Span: 100.0
          Name: "PointName"
          PointClass: "classic"
          WebId: "I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA"
          Descriptor: "12 Hour Sine Wave"
          PointType: "Float32"
          Future: false
          Links:
            PlotData: "PlotData"
            DataServer: "DataServer"
            Attributes: "Attributes"
            SummaryData: "SummaryData"
            Value: "Value"
            EndValue: "EndValue"
            Self: "Self"
            InterpolatedData: "InterpolatedData"
            RecordedData: "RecordedData"
          Id: 82
          DigitalSetName: ""
          EngineeringUnits: ""
        IdentifierType: "Path"
        Exception:
          Errors:
          - "An error has occurred."
      - Identifier: "\\\\server\\path"
        Object:
          Path: "\\\\MyPIServer\\PointName"
          Zero: 0.0
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          DisplayDigits: -5
          Step: false
          Span: 100.0
          Name: "PointName"
          PointClass: "classic"
          WebId: "I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA"
          Descriptor: "12 Hour Sine Wave"
          PointType: "Float32"
          Future: false
          Links:
            PlotData: "PlotData"
            DataServer: "DataServer"
            Attributes: "Attributes"
            SummaryData: "SummaryData"
            Value: "Value"
            EndValue: "EndValue"
            Self: "Self"
            InterpolatedData: "InterpolatedData"
            RecordedData: "RecordedData"
          Id: 82
          DigitalSetName: ""
          EngineeringUnits: ""
        IdentifierType: "Path"
        Exception:
          Errors:
          - "An error has occurred."
  Items[Items[Substatus]]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Items[Substatus]"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Links:
          Last: "Last"
          Next: "Next"
          Previous: "Previous"
          First: "First"
        Items:
        - WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Message: "Message"
          Substatus: 200
        - WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Message: "Message"
          Substatus: 200
      - Links:
          Last: "Last"
          Next: "Next"
          Previous: "Previous"
          First: "First"
        Items:
        - WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Message: "Message"
          Substatus: 200
        - WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Message: "Message"
          Substatus: 200
  Items[NotificationContactTemplate]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/NotificationContactTemplate"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\NotificationContactTemplates[Plant Manager]"
        ConfigString: ""
        NotifyWhenInstanceEnded: true
        Description: ""
        ContactType: "Individual"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        MaximumRetries: 5
        Name: "Plant Manager"
        HasChildren: false
        EscalationTimeout: "PT3S"
        WebId: "I1NCEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        MinimumAcknowledgements: 2
        Links:
          Self: "Self"
          AssetServer: "AssetServer"
        Available: true
        Id: "cbb28260-853d-11e4-80c5-00155d844304"
        RetryInterval: "PT5S"
        PlugInName: ""
      - Path: "\\\\MyAssetServer\\NotificationContactTemplates[Plant Manager]"
        ConfigString: ""
        NotifyWhenInstanceEnded: true
        Description: ""
        ContactType: "Individual"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        MaximumRetries: 5
        Name: "Plant Manager"
        HasChildren: false
        EscalationTimeout: "PT3S"
        WebId: "I1NCEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        MinimumAcknowledgements: 2
        Links:
          Self: "Self"
          AssetServer: "AssetServer"
        Available: true
        Id: "cbb28260-853d-11e4-80c5-00155d844304"
        RetryInterval: "PT5S"
        PlugInName: ""
  Items[NotificationRule]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/NotificationRule"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName\\NotificationRules[RuleName]"
        Status: "Disabled"
        MultiTriggerEventOption: "HighestSeverity"
        Description: "Manufacturing Equipment MachineName"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        ResendInterval: "PT5S"
        Criteria: "Name: EventFrameCriteriaName"
        Name: "MachineName"
        CategoryNames:
        - "Equipment Assets"
        AutoCreated: true
        WebId: "I1NRDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0Ag"
        TemplateName: "MachineName Notification Rule"
        Id: "e9a984d0-f47c-11e7-8454-00155d029708"
        NonrepetitionInterval: "PT3S"
      - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName\\NotificationRules[RuleName]"
        Status: "Disabled"
        MultiTriggerEventOption: "HighestSeverity"
        Description: "Manufacturing Equipment MachineName"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        ResendInterval: "PT5S"
        Criteria: "Name: EventFrameCriteriaName"
        Name: "MachineName"
        CategoryNames:
        - "Equipment Assets"
        AutoCreated: true
        WebId: "I1NRDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0Ag"
        TemplateName: "MachineName Notification Rule"
        Id: "e9a984d0-f47c-11e7-8454-00155d029708"
        NonrepetitionInterval: "PT3S"
  Items[NotificationRuleSubscriber]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/NotificationRuleSubscriber"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\NotificationRules[NotificationSubscriptionRuleName]"
        ConfigString: "ToEmail=mike@testemail.com"
        NotifyOption: "EventStart"
        Description: "Manufacturing Machine MachineName subscription"
        ContactType: "Individual"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        MaximumRetries: 3
        Name: "NotificationSubscriptionRuleName"
        EscalationTimeout: "PT3S"
        ContactTemplateName: "Plant Manager"
        WebId: "I1NSLDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0AgPUJJXNlEW1w78rnCXDmcDA"
        Id: "e9a984d0-f47c-11e7-8454-00155d029708"
        RetryInterval: "PT3S"
        PlugInName: "Email"
        DeliveryFormatName: "DeliveryFormat"
      - Path: "\\\\MyAssetServer\\MyDatabase\\NotificationRules[NotificationSubscriptionRuleName]"
        ConfigString: "ToEmail=mike@testemail.com"
        NotifyOption: "EventStart"
        Description: "Manufacturing Machine MachineName subscription"
        ContactType: "Individual"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        MaximumRetries: 3
        Name: "NotificationSubscriptionRuleName"
        EscalationTimeout: "PT3S"
        ContactTemplateName: "Plant Manager"
        WebId: "I1NSLDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0AgPUJJXNlEW1w78rnCXDmcDA"
        Id: "e9a984d0-f47c-11e7-8454-00155d029708"
        RetryInterval: "PT3S"
        PlugInName: "Email"
        DeliveryFormatName: "DeliveryFormat"
  Items[NotificationRuleTemplate]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/NotificationRuleTemplate"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\ElementTemplates[Template3]\\\
          NotificationRuleTemplates[Notification Rule Template]"
        Status: "Functioning"
        MultiTriggerEventOption: "HighestSeverity"
        Description: "Description entered by the user"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        ResendInterval: "PT5S"
        Criteria: "Name: EventFrameCriteriaName"
        Name: "MachineName"
        CategoryNames:
        - "MachineNameAlerts"
        WebId: "I1NTDqD5loBNH0erqeqJodtALAtdcX5JH_5xGEKAAVXTSaAg"
        TemplateName: "MachineName Notification Rule Template"
        Id: "e9a984d0-f47c-11e7-8454-00155d029708"
        NonrepetitionInterval: "PT3S"
      - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\ElementTemplates[Template3]\\\
          NotificationRuleTemplates[Notification Rule Template]"
        Status: "Functioning"
        MultiTriggerEventOption: "HighestSeverity"
        Description: "Description entered by the user"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        ResendInterval: "PT5S"
        Criteria: "Name: EventFrameCriteriaName"
        Name: "MachineName"
        CategoryNames:
        - "MachineNameAlerts"
        WebId: "I1NTDqD5loBNH0erqeqJodtALAtdcX5JH_5xGEKAAVXTSaAg"
        TemplateName: "MachineName Notification Rule Template"
        Id: "e9a984d0-f47c-11e7-8454-00155d029708"
        NonrepetitionInterval: "PT3S"
  Items[Point]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Point"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyPIServer\\PointName"
        Zero: 0.0
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        DisplayDigits: -5
        Step: false
        Span: 100.0
        Name: "PointName"
        PointClass: "classic"
        WebId: "I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA"
        Descriptor: "12 Hour Sine Wave"
        PointType: "Float32"
        Future: false
        Links:
          PlotData: "PlotData"
          DataServer: "DataServer"
          Attributes: "Attributes"
          SummaryData: "SummaryData"
          Value: "Value"
          EndValue: "EndValue"
          Self: "Self"
          InterpolatedData: "InterpolatedData"
          RecordedData: "RecordedData"
        Id: 82
        DigitalSetName: ""
        EngineeringUnits: ""
      - Path: "\\\\MyPIServer\\PointName"
        Zero: 0.0
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        DisplayDigits: -5
        Step: false
        Span: 100.0
        Name: "PointName"
        PointClass: "classic"
        WebId: "I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA"
        Descriptor: "12 Hour Sine Wave"
        PointType: "Float32"
        Future: false
        Links:
          PlotData: "PlotData"
          DataServer: "DataServer"
          Attributes: "Attributes"
          SummaryData: "SummaryData"
          Value: "Value"
          EndValue: "EndValue"
          Self: "Self"
          InterpolatedData: "InterpolatedData"
          RecordedData: "RecordedData"
        Id: 82
        DigitalSetName: ""
        EngineeringUnits: ""
  Items[PointAttribute]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/PointAttribute"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value: 50.0
        Links:
          Self: "Self"
          Point: "Point"
        Name: "typicalvalue"
      - WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value: 50.0
        Links:
          Self: "Self"
          Point: "Point"
        Name: "typicalvalue"
  Items[SecurityEntry]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/SecurityEntry"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        AllowRights:
        - "Read"
        - "ReadData"
        DenyRights:
        - "Write"
        - "Execute"
        - "Admin"
        Links:
          SecurableObject: "SecurableObject"
          SecurityIdentity: "SecurityIdentity"
          Self: "Self"
        SecurityIdentityName: "domain\\user1"
        Name: "domain\\user1"
      - WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        AllowRights:
        - "Read"
        - "ReadData"
        DenyRights:
        - "Write"
        - "Execute"
        - "Admin"
        Links:
          SecurableObject: "SecurableObject"
          SecurityIdentity: "SecurityIdentity"
          Self: "Self"
        SecurityIdentityName: "domain\\user1"
        Name: "domain\\user1"
  Items[SecurityIdentity]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/SecurityIdentity"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\SecurityIdentities[MySecurityIdentity]"
        Description: ""
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        IsEnabled: true
        WebId: "I1SIDqD5loBNH0erqeqJodtALASe6l8zgYokqdeeFilFI9tw"
        Links:
          SecurityEntries: "SecurityEntries"
          SecurityMappings: "SecurityMappings"
          Self: "Self"
          Security: "Security"
          AssetServer: "AssetServer"
        Id: "f3a5ee49-1838-4aa2-9d79-e16294523db7"
        Name: "MySecurityIdentity"
      - Path: "\\\\MyAssetServer\\SecurityIdentities[MySecurityIdentity]"
        Description: ""
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        IsEnabled: true
        WebId: "I1SIDqD5loBNH0erqeqJodtALASe6l8zgYokqdeeFilFI9tw"
        Links:
          SecurityEntries: "SecurityEntries"
          SecurityMappings: "SecurityMappings"
          Self: "Self"
          Security: "Security"
          AssetServer: "AssetServer"
        Id: "f3a5ee49-1838-4aa2-9d79-e16294523db7"
        Name: "MySecurityIdentity"
  Items[SecurityMapping]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/SecurityMapping"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\SecurityMappings[MySecurityMapping]"
        Account: "domain\\user"
        Description: ""
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1SMDqD5loBNH0erqeqJodtALAgu8UrMAZB0qWp9H7C4TAXQ"
        SecurityIdentityWebId: "I1SIEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        Links:
          SecurityIdentity: "SecurityIdentity"
          SecurityEntries: "SecurityEntries"
          Self: "Self"
          Security: "Security"
          AssetServer: "AssetServer"
        Id: "ac14ef82-19c0-4a07-96a7-d1fb0b84c05d"
        Name: "MySecurityMapping"
      - Path: "\\\\MyAssetServer\\SecurityMappings[MySecurityMapping]"
        Account: "domain\\user"
        Description: ""
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1SMDqD5loBNH0erqeqJodtALAgu8UrMAZB0qWp9H7C4TAXQ"
        SecurityIdentityWebId: "I1SIEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        Links:
          SecurityIdentity: "SecurityIdentity"
          SecurityEntries: "SecurityEntries"
          Self: "Self"
          Security: "Security"
          AssetServer: "AssetServer"
        Id: "ac14ef82-19c0-4a07-96a7-d1fb0b84c05d"
        Name: "MySecurityMapping"
  Items[SecurityRights]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/SecurityRights"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - SecurityItem: "Default"
        CanReadData: true
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        HasAdmin: true
        UserIdentity: "domain\\user"
        CanDelete: true
        CanAnnotate: true
        CanSubscribe: true
        CanSubscribeOthers: true
        OwnerWebId: "I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA"
        CanWrite: true
        Rights:
        - "Read"
        - "WriteData"
        CanWriteData: true
        Links:
          Owner: "Owner"
          Self: "Self"
        CanRead: true
        CanExecute: true
      - SecurityItem: "Default"
        CanReadData: true
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        HasAdmin: true
        UserIdentity: "domain\\user"
        CanDelete: true
        CanAnnotate: true
        CanSubscribe: true
        CanSubscribeOthers: true
        OwnerWebId: "I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA"
        CanWrite: true
        Rights:
        - "Read"
        - "WriteData"
        CanWriteData: true
        Links:
          Owner: "Owner"
          Self: "Self"
        CanRead: true
        CanExecute: true
  Items[StreamSummaries]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/StreamSummaries"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        Links:
          Source: "Source"
        Items:
        - Type: "Total"
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value:
            UnitsAbbreviation: "m"
            Annotated: false
            Errors:
            - Message:
              - "An error has occurred."
              FieldName: "Value"
            - Message:
              - "An error has occurred."
              FieldName: "Value"
            Substituted: false
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: "2014-07-22T14:00:00Z"
            Questionable: false
        - Type: "Total"
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value:
            UnitsAbbreviation: "m"
            Annotated: false
            Errors:
            - Message:
              - "An error has occurred."
              FieldName: "Value"
            - Message:
              - "An error has occurred."
              FieldName: "Value"
            Substituted: false
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: "2014-07-22T14:00:00Z"
            Questionable: false
        Name: "Water"
      - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        Links:
          Source: "Source"
        Items:
        - Type: "Total"
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value:
            UnitsAbbreviation: "m"
            Annotated: false
            Errors:
            - Message:
              - "An error has occurred."
              FieldName: "Value"
            - Message:
              - "An error has occurred."
              FieldName: "Value"
            Substituted: false
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: "2014-07-22T14:00:00Z"
            Questionable: false
        - Type: "Total"
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value:
            UnitsAbbreviation: "m"
            Annotated: false
            Errors:
            - Message:
              - "An error has occurred."
              FieldName: "Value"
            - Message:
              - "An error has occurred."
              FieldName: "Value"
            Substituted: false
            WebException:
              Errors:
              - "An error has occurred."
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: "2014-07-22T14:00:00Z"
            Questionable: false
        Name: "Water"
  Items[StreamValue]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/StreamValue"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        Value:
          UnitsAbbreviation: "m"
          Annotated: false
          Errors:
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          Substituted: false
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: "2014-07-22T14:00:00Z"
          Questionable: false
        Links:
          Source: "Source"
        Name: "Water"
      - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        Value:
          UnitsAbbreviation: "m"
          Annotated: false
          Errors:
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          Substituted: false
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: "2014-07-22T14:00:00Z"
          Questionable: false
        Links:
          Source: "Source"
        Name: "Water"
  Items[StreamValues]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/StreamValues"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
        UnitsAbbreviation: "m"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        Links:
          Source: "Source"
        Items:
        - UnitsAbbreviation: "m"
          Annotated: false
          Errors:
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          Substituted: false
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: "2014-07-22T14:00:00Z"
          Questionable: false
        - UnitsAbbreviation: "m"
          Annotated: false
          Errors:
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          Substituted: false
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: "2014-07-22T14:00:00Z"
          Questionable: false
        Name: "Water"
      - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
        UnitsAbbreviation: "m"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        Links:
          Source: "Source"
        Items:
        - UnitsAbbreviation: "m"
          Annotated: false
          Errors:
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          Substituted: false
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: "2014-07-22T14:00:00Z"
          Questionable: false
        - UnitsAbbreviation: "m"
          Annotated: false
          Errors:
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          Substituted: false
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: "2014-07-22T14:00:00Z"
          Questionable: false
        Name: "Water"
  Items[string]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          type: "string"
    example:
      Items:
      - "Items"
      - "Items"
  Items[Substatus]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Substatus"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Message: "Message"
        Substatus: 200
      - WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Message: "Message"
        Substatus: 200
  Items[SummaryValue]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/SummaryValue"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Type: "Total"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value:
          UnitsAbbreviation: "m"
          Annotated: false
          Errors:
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          Substituted: false
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: "2014-07-22T14:00:00Z"
          Questionable: false
      - Type: "Total"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value:
          UnitsAbbreviation: "m"
          Annotated: false
          Errors:
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          Substituted: false
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: "2014-07-22T14:00:00Z"
          Questionable: false
  Items[Table]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/Table"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\MyDatabase\\Tables[CarInfo]"
        TimeZone: "Eastern Standard Time"
        Description: "Table of car info."
        CategoryNames:
        - "Table Category"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1BlDqD5loBNH0erqeqJodtALAmLr4X86Jmkeynt3QVwlqXw"
        ConvertToLocalTime: false
        Links:
          SecurityEntries: "SecurityEntries"
          Categories: "Categories"
          Database: "Database"
          Data: "Data"
          Self: "Self"
          Security: "Security"
        Id: "5ff8ba98-89ce-479a-b29e-ddd057096a5f"
        Name: "CarInfo"
      - Path: "\\\\MyAssetServer\\MyDatabase\\Tables[CarInfo]"
        TimeZone: "Eastern Standard Time"
        Description: "Table of car info."
        CategoryNames:
        - "Table Category"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1BlDqD5loBNH0erqeqJodtALAmLr4X86Jmkeynt3QVwlqXw"
        ConvertToLocalTime: false
        Links:
          SecurityEntries: "SecurityEntries"
          Categories: "Categories"
          Database: "Database"
          Data: "Data"
          Self: "Self"
          Security: "Security"
        Id: "5ff8ba98-89ce-479a-b29e-ddd057096a5f"
        Name: "CarInfo"
  Items[TableCategory]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/TableCategory"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\Database\\CategoriesTable[CategoryName]"
        Description: "Relative energy use per ton of process feed."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1BCDqD5loBNH0erqeqJodtALAwgzHiSFSd06HP4lKPqYefQ"
        Links:
          SecurityEntries: "SecurityEntries"
          Database: "Database"
          Self: "Self"
          Security: "Security"
        Id: "89c70cc2-5221-4e77-873f-894a3ea61e7d"
        Name: "CategoryName"
      - Path: "\\\\MyAssetServer\\Database\\CategoriesTable[CategoryName]"
        Description: "Relative energy use per ton of process feed."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1BCDqD5loBNH0erqeqJodtALAwgzHiSFSd06HP4lKPqYefQ"
        Links:
          SecurityEntries: "SecurityEntries"
          Database: "Database"
          Self: "Self"
          Security: "Security"
        Id: "89c70cc2-5221-4e77-873f-894a3ea61e7d"
        Name: "CategoryName"
  Items[TimeRulePlugIn]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/TimeRulePlugIn"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\PlugInsTimeRule[Periodic]"
        AssemblyTime: "2016-05-25T14:01:07Z"
        Description: "Creates regular periodic time periods."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        LoadedAssemblyTime: "1970-01-01T00:00:00Z"
        IsBrowsable: true
        Name: "Periodic"
        IsNonEditableConfig: false
        LoadedVersion: ""
        Version: "2.8.5.7552"
        WebId: "I1TPDqD5loBNH0erqeqJodtALAFPRV1lWW1kqmFRgvo4IAwQ"
        AssemblyID: "7a635b27-3c3c-4a5f-bba9-01f06e9e525b"
        AssemblyLoadProperties:
        - "None"
        CompatibilityVersion: 2
        Links:
          Self: "Self"
          AssetServer: "AssetServer"
        Id: "d655f414-9655-4ad6-a615-182fa38200c1"
        AssemblyFileName: "OSIsoft.AF.Time.TimeRule.Periodic.dll"
      - Path: "\\\\MyAssetServer\\PlugInsTimeRule[Periodic]"
        AssemblyTime: "2016-05-25T14:01:07Z"
        Description: "Creates regular periodic time periods."
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        LoadedAssemblyTime: "1970-01-01T00:00:00Z"
        IsBrowsable: true
        Name: "Periodic"
        IsNonEditableConfig: false
        LoadedVersion: ""
        Version: "2.8.5.7552"
        WebId: "I1TPDqD5loBNH0erqeqJodtALAFPRV1lWW1kqmFRgvo4IAwQ"
        AssemblyID: "7a635b27-3c3c-4a5f-bba9-01f06e9e525b"
        AssemblyLoadProperties:
        - "None"
        CompatibilityVersion: 2
        Links:
          Self: "Self"
          AssetServer: "AssetServer"
        Id: "d655f414-9655-4ad6-a615-182fa38200c1"
        AssemblyFileName: "OSIsoft.AF.Time.TimeRule.Periodic.dll"
  Items[UnitClass]:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/UnitClass"
      Links:
        $ref: "#/definitions/PaginationLinks"
    example:
      Links:
        Last: "Last"
        Next: "Next"
        Previous: "Previous"
        First: "First"
      Items:
      - Path: "\\\\MyAssetServer\\UOMDatabase\\UOMClasses[Power]"
        Description: "Power Unit Class"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1UCDqD5loBNH0erqeqJodtALATbkl-fxulEulDQAVw5HySQ"
        CanonicalUnitAbbreviation: "W"
        Links:
          Self: "Self"
          CanonicalUnit: "CanonicalUnit"
          Units: "Units"
          AssetServer: "AssetServer"
        Id: "f925b94d-6efc-4b94-a50d-0015c391f249"
        CanonicalUnitName: "watt"
        Name: "Power"
      - Path: "\\\\MyAssetServer\\UOMDatabase\\UOMClasses[Power]"
        Description: "Power Unit Class"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        WebId: "I1UCDqD5loBNH0erqeqJodtALATbkl-fxulEulDQAVw5HySQ"
        CanonicalUnitAbbreviation: "W"
        Links:
          Self: "Self"
          CanonicalUnit: "CanonicalUnit"
          Units: "Units"
          AssetServer: "AssetServer"
        Id: "f925b94d-6efc-4b94-a50d-0015c391f249"
        CanonicalUnitName: "watt"
        Name: "Power"
  Landing:
    type: "object"
    properties:
      Links:
        $ref: "#/definitions/LandingLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Links:
        DataServers: "DataServers"
        Search: "Search"
        AssetServers: "AssetServers"
        Self: "Self"
        System: "System"
        PIDirectory: "PIDirectory"
  LandingLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: ""
        x-link-optional: false
      AssetServers:
        type: "string"
        x-link-path: "assetservers"
        x-link-optional: false
      DataServers:
        type: "string"
        x-link-path: "dataservers"
        x-link-optional: false
      PIDirectory:
        type: "string"
        x-link-path: "PIDirectory"
        x-link-optional: false
      Search:
        type: "string"
        x-link-path: "search"
        x-link-optional: false
      System:
        type: "string"
        x-link-path: "system"
        x-link-optional: false
    example:
      DataServers: "DataServers"
      Search: "Search"
      AssetServers: "AssetServers"
      Self: "Self"
      System: "System"
      PIDirectory: "PIDirectory"
  MediaMetadata:
    type: "object"
    properties:
      Author:
        type: "string"
        example: "DOMAIN\\username"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ChangeDate:
        type: "string"
        format: "date-time"
        example: "2014-07-22T14:00:00Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Description:
        type: "string"
        example: "The description attached to this media."
      Name:
        type: "string"
        example: "ExampleFile.txt"
      Size:
        type: "number"
        example: 8.6753098675309E13
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/MediaMetadataLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Description: "The description attached to this media."
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Size: 8.6753098675309E13
      Author: "DOMAIN\\username"
      ChangeDate: "2014-07-22T14:00:00Z"
      Links:
        MediaData: "MediaData"
        Owner: "Owner"
        Self: "Self"
      Name: "ExampleFile.txt"
  MediaMetadataLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-optional: false
      Owner:
        type: "string"
        x-link-optional: false
      MediaData:
        type: "string"
        x-link-optional: false
    example:
      MediaData: "MediaData"
      Owner: "Owner"
      Self: "Self"
  NotificationContactTemplate:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1NCEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "cbb28260-853d-11e4-80c5-00155d844304"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Plant Manager"
        x-required-post: true
      Description:
        type: "string"
        example: ""
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\NotificationContactTemplates[Plant Manager]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Available:
        type: "boolean"
        example: true
      ConfigString:
        type: "string"
        example: ""
      ContactType:
        type: "string"
        example: "Individual"
      PlugInName:
        type: "string"
        example: ""
      HasChildren:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      MaximumRetries:
        type: "integer"
        example: 5
      MinimumAcknowledgements:
        type: "integer"
        example: 2
      NotifyWhenInstanceEnded:
        type: "boolean"
        example: true
      EscalationTimeout:
        type: "string"
        format: "Duration"
        example: "PT3S"
      RetryInterval:
        type: "string"
        format: "Duration"
        example: "PT5S"
      Links:
        $ref: "#/definitions/NotificationContactTemplateLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\NotificationContactTemplates[Plant Manager]"
      ConfigString: ""
      NotifyWhenInstanceEnded: true
      Description: ""
      ContactType: "Individual"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      MaximumRetries: 5
      Name: "Plant Manager"
      HasChildren: false
      EscalationTimeout: "PT3S"
      WebId: "I1NCEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
      MinimumAcknowledgements: 2
      Links:
        Self: "Self"
        AssetServer: "AssetServer"
      Available: true
      Id: "cbb28260-853d-11e4-80c5-00155d844304"
      RetryInterval: "PT5S"
      PlugInName: ""
  NotificationContactTemplateLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "notificationcontacttemplates/{webId}"
        x-link-optional: false
      AssetServer:
        type: "string"
        x-link-path: "assetservers/{webId}"
        x-link-optional: false
    example:
      Self: "Self"
      AssetServer: "AssetServer"
  NotificationRule:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1NRDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0Ag"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "e9a984d0-f47c-11e7-8454-00155d029708"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MachineName"
        x-required-post: true
      Description:
        type: "string"
        example: "Manufacturing Equipment MachineName"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName\\NotificationRules[RuleName]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AutoCreated:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CategoryNames:
        type: "array"
        example:
        - "Equipment Assets"
        items:
          type: "string"
      Criteria:
        type: "string"
        example: "Name: EventFrameCriteriaName"
      MultiTriggerEventOption:
        type: "string"
        example: "HighestSeverity"
      NonrepetitionInterval:
        type: "string"
        format: "Duration"
        example: "PT3S"
      ResendInterval:
        type: "string"
        format: "Duration"
        example: "PT5S"
      Status:
        type: "string"
        example: "Disabled"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      TemplateName:
        type: "string"
        example: "MachineName Notification Rule"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
        MachineName\\NotificationRules[RuleName]"
      Status: "Disabled"
      MultiTriggerEventOption: "HighestSeverity"
      Description: "Manufacturing Equipment MachineName"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      ResendInterval: "PT5S"
      Criteria: "Name: EventFrameCriteriaName"
      Name: "MachineName"
      CategoryNames:
      - "Equipment Assets"
      AutoCreated: true
      WebId: "I1NRDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0Ag"
      TemplateName: "MachineName Notification Rule"
      Id: "e9a984d0-f47c-11e7-8454-00155d029708"
      NonrepetitionInterval: "PT3S"
  NotificationRuleSubscriber:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1NSLDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0AgPUJJXNlEW1w78rnCXDmcDA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "e9a984d0-f47c-11e7-8454-00155d029708"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "NotificationSubscriptionRuleName"
        x-required-post: true
      Description:
        type: "string"
        example: "Manufacturing Machine MachineName subscription"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\NotificationRules[NotificationSubscriptionRuleName]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ConfigString:
        type: "string"
        example: "ToEmail=mike@testemail.com"
      ContactTemplateName:
        type: "string"
        example: "Plant Manager"
        x-required-post: true
      ContactType:
        type: "string"
        example: "Individual"
      DeliveryFormatName:
        type: "string"
        example: "DeliveryFormat"
      PlugInName:
        type: "string"
        example: "Email"
        x-disallow-patch: true
        x-required-post: true
      EscalationTimeout:
        type: "string"
        format: "Duration"
        example: "PT3S"
      MaximumRetries:
        type: "integer"
        example: 3
      NotifyOption:
        type: "string"
        example: "EventStart"
      RetryInterval:
        type: "string"
        format: "Duration"
        example: "PT3S"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\NotificationRules[NotificationSubscriptionRuleName]"
      ConfigString: "ToEmail=mike@testemail.com"
      NotifyOption: "EventStart"
      Description: "Manufacturing Machine MachineName subscription"
      ContactType: "Individual"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      MaximumRetries: 3
      Name: "NotificationSubscriptionRuleName"
      EscalationTimeout: "PT3S"
      ContactTemplateName: "Plant Manager"
      WebId: "I1NSLDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0AgPUJJXNlEW1w78rnCXDmcDA"
      Id: "e9a984d0-f47c-11e7-8454-00155d029708"
      RetryInterval: "PT3S"
      PlugInName: "Email"
      DeliveryFormatName: "DeliveryFormat"
  NotificationRuleTemplate:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1NTDqD5loBNH0erqeqJodtALAtdcX5JH_5xGEKAAVXTSaAg"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "e9a984d0-f47c-11e7-8454-00155d029708"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MachineName"
        x-required-post: true
      Description:
        type: "string"
        example: "Description entered by the user"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\CityName\\ElementTemplates[Template3]\\\
          NotificationRuleTemplates[Notification Rule Template]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CategoryNames:
        type: "array"
        example:
        - "MachineNameAlerts"
        items:
          type: "string"
      Criteria:
        type: "string"
        example: "Name: EventFrameCriteriaName"
      MultiTriggerEventOption:
        type: "string"
        example: "HighestSeverity"
      NonrepetitionInterval:
        type: "string"
        format: "Duration"
        example: "PT3S"
      ResendInterval:
        type: "string"
        format: "Duration"
        example: "PT5S"
      Status:
        type: "string"
        example: "Functioning"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      TemplateName:
        type: "string"
        example: "MachineName Notification Rule Template"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\ElementTemplates[Template3]\\\
        NotificationRuleTemplates[Notification Rule Template]"
      Status: "Functioning"
      MultiTriggerEventOption: "HighestSeverity"
      Description: "Description entered by the user"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      ResendInterval: "PT5S"
      Criteria: "Name: EventFrameCriteriaName"
      Name: "MachineName"
      CategoryNames:
      - "MachineNameAlerts"
      WebId: "I1NTDqD5loBNH0erqeqJodtALAtdcX5JH_5xGEKAAVXTSaAg"
      TemplateName: "MachineName Notification Rule Template"
      Id: "e9a984d0-f47c-11e7-8454-00155d029708"
      NonrepetitionInterval: "PT3S"
  PaginationLinks:
    type: "object"
    properties:
      First:
        type: "string"
        x-link-optional: true
      Previous:
        type: "string"
        x-link-optional: true
      Next:
        type: "string"
        x-link-optional: true
      Last:
        type: "string"
        x-link-optional: true
    example:
      Last: "Last"
      Next: "Next"
      Previous: "Previous"
      First: "First"
  Point:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "integer"
        format: "int32"
        example: 82
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "PointName"
        x-required-post: true
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyPIServer\\PointName"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Descriptor:
        type: "string"
        example: "12 Hour Sine Wave"
      PointClass:
        type: "string"
        example: "classic"
        x-disallow-patch: true
        x-required-post: true
      PointType:
        type: "string"
        example: "Float32"
        x-disallow-patch: true
        x-required-post: true
      DigitalSetName:
        type: "string"
        example: ""
        x-disallow-patch: true
      Span:
        type: "number"
        example: 100.0
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Zero:
        type: "number"
        example: 0.0
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      EngineeringUnits:
        type: "string"
        example: ""
      Step:
        type: "boolean"
        example: false
      Future:
        type: "boolean"
        example: false
        x-disallow-patch: true
      DisplayDigits:
        type: "integer"
        example: -5
      Links:
        $ref: "#/definitions/PointLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyPIServer\\PointName"
      Zero: 0.0
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      DisplayDigits: -5
      Step: false
      Span: 100.0
      Name: "PointName"
      PointClass: "classic"
      WebId: "I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA"
      Descriptor: "12 Hour Sine Wave"
      PointType: "Float32"
      Future: false
      Links:
        PlotData: "PlotData"
        DataServer: "DataServer"
        Attributes: "Attributes"
        SummaryData: "SummaryData"
        Value: "Value"
        EndValue: "EndValue"
        Self: "Self"
        InterpolatedData: "InterpolatedData"
        RecordedData: "RecordedData"
      Id: 82
      DigitalSetName: ""
      EngineeringUnits: ""
  PointAttribute:
    type: "object"
    properties:
      Name:
        type: "string"
        example: "typicalvalue"
        x-required-put: true
      Value:
        type: "object"
        example: 50.0
        properties: {}
        x-required-put: true
      Links:
        $ref: "#/definitions/PointAttributeLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Value: 50.0
      Links:
        Self: "Self"
        Point: "Point"
      Name: "typicalvalue"
  PointAttributeLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "points/{webId}/attributes/{name}"
        x-link-optional: false
      Point:
        type: "string"
        x-link-path: "points/{webId}"
        x-link-optional: false
    example:
      Self: "Self"
      Point: "Point"
  PointLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "points/{webId}"
        x-link-optional: false
      DataServer:
        type: "string"
        x-link-path: "dataservers/{webId}"
        x-link-optional: false
      Attributes:
        type: "string"
        x-link-path: "points/{webId}/attributes"
        x-link-optional: false
      InterpolatedData:
        type: "string"
        x-link-path: "streams/{webId}/interpolated"
        x-link-optional: false
      RecordedData:
        type: "string"
        x-link-path: "streams/{webId}/recorded"
        x-link-optional: false
      PlotData:
        type: "string"
        x-link-path: "streams/{webId}/plot"
        x-link-optional: false
      SummaryData:
        type: "string"
        x-link-path: "streams/{webId}/summary"
        x-link-optional: false
      Value:
        type: "string"
        x-link-path: "streams/{webId}/value"
        x-link-optional: false
      EndValue:
        type: "string"
        x-link-path: "streams/{webId}/end"
        x-link-optional: false
    example:
      PlotData: "PlotData"
      DataServer: "DataServer"
      Attributes: "Attributes"
      SummaryData: "SummaryData"
      Value: "Value"
      EndValue: "EndValue"
      Self: "Self"
      InterpolatedData: "InterpolatedData"
      RecordedData: "RecordedData"
  PropertyError:
    type: "object"
    properties:
      FieldName:
        type: "string"
        example: "Value"
      Message:
        type: "array"
        example:
        - "An error has occurred."
        items:
          type: "string"
    example:
      Message:
      - "An error has occurred."
      FieldName: "Value"
  Request:
    type: "object"
    properties:
      Method:
        type: "string"
        example: "GET"
        x-required-post: true
      Resource:
        type: "string"
      RequestTemplate:
        $ref: "#/definitions/RequestTemplate"
      Parameters:
        type: "array"
        items:
          type: "string"
      Headers:
        type: "object"
        additionalProperties:
          type: "string"
      Content:
        type: "string"
      ParentIds:
        type: "array"
        items:
          type: "string"
  RequestTemplate:
    type: "object"
    properties:
      Resource:
        type: "string"
        x-required-post: true
  Response:
    type: "object"
    properties:
      Status:
        type: "integer"
        format: "int32"
        example: 200
        enum:
        - 100
        - 101
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 300
        - 301
        - 302
        - 303
        - 304
        - 305
        - 306
        - 307
        - 400
        - 401
        - 402
        - 403
        - 404
        - 405
        - 406
        - 407
        - 408
        - 409
        - 410
        - 411
        - 412
        - 413
        - 414
        - 415
        - 416
        - 417
        - 426
        - 500
        - 501
        - 502
        - 503
        - 504
        - 505
      Headers:
        type: "object"
        additionalProperties:
          type: "string"
      Content:
        type: "object"
        properties: {}
    example:
      Status: 200
      Headers:
        key: "Headers"
      Content: "{}"
  SearchByAttribute:
    type: "object"
    properties:
      SearchRoot:
        type: "string"
        format: "webid"
        example: "I1RDDqD5loBNH0erqeqJodtALA8fbgUnyQW02v-gLGIxumSg"
      ElementTemplate:
        type: "string"
        format: "webid"
        example: "I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg"
      Items:
        type: "array"
        items:
          $ref: "#/definitions/ValueQuery"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      SearchRoot: "I1RDDqD5loBNH0erqeqJodtALA8fbgUnyQW02v-gLGIxumSg"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Items:
      - AttributeValue: 12.3
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        AttributeUOM: "pound-force per square inch"
        SearchOperator: "LessThan"
        AttributeName: "Pressure"
      - AttributeValue: 12.3
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        AttributeUOM: "pound-force per square inch"
        SearchOperator: "LessThan"
        AttributeName: "Pressure"
      ElementTemplate: "I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg"
  Security:
    type: "object"
    properties:
      CanAnnotate:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanDelete:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanExecute:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanRead:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanReadData:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanSubscribe:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanSubscribeOthers:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanWrite:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanWriteData:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      HasAdmin:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Rights:
        type: "array"
        example:
        - "Read"
        - "WriteData"
        items:
          type: "string"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      CanWrite: true
      Rights:
      - "Read"
      - "WriteData"
      CanReadData: true
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      HasAdmin: true
      CanWriteData: true
      CanDelete: true
      CanRead: true
      CanAnnotate: true
      CanExecute: true
      CanSubscribe: true
      CanSubscribeOthers: true
  SecurityEntry:
    type: "object"
    properties:
      Name:
        type: "string"
        example: "domain\\user1"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      SecurityIdentityName:
        type: "string"
        example: "domain\\user1"
        x-required-post: true
        x-disallow-put: true
      AllowRights:
        type: "array"
        example:
        - "Read"
        - "ReadData"
        items:
          type: "string"
      DenyRights:
        type: "array"
        example:
        - "Write"
        - "Execute"
        - "Admin"
        items:
          type: "string"
      Links:
        $ref: "#/definitions/SecurityEntryLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      AllowRights:
      - "Read"
      - "ReadData"
      DenyRights:
      - "Write"
      - "Execute"
      - "Admin"
      Links:
        SecurableObject: "SecurableObject"
        SecurityIdentity: "SecurityIdentity"
        Self: "Self"
      SecurityIdentityName: "domain\\user1"
      Name: "domain\\user1"
  SecurityEntryLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-optional: false
      SecurableObject:
        type: "string"
        x-link-optional: false
      SecurityIdentity:
        type: "string"
        x-link-path: "securityidentities/{webId}"
        x-link-optional: false
    example:
      SecurableObject: "SecurableObject"
      SecurityIdentity: "SecurityIdentity"
      Self: "Self"
  SecurityIdentity:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1SIDqD5loBNH0erqeqJodtALASe6l8zgYokqdeeFilFI9tw"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "f3a5ee49-1838-4aa2-9d79-e16294523db7"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MySecurityIdentity"
        x-required-post: true
      Description:
        type: "string"
        example: ""
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\SecurityIdentities[MySecurityIdentity]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsEnabled:
        type: "boolean"
        example: true
      Links:
        $ref: "#/definitions/SecurityIdentityLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\SecurityIdentities[MySecurityIdentity]"
      Description: ""
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      IsEnabled: true
      WebId: "I1SIDqD5loBNH0erqeqJodtALASe6l8zgYokqdeeFilFI9tw"
      Links:
        SecurityEntries: "SecurityEntries"
        SecurityMappings: "SecurityMappings"
        Self: "Self"
        Security: "Security"
        AssetServer: "AssetServer"
      Id: "f3a5ee49-1838-4aa2-9d79-e16294523db7"
      Name: "MySecurityIdentity"
  SecurityIdentityLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "securityidentities/{webId}"
        x-link-optional: false
      AssetServer:
        type: "string"
        x-link-path: "assetservers/{webId}"
        x-link-optional: false
      SecurityMappings:
        type: "string"
        x-link-path: "securityidentities/{webId}/securitymappings"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "securityidentities/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "securityidentities/{webId}/securityentries"
        x-link-optional: false
    example:
      SecurityEntries: "SecurityEntries"
      SecurityMappings: "SecurityMappings"
      Self: "Self"
      Security: "Security"
      AssetServer: "AssetServer"
  SecurityMapping:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1SMDqD5loBNH0erqeqJodtALAgu8UrMAZB0qWp9H7C4TAXQ"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "ac14ef82-19c0-4a07-96a7-d1fb0b84c05d"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MySecurityMapping"
      Description:
        type: "string"
        example: ""
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\SecurityMappings[MySecurityMapping]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Account:
        type: "string"
        example: "domain\\user"
        x-disallow-patch: true
        x-required-post: true
      SecurityIdentityWebId:
        type: "string"
        example: "I1SIEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        x-required-post: true
      Links:
        $ref: "#/definitions/SecurityMappingLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\SecurityMappings[MySecurityMapping]"
      Account: "domain\\user"
      Description: ""
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1SMDqD5loBNH0erqeqJodtALAgu8UrMAZB0qWp9H7C4TAXQ"
      SecurityIdentityWebId: "I1SIEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
      Links:
        SecurityIdentity: "SecurityIdentity"
        SecurityEntries: "SecurityEntries"
        Self: "Self"
        Security: "Security"
        AssetServer: "AssetServer"
      Id: "ac14ef82-19c0-4a07-96a7-d1fb0b84c05d"
      Name: "MySecurityMapping"
  SecurityMappingLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "securitymappings/{webId}"
        x-link-optional: false
      AssetServer:
        type: "string"
        x-link-path: "assetservers/{webId}"
        x-link-optional: false
      SecurityIdentity:
        type: "string"
        x-link-path: "securityidentities/{webId}"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "securitymappings/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "securitymappings/{webId}/securityentries"
        x-link-optional: false
    example:
      SecurityIdentity: "SecurityIdentity"
      SecurityEntries: "SecurityEntries"
      Self: "Self"
      Security: "Security"
      AssetServer: "AssetServer"
  SecurityRights:
    type: "object"
    properties:
      OwnerWebId:
        type: "string"
        example: "I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA"
      SecurityItem:
        type: "string"
        example: "Default"
      UserIdentity:
        type: "string"
        example: "domain\\user"
      Links:
        $ref: "#/definitions/SecurityRightsLinks"
      CanAnnotate:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanDelete:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanExecute:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanRead:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanReadData:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanSubscribe:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanSubscribeOthers:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanWrite:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CanWriteData:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      HasAdmin:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Rights:
        type: "array"
        example:
        - "Read"
        - "WriteData"
        items:
          type: "string"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      SecurityItem: "Default"
      CanReadData: true
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      HasAdmin: true
      UserIdentity: "domain\\user"
      CanDelete: true
      CanAnnotate: true
      CanSubscribe: true
      CanSubscribeOthers: true
      OwnerWebId: "I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA"
      CanWrite: true
      Rights:
      - "Read"
      - "WriteData"
      CanWriteData: true
      Links:
        Owner: "Owner"
        Self: "Self"
      CanRead: true
      CanExecute: true
  SecurityRightsLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-optional: false
      Owner:
        type: "string"
        x-link-optional: false
    example:
      Owner: "Owner"
      Self: "Self"
  StreamAnnotation:
    type: "object"
    properties:
      Id:
        type: "string"
        format: "uuid"
        example: "512B6616-CE39-4F70-9048-8C6A025FB592"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Temperature Annotation"
        x-required-post: true
      Description:
        type: "string"
        example: "Signifies a spike in temperature."
      Value:
        type: "object"
        example: "The temperature spiked because of a malfunction with a unit in our\
          \ west plant."
        properties: {}
      Creator:
        type: "string"
        example: "MyDomain\\UserA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CreationDate:
        type: "string"
        format: "date-time"
        example: "2016-06-21T14:45:50.2988321Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Modifier:
        type: "string"
        example: "MyDomain\\UserA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ModifyDate:
        type: "string"
        format: "date-time"
        example: "2016-06-21T14:45:50.2988321Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      WebException:
        $ref: "#/definitions/WebException"
    example:
      CreationDate: "2016-06-21T14:45:50.2988321Z"
      Description: "Signifies a spike in temperature."
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      ModifyDate: "2016-06-21T14:45:50.2988321Z"
      Value: "The temperature spiked because of a malfunction with a unit in our west\
        \ plant."
      Id: "512B6616-CE39-4F70-9048-8C6A025FB592"
      Creator: "MyDomain\\UserA"
      Modifier: "MyDomain\\UserA"
      Name: "Temperature Annotation"
  StreamSummaries:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Water"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Items:
        type: "array"
        items:
          $ref: "#/definitions/SummaryValue"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/StreamSummariesLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
      Links:
        Source: "Source"
      Items:
      - Type: "Total"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value:
          UnitsAbbreviation: "m"
          Annotated: false
          Errors:
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          Substituted: false
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: "2014-07-22T14:00:00Z"
          Questionable: false
      - Type: "Total"
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value:
          UnitsAbbreviation: "m"
          Annotated: false
          Errors:
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          - Message:
            - "An error has occurred."
            FieldName: "Value"
          Substituted: false
          WebException:
            Errors:
            - "An error has occurred."
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: "2014-07-22T14:00:00Z"
          Questionable: false
      Name: "Water"
  StreamSummariesLinks:
    type: "object"
    properties:
      Source:
        type: "string"
        x-link-optional: false
    example:
      Source: "Source"
  StreamValue:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        x-required-post: true
      Name:
        type: "string"
        example: "Water"
        x-disallow-post: true
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
        x-disallow-post: true
      Value:
        $ref: "#/definitions/TimedValue"
      Links:
        $ref: "#/definitions/StreamValueLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
      Value:
        UnitsAbbreviation: "m"
        Annotated: false
        Errors:
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        Substituted: false
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value: 12.3
        Good: true
        Timestamp: "2014-07-22T14:00:00Z"
        Questionable: false
      Links:
        Source: "Source"
      Name: "Water"
  StreamValueLinks:
    type: "object"
    properties:
      Source:
        type: "string"
        x-link-optional: false
    example:
      Source: "Source"
  StreamValues:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
        x-required-post: true
      Name:
        type: "string"
        example: "Water"
        x-disallow-post: true
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
        x-disallow-post: true
      Items:
        type: "array"
        items:
          $ref: "#/definitions/TimedValue"
        x-required-post: true
      UnitsAbbreviation:
        type: "string"
        example: "m"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/StreamValuesLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\MyElement|Water"
      UnitsAbbreviation: "m"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg"
      Links:
        Source: "Source"
      Items:
      - UnitsAbbreviation: "m"
        Annotated: false
        Errors:
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        Substituted: false
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value: 12.3
        Good: true
        Timestamp: "2014-07-22T14:00:00Z"
        Questionable: false
      - UnitsAbbreviation: "m"
        Annotated: false
        Errors:
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        Substituted: false
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value: 12.3
        Good: true
        Timestamp: "2014-07-22T14:00:00Z"
        Questionable: false
      Name: "Water"
  StreamValuesLinks:
    type: "object"
    properties:
      Source:
        type: "string"
        x-link-optional: false
    example:
      Source: "Source"
  Substatus:
    type: "object"
    properties:
      Substatus:
        type: "integer"
        format: "int32"
        example: 200
        enum:
        - 100
        - 101
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 300
        - 301
        - 302
        - 303
        - 304
        - 305
        - 306
        - 307
        - 400
        - 401
        - 402
        - 403
        - 404
        - 405
        - 406
        - 407
        - 408
        - 409
        - 410
        - 411
        - 412
        - 413
        - 414
        - 415
        - 416
        - 417
        - 426
        - 500
        - 501
        - 502
        - 503
        - 504
        - 505
      Message:
        type: "string"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Message: "Message"
      Substatus: 200
  SummaryValue:
    type: "object"
    properties:
      Type:
        type: "string"
        example: "Total"
      Value:
        $ref: "#/definitions/TimedValue"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Type: "Total"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Value:
        UnitsAbbreviation: "m"
        Annotated: false
        Errors:
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        Substituted: false
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value: 12.3
        Good: true
        Timestamp: "2014-07-22T14:00:00Z"
        Questionable: false
  SystemLanding:
    type: "object"
    properties:
      ProductTitle:
        type: "string"
        example: "PI Web API 2016 R2"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ProductVersion:
        type: "string"
        example: "1.8.0.201"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/SystemLandingLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Links:
        Status: "Status"
        Versions: "Versions"
        Configuration: "Configuration"
        CacheInstances: "CacheInstances"
        UserInfo: "UserInfo"
        Self: "Self"
      ProductVersion: "1.8.0.201"
      ProductTitle: "PI Web API 2016 R2"
  SystemLandingLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "system"
        x-link-optional: false
      CacheInstances:
        type: "string"
        x-link-path: "system/cacheinstances"
        x-link-optional: false
      Configuration:
        type: "string"
        x-link-path: "system/configuration"
        x-link-optional: false
      UserInfo:
        type: "string"
        x-link-path: "system/userinfo"
        x-link-optional: false
      Versions:
        type: "string"
        x-link-path: "system/versions"
        x-link-optional: false
      Status:
        type: "string"
        x-link-path: "system/status"
        x-link-optional: false
    example:
      Status: "Status"
      Versions: "Versions"
      Configuration: "Configuration"
      CacheInstances: "CacheInstances"
      UserInfo: "UserInfo"
      Self: "Self"
  SystemStatus:
    type: "object"
    properties:
      UpTimeInMinutes:
        type: "number"
        format: "double"
        example: 32345.6
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      State:
        type: "string"
        example: "Running"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CacheInstances:
        type: "integer"
        format: "int32"
        example: 0
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ServerTime:
        type: "string"
        format: "date-time"
        example: "2014-07-22T14:00:00Z"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      State: "Running"
      CacheInstances: 0
      ServerTime: "2014-07-22T14:00:00Z"
      UpTimeInMinutes: 32345.6
  Table:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1BlDqD5loBNH0erqeqJodtALAmLr4X86Jmkeynt3QVwlqXw"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "5ff8ba98-89ce-479a-b29e-ddd057096a5f"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "CarInfo"
        x-required-post: true
      Description:
        type: "string"
        example: "Table of car info."
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\Tables[CarInfo]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CategoryNames:
        type: "array"
        example:
        - "Table Category"
        items:
          type: "string"
      TimeZone:
        type: "string"
        example: "Eastern Standard Time"
      ConvertToLocalTime:
        type: "boolean"
        example: false
      Links:
        $ref: "#/definitions/TableLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\Tables[CarInfo]"
      TimeZone: "Eastern Standard Time"
      Description: "Table of car info."
      CategoryNames:
      - "Table Category"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1BlDqD5loBNH0erqeqJodtALAmLr4X86Jmkeynt3QVwlqXw"
      ConvertToLocalTime: false
      Links:
        SecurityEntries: "SecurityEntries"
        Categories: "Categories"
        Database: "Database"
        Data: "Data"
        Self: "Self"
        Security: "Security"
      Id: "5ff8ba98-89ce-479a-b29e-ddd057096a5f"
      Name: "CarInfo"
  TableCategory:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1BCDqD5loBNH0erqeqJodtALAwgzHiSFSd06HP4lKPqYefQ"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "89c70cc2-5221-4e77-873f-894a3ea61e7d"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "CategoryName"
        x-required-post: true
      Description:
        type: "string"
        example: "Relative energy use per ton of process feed."
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\Database\\CategoriesTable[CategoryName]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/TableCategoryLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\Database\\CategoriesTable[CategoryName]"
      Description: "Relative energy use per ton of process feed."
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1BCDqD5loBNH0erqeqJodtALAwgzHiSFSd06HP4lKPqYefQ"
      Links:
        SecurityEntries: "SecurityEntries"
        Database: "Database"
        Self: "Self"
        Security: "Security"
      Id: "89c70cc2-5221-4e77-873f-894a3ea61e7d"
      Name: "CategoryName"
  TableCategoryLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "tablecategories/{webId}"
        x-link-optional: false
      Database:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "tablecategories/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "tablecategories/{webId}/securityentries"
        x-link-optional: false
    example:
      SecurityEntries: "SecurityEntries"
      Database: "Database"
      Self: "Self"
      Security: "Security"
  TableData:
    type: "object"
    properties:
      Columns:
        type: "object"
        additionalProperties:
          type: "string"
        x-required-put: true
      Rows:
        type: "array"
        items:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
        x-required-put: true
      WebException:
        $ref: "#/definitions/WebException"
    example:
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Columns:
        key: "Columns"
      Rows:
      - key: "{}"
      - key: "{}"
  TableLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "tables/{webId}"
        x-link-optional: false
      Database:
        type: "string"
        x-link-path: "assetdatabases/{webId}"
        x-link-optional: false
      Data:
        type: "string"
        x-link-path: "tables/{webId}/data"
        x-link-optional: false
      Categories:
        type: "string"
        x-link-path: "tables/{webId}/categories"
        x-link-optional: false
      Security:
        type: "string"
        x-link-path: "tables/{webId}/security"
        x-link-optional: false
      SecurityEntries:
        type: "string"
        x-link-path: "tables/{webId}/securityentries"
        x-link-optional: false
    example:
      SecurityEntries: "SecurityEntries"
      Categories: "Categories"
      Database: "Database"
      Data: "Data"
      Self: "Self"
      Security: "Security"
  TimedValue:
    type: "object"
    properties:
      Timestamp:
        type: "string"
        format: "date-time"
        example: "2014-07-22T14:00:00Z"
      UnitsAbbreviation:
        type: "string"
        example: "m"
      Good:
        type: "boolean"
        example: true
      Questionable:
        type: "boolean"
        example: false
      Substituted:
        type: "boolean"
        example: false
        x-disallow-post: true
      Annotated:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Value:
        type: "object"
        example: 12.3
        properties: {}
      Errors:
        type: "array"
        items:
          $ref: "#/definitions/PropertyError"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      WebException:
        $ref: "#/definitions/WebException"
    example:
      UnitsAbbreviation: "m"
      Annotated: false
      Errors:
      - Message:
        - "An error has occurred."
        FieldName: "Value"
      - Message:
        - "An error has occurred."
        FieldName: "Value"
      Substituted: false
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Value: 12.3
      Good: true
      Timestamp: "2014-07-22T14:00:00Z"
      Questionable: false
  TimedValues:
    type: "object"
    properties:
      Items:
        type: "array"
        items:
          $ref: "#/definitions/TimedValue"
        x-required-post: true
      UnitsAbbreviation:
        type: "string"
        x-disallow-post: true
      WebException:
        $ref: "#/definitions/WebException"
    example:
      UnitsAbbreviation: "UnitsAbbreviation"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Items:
      - UnitsAbbreviation: "m"
        Annotated: false
        Errors:
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        Substituted: false
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value: 12.3
        Good: true
        Timestamp: "2014-07-22T14:00:00Z"
        Questionable: false
      - UnitsAbbreviation: "m"
        Annotated: false
        Errors:
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        - Message:
          - "An error has occurred."
          FieldName: "Value"
        Substituted: false
        WebException:
          Errors:
          - "An error has occurred."
          StatusCode: 500
        Value: 12.3
        Good: true
        Timestamp: "2014-07-22T14:00:00Z"
        Questionable: false
  TimeRule:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1TRXDqD5loBNH0erqeqJodtALAROsUFcWU5xGEQwAVXYTCAAROsUFcWU5xGEQwAVXYTCAA"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "1514eb44-94c5-11e7-8443-00155d84c200"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Periodic"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Description:
        type: "string"
        example: "Creates regular periodic time periods."
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\\
          TimeRule"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ConfigString:
        type: "string"
        example: "Frequency=300"
      ConfigStringStored:
        type: "string"
        example: ""
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      DisplayString:
        type: "string"
        example: "Frequency=300"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      EditorType:
        type: "string"
        example: "OSIsoft.AF.Time.TimeRule.PeriodicConfig"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsConfigured:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsInitializing:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      MergeDuplicatedItems:
        type: "boolean"
        example: false
      PlugInName:
        type: "string"
        example: "Periodic"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/TimeRuleLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\TimeRule"
      ConfigString: "Frequency=300"
      Description: "Creates regular periodic time periods."
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      MergeDuplicatedItems: false
      EditorType: "OSIsoft.AF.Time.TimeRule.PeriodicConfig"
      ConfigStringStored: ""
      Name: "Periodic"
      WebId: "I1TRXDqD5loBNH0erqeqJodtALAROsUFcWU5xGEQwAVXYTCAAROsUFcWU5xGEQwAVXYTCAA"
      DisplayString: "Frequency=300"
      Links:
        AnalysisTemplate: "AnalysisTemplate"
        Analysis: "Analysis"
        Self: "Self"
        PlugIn: "PlugIn"
      IsInitializing: false
      Id: "1514eb44-94c5-11e7-8443-00155d84c200"
      PlugInName: "Periodic"
      IsConfigured: true
  TimeRuleLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "timerules/{webId}"
        x-link-optional: false
      Analysis:
        type: "string"
        x-link-path: "analyses/{webId}"
        x-link-optional: true
      AnalysisTemplate:
        type: "string"
        x-link-path: "analysistemplates/{webId}"
        x-link-optional: true
      PlugIn:
        type: "string"
        x-link-path: "timeruleplugins/{webId}"
        x-link-optional: true
    example:
      AnalysisTemplate: "AnalysisTemplate"
      Analysis: "Analysis"
      Self: "Self"
      PlugIn: "PlugIn"
  TimeRulePlugIn:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1TPDqD5loBNH0erqeqJodtALAFPRV1lWW1kqmFRgvo4IAwQ"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "d655f414-9655-4ad6-a615-182fa38200c1"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Periodic"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Description:
        type: "string"
        example: "Creates regular periodic time periods."
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\PlugInsTimeRule[Periodic]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AssemblyFileName:
        type: "string"
        example: "OSIsoft.AF.Time.TimeRule.Periodic.dll"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AssemblyID:
        type: "string"
        format: "uuid"
        example: "7a635b27-3c3c-4a5f-bba9-01f06e9e525b"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AssemblyLoadProperties:
        type: "array"
        example:
        - "None"
        items:
          type: "string"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      AssemblyTime:
        type: "string"
        format: "date-time"
        example: "2016-05-25T14:01:07Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      CompatibilityVersion:
        type: "integer"
        format: "int32"
        example: 2
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsBrowsable:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsNonEditableConfig:
        type: "boolean"
        example: false
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      LoadedAssemblyTime:
        type: "string"
        format: "date-time"
        example: "1970-01-01T00:00:00Z"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      LoadedVersion:
        type: "string"
        example: ""
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Version:
        type: "string"
        example: "2.8.5.7552"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/TimeRulePlugInLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\PlugInsTimeRule[Periodic]"
      AssemblyTime: "2016-05-25T14:01:07Z"
      Description: "Creates regular periodic time periods."
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      LoadedAssemblyTime: "1970-01-01T00:00:00Z"
      IsBrowsable: true
      Name: "Periodic"
      IsNonEditableConfig: false
      LoadedVersion: ""
      Version: "2.8.5.7552"
      WebId: "I1TPDqD5loBNH0erqeqJodtALAFPRV1lWW1kqmFRgvo4IAwQ"
      AssemblyID: "7a635b27-3c3c-4a5f-bba9-01f06e9e525b"
      AssemblyLoadProperties:
      - "None"
      CompatibilityVersion: 2
      Links:
        Self: "Self"
        AssetServer: "AssetServer"
      Id: "d655f414-9655-4ad6-a615-182fa38200c1"
      AssemblyFileName: "OSIsoft.AF.Time.TimeRule.Periodic.dll"
  TimeRulePlugInLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "timeruleplugins/{webId}"
        x-link-optional: false
      AssetServer:
        type: "string"
        x-link-path: "assetservers/{webId}"
        x-link-optional: false
    example:
      Self: "Self"
      AssetServer: "AssetServer"
  Unit:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1UtDqD5loBNH0erqeqJodtALAjqwhgeI8lEeV4xeD1db0_A"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "8121ac8e-3ce2-4794-95e3-1783d5d6f4fc"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Hertz"
        x-required-post: true
      Abbreviation:
        type: "string"
        example: "Hz"
        x-required-post: true
      Description:
        type: "string"
        example: "Hertz Unit"
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\UOMDatabase\\Hertz"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Factor:
        type: "number"
        format: "double"
        example: 1.0
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Offset:
        type: "number"
        format: "double"
        example: 0.0
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ReferenceFactor:
        type: "number"
        format: "double"
        example: 1.0
      ReferenceOffset:
        type: "number"
        format: "double"
        example: 0.0
      ReferenceUnitAbbreviation:
        type: "string"
        example: ""
      Links:
        $ref: "#/definitions/UnitLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Abbreviation: "Hz"
      Path: "\\\\MyAssetServer\\UOMDatabase\\Hertz"
      Description: "Hertz Unit"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      ReferenceOffset: 0.0
      Name: "Hertz"
      Offset: 0.0
      ReferenceUnitAbbreviation: ""
      ReferenceFactor: 1.0
      WebId: "I1UtDqD5loBNH0erqeqJodtALAjqwhgeI8lEeV4xeD1db0_A"
      Factor: 1.0
      Links:
        ReferenceUnit: "ReferenceUnit"
        Class: "Class"
        Self: "Self"
      Id: "8121ac8e-3ce2-4794-95e3-1783d5d6f4fc"
  UnitClass:
    type: "object"
    properties:
      WebId:
        type: "string"
        format: "webid"
        example: "I1UCDqD5loBNH0erqeqJodtALATbkl-fxulEulDQAVw5HySQ"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Id:
        type: "string"
        format: "uuid"
        example: "f925b94d-6efc-4b94-a50d-0015c391f249"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "Power"
        x-required-post: true
      Description:
        type: "string"
        example: "Power Unit Class"
      CanonicalUnitName:
        type: "string"
        example: "watt"
        x-required-post: true
      CanonicalUnitAbbreviation:
        type: "string"
        example: "W"
        x-required-post: true
      Path:
        type: "string"
        format: "path"
        example: "\\\\MyAssetServer\\UOMDatabase\\UOMClasses[Power]"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Links:
        $ref: "#/definitions/UnitClassLinks"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      Path: "\\\\MyAssetServer\\UOMDatabase\\UOMClasses[Power]"
      Description: "Power Unit Class"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      WebId: "I1UCDqD5loBNH0erqeqJodtALATbkl-fxulEulDQAVw5HySQ"
      CanonicalUnitAbbreviation: "W"
      Links:
        Self: "Self"
        CanonicalUnit: "CanonicalUnit"
        Units: "Units"
        AssetServer: "AssetServer"
      Id: "f925b94d-6efc-4b94-a50d-0015c391f249"
      CanonicalUnitName: "watt"
      Name: "Power"
  UnitClassLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "unitclasses/{webId}"
        x-link-optional: false
      CanonicalUnit:
        type: "string"
        x-link-path: "unitclasses/{webId}/canonicalunit"
        x-link-optional: false
      Units:
        type: "string"
        x-link-path: "unitclasses/{webId}/units"
        x-link-optional: false
      AssetServer:
        type: "string"
        x-link-path: "assetservers/{webId}"
        x-link-optional: false
    example:
      Self: "Self"
      CanonicalUnit: "CanonicalUnit"
      Units: "Units"
      AssetServer: "AssetServer"
  UnitLinks:
    type: "object"
    properties:
      Self:
        type: "string"
        x-link-path: "units/{webId}"
        x-link-optional: false
      Class:
        type: "string"
        x-link-path: "unitclasses/{webId}"
        x-link-optional: false
      ReferenceUnit:
        type: "string"
        x-link-path: "units/{webId}"
        x-link-optional: true
    example:
      ReferenceUnit: "ReferenceUnit"
      Class: "Class"
      Self: "Self"
  UserInfo:
    type: "object"
    properties:
      IdentityType:
        type: "string"
        example: "WindowsIdentity"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Name:
        type: "string"
        example: "MyDomain\\Username"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      IsAuthenticated:
        type: "boolean"
        example: true
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      SID:
        type: "string"
        format: "sid"
        example: "S-1-5-21-2083424470-1893017325-1469799231-71366"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      ImpersonationLevel:
        type: "string"
        example: "None"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      WebException:
        $ref: "#/definitions/WebException"
    example:
      IdentityType: "WindowsIdentity"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      IsAuthenticated: true
      ImpersonationLevel: "None"
      Name: "MyDomain\\Username"
      SID: "S-1-5-21-2083424470-1893017325-1469799231-71366"
  Value:
    type: "object"
    properties:
      Value:
        type: "object"
        example: 12.3
        properties: {}
      Exception:
        $ref: "#/definitions/Errors"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Value: 12.3
      Exception:
        Errors:
        - "An error has occurred."
  ValueQuery:
    type: "object"
    properties:
      AttributeName:
        type: "string"
        example: "Pressure"
      AttributeUOM:
        type: "string"
        example: "pound-force per square inch"
      AttributeValue:
        type: "object"
        example: 12.3
        properties: {}
      SearchOperator:
        type: "string"
        example: "LessThan"
      WebException:
        $ref: "#/definitions/WebException"
    example:
      AttributeValue: 12.3
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      AttributeUOM: "pound-force per square inch"
      SearchOperator: "LessThan"
      AttributeName: "Pressure"
  Version:
    type: "object"
    properties:
      FullVersion:
        type: "string"
        example: "1.10.0.201"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      MajorMinorRevision:
        type: "string"
        example: "1.10.0"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      Build:
        type: "string"
        example: "201"
        x-disallow-patch: true
        x-disallow-put: true
        x-disallow-post: true
      WebException:
        $ref: "#/definitions/WebException"
    example:
      MajorMinorRevision: "1.10.0"
      WebException:
        Errors:
        - "An error has occurred."
        StatusCode: 500
      Build: "201"
      FullVersion: "1.10.0.201"
  WebException:
    type: "object"
    properties:
      StatusCode:
        type: "integer"
        format: "int32"
        example: 500
        enum:
        - 100
        - 101
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 300
        - 301
        - 302
        - 303
        - 304
        - 305
        - 306
        - 307
        - 400
        - 401
        - 402
        - 403
        - 404
        - 405
        - 406
        - 407
        - 408
        - 409
        - 410
        - 411
        - 412
        - 413
        - 414
        - 415
        - 416
        - 417
        - 426
        - 500
        - 501
        - 502
        - 503
        - 504
        - 505
      Errors:
        type: "array"
        example:
        - "An error has occurred."
        items:
          type: "string"
    example:
      Errors:
      - "An error has occurred."
      StatusCode: 500
